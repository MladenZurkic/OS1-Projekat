GAS LISTING /tmp/ccKXbn17.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z13thread_createPP3TCBPFvPvES2_
   9              	_Z13thread_createPP3TCBPFvPvES2_:
  10              	.LFB40:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** #include "../h/syscall_c.hpp"
   2:src/syscall_c.cpp **** #include "../h/tcb.hpp"
   3:src/syscall_c.cpp **** #include "../h/mySemaphore.hpp"
   4:src/syscall_c.cpp **** #include "../h/riscv.hpp"
   5:src/syscall_c.cpp **** 
   6:src/syscall_c.cpp **** //void* mem_alloc(size_t size) {
   7:src/syscall_c.cpp **** //    Riscv::w_a0(size);
   8:src/syscall_c.cpp **** //    __asm__ volatile("ecall");
   9:src/syscall_c.cpp **** //}
  10:src/syscall_c.cpp **** 
  11:src/syscall_c.cpp **** 
  12:src/syscall_c.cpp **** 
  13:src/syscall_c.cpp **** int thread_create(thread_t* handle, void (*start_routine)(void*), void* arg) {
  12              		.loc 1 13 78
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  14:src/syscall_c.cpp **** 
  15:src/syscall_c.cpp ****     __asm__ volatile("mv a3, %0" : : "r"(arg));
  21              		.loc 1 15 5
  22              		.loc 1 15 47 is_stmt 0
  23              	#APP
  24              	# 15 "src/syscall_c.cpp" 1
  16              	    __asm__ volatile("mv a2, %0" : : "r"(start_routine));
  25              		mv a3, a2
  26              	# 0 "" 2
  27              		.loc 1 16 5 is_stmt 1
  28              		.loc 1 16 57 is_stmt 0
  29              	# 16 "src/syscall_c.cpp" 1
  17              	    __asm__ volatile("mv a1, %0" : : "r"(handle));
  30              		mv a2, a1
  31              	# 0 "" 2
  32              		.loc 1 17 5 is_stmt 1
  33              		.loc 1 17 50 is_stmt 0
  34              	# 17 "src/syscall_c.cpp" 1
  18              	    __asm__ volatile("li a0, 0x11");
  35              		mv a1, a0
  36              	# 0 "" 2
  37              		.loc 1 18 5 is_stmt 1
  38              		.loc 1 18 36 is_stmt 0
  39              	# 18 "src/syscall_c.cpp" 1
  19              	    __asm__ volatile("ecall");
GAS LISTING /tmp/ccKXbn17.s 			page 2


  40              		li a0, 0x11
  41              	# 0 "" 2
  42              		.loc 1 19 5 is_stmt 1
  43              		.loc 1 19 30 is_stmt 0
  44              	# 19 "src/syscall_c.cpp" 1
  20              	
  21:src/syscall_c.cpp ****     uint64 returnValue; //bio je uint64 ali vrednosti mogu da budu i negativne
  45              		ecall
  46              	# 0 "" 2
  47              		.loc 1 21 5 is_stmt 1
  22:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(returnValue));
  48              		.loc 1 22 5
  49              		.loc 1 22 54 is_stmt 0
  50              	# 22 "src/syscall_c.cpp" 1
  23              	    //if(returnValue == (uint32)4294967295) { //maxint
  51              		mv a0, a0
  52              	# 0 "" 2
  53              	.LVL1:
  24:src/syscall_c.cpp ****       //  return -1;
  25:src/syscall_c.cpp ****     //} //Ne mora izgleda da se ovo radi
  26:src/syscall_c.cpp ****     return (int)returnValue;
  54              		.loc 1 26 5 is_stmt 1
  27:src/syscall_c.cpp **** }
  55              		.loc 1 27 1 is_stmt 0
  56              	#NO_APP
  57 0024 1B050500 		sext.w	a0,a0
  58              	.LVL2:
  59 0028 03348100 		ld	s0,8(sp)
  60              		.cfi_restore 8
  61              		.cfi_def_cfa 2, 16
  62 002c 13010101 		addi	sp,sp,16
  63              		.cfi_def_cfa_offset 0
  64 0030 67800000 		jr	ra
  65              		.cfi_endproc
  66              	.LFE40:
  68              		.align	2
  69              		.globl	_Z11thread_exitv
  71              	_Z11thread_exitv:
  72              	.LFB41:
  28:src/syscall_c.cpp **** 
  29:src/syscall_c.cpp **** int thread_exit() {
  73              		.loc 1 29 19 is_stmt 1
  74              		.cfi_startproc
  75 0034 130101FF 		addi	sp,sp,-16
  76              		.cfi_def_cfa_offset 16
  77 0038 23348100 		sd	s0,8(sp)
  78              		.cfi_offset 8, -8
  79 003c 13040101 		addi	s0,sp,16
  80              		.cfi_def_cfa 8, 0
  30:src/syscall_c.cpp ****     Riscv::w_a0(0x12);
  81              		.loc 1 30 5
  82              	.LVL3:
  83              	.LBB4:
  84              	.LBB5:
  85              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
GAS LISTING /tmp/ccKXbn17.s 			page 3


   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccKXbn17.s 			page 4


  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     //read a1 register
  92:src/../h/riscv.hpp ****     static uint64 r_a1();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //write to a1 register
  95:src/../h/riscv.hpp ****     static void w_a1(uint64 writeValue);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     //read a2 register
  98:src/../h/riscv.hpp ****     static uint64 r_a2();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     //write to a2 register
 101:src/../h/riscv.hpp ****     static void w_a2(uint64 writeValue);
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp ****     //read a3 register
 104:src/../h/riscv.hpp ****     static uint64 r_a3();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     //write to a3 register
 107:src/../h/riscv.hpp ****     static void w_a3(uint64 writeValue);
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     //read a4 register
 110:src/../h/riscv.hpp ****     static uint64 r_a4();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     //write to a4 register
 113:src/../h/riscv.hpp ****     static void w_a4(uint64 writeValue);
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****     //read a5 register
 116:src/../h/riscv.hpp ****     static uint64 r_a5();
GAS LISTING /tmp/ccKXbn17.s 			page 5


 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp ****     //write to a5 register
 119:src/../h/riscv.hpp ****     static void w_a5(uint64 writeValue);
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp ****     //read a6 register
 122:src/../h/riscv.hpp ****     static uint64 r_a6();
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     //write to a6 register
 125:src/../h/riscv.hpp ****     static void w_a6(uint64 writeValue);
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp ****     //read a7 register
 128:src/../h/riscv.hpp ****     static uint64 r_a7();
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp ****     //write to a7 register
 131:src/../h/riscv.hpp ****     static void w_a7(uint64 writeValue);
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** private:
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp ****     // supervisor trap handler
 137:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 142:src/../h/riscv.hpp **** };
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     uint64 volatile scause;
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 149:src/../h/riscv.hpp ****     return scause;
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     uint64 volatile sepc;
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 161:src/../h/riscv.hpp ****     return sepc;
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile stvec;
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 173:src/../h/riscv.hpp ****     return stvec;
GAS LISTING /tmp/ccKXbn17.s 			page 6


 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 179:src/../h/riscv.hpp **** }
 180:src/../h/riscv.hpp **** 
 181:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 182:src/../h/riscv.hpp **** {
 183:src/../h/riscv.hpp ****     uint64 volatile stval;
 184:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 185:src/../h/riscv.hpp ****     return stval;
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 191:src/../h/riscv.hpp **** }
 192:src/../h/riscv.hpp **** 
 193:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 194:src/../h/riscv.hpp **** {
 195:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 196:src/../h/riscv.hpp **** }
 197:src/../h/riscv.hpp **** 
 198:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 199:src/../h/riscv.hpp **** {
 200:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 201:src/../h/riscv.hpp **** }
 202:src/../h/riscv.hpp **** 
 203:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 204:src/../h/riscv.hpp **** {
 205:src/../h/riscv.hpp ****     uint64 volatile sip;
 206:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 207:src/../h/riscv.hpp ****     return sip;
 208:src/../h/riscv.hpp **** }
 209:src/../h/riscv.hpp **** 
 210:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 211:src/../h/riscv.hpp **** {
 212:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 213:src/../h/riscv.hpp **** }
 214:src/../h/riscv.hpp **** 
 215:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 216:src/../h/riscv.hpp **** {
 217:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 218:src/../h/riscv.hpp **** }
 219:src/../h/riscv.hpp **** 
 220:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 221:src/../h/riscv.hpp **** {
 222:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 223:src/../h/riscv.hpp **** }
 224:src/../h/riscv.hpp **** 
 225:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 226:src/../h/riscv.hpp **** {
 227:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 228:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 229:src/../h/riscv.hpp ****     return sstatus;
 230:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccKXbn17.s 			page 7


 231:src/../h/riscv.hpp **** 
 232:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 233:src/../h/riscv.hpp **** {
 234:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 235:src/../h/riscv.hpp **** }
 236:src/../h/riscv.hpp **** 
 237:src/../h/riscv.hpp **** //a0
 238:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0()
 239:src/../h/riscv.hpp **** {
 240:src/../h/riscv.hpp ****     uint64 volatile a0;
 241:src/../h/riscv.hpp ****     __asm__ volatile ("mv %0, a0" : "=r"(a0));
 242:src/../h/riscv.hpp ****     return a0;
 243:src/../h/riscv.hpp **** }
 244:src/../h/riscv.hpp **** 
 245:src/../h/riscv.hpp **** 
 246:src/../h/riscv.hpp **** inline void Riscv::w_a0(uint64 writeValue) {
 247:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(writeValue));
  86              		.loc 2 247 5
  87              		.loc 2 247 55 is_stmt 0
  88 0040 93072001 		li	a5,18
  89              	#APP
  90              	# 247 "src/../h/riscv.hpp" 1
 248              	}
  91              		mv a0, a5
  92              	# 0 "" 2
  93              	.LVL4:
  94              	#NO_APP
  95              	.LBE5:
  96              	.LBE4:
  31:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
  97              		.loc 1 31 5 is_stmt 1
  98              		.loc 1 31 31 is_stmt 0
  99              	#APP
 100              	# 31 "src/syscall_c.cpp" 1
  32              	
  33:src/syscall_c.cpp ****     uint64 returnValue;
 101              		ecall
 102              	# 0 "" 2
 103              		.loc 1 33 5 is_stmt 1
  34:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(returnValue));
 104              		.loc 1 34 5
 105              		.loc 1 34 54 is_stmt 0
 106              	# 34 "src/syscall_c.cpp" 1
  35              	    return (int)returnValue;
 107              		mv a0, a0
 108              	# 0 "" 2
 109              	.LVL5:
 110              		.loc 1 35 5 is_stmt 1
  36:src/syscall_c.cpp **** }
 111              		.loc 1 36 1 is_stmt 0
 112              	#NO_APP
 113 0050 1B050500 		sext.w	a0,a0
 114              	.LVL6:
 115 0054 03348100 		ld	s0,8(sp)
 116              		.cfi_restore 8
 117              		.cfi_def_cfa 2, 16
 118 0058 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccKXbn17.s 			page 8


 119              		.cfi_def_cfa_offset 0
 120 005c 67800000 		jr	ra
 121              		.cfi_endproc
 122              	.LFE41:
 124              		.align	2
 125              		.globl	_Z15thread_dispatchv
 127              	_Z15thread_dispatchv:
 128              	.LFB42:
  37:src/syscall_c.cpp **** 
  38:src/syscall_c.cpp **** void thread_dispatch() {
 129              		.loc 1 38 24 is_stmt 1
 130              		.cfi_startproc
 131 0060 130101FF 		addi	sp,sp,-16
 132              		.cfi_def_cfa_offset 16
 133 0064 23348100 		sd	s0,8(sp)
 134              		.cfi_offset 8, -8
 135 0068 13040101 		addi	s0,sp,16
 136              		.cfi_def_cfa 8, 0
  39:src/syscall_c.cpp ****     __asm__ volatile("li a0, 0x13");
 137              		.loc 1 39 5
 138              		.loc 1 39 36 is_stmt 0
 139              	#APP
 140              	# 39 "src/syscall_c.cpp" 1
  40              	    __asm__ volatile ("ecall");
 141              		li a0, 0x13
 142              	# 0 "" 2
 143              		.loc 1 40 5 is_stmt 1
 144              		.loc 1 40 31 is_stmt 0
 145              	# 40 "src/syscall_c.cpp" 1
  41              	
  42:src/syscall_c.cpp **** }
 146              		ecall
 147              	# 0 "" 2
 148              		.loc 1 42 1
 149              	#NO_APP
 150 0074 03348100 		ld	s0,8(sp)
 151              		.cfi_restore 8
 152              		.cfi_def_cfa 2, 16
 153 0078 13010101 		addi	sp,sp,16
 154              		.cfi_def_cfa_offset 0
 155 007c 67800000 		jr	ra
 156              		.cfi_endproc
 157              	.LFE42:
 159              		.align	2
 160              		.globl	_Z11thread_joinP3TCB
 162              	_Z11thread_joinP3TCB:
 163              	.LFB43:
  43:src/syscall_c.cpp **** 
  44:src/syscall_c.cpp **** void thread_join(thread_t handle) {
 164              		.loc 1 44 35 is_stmt 1
 165              		.cfi_startproc
 166              	.LVL7:
 167 0080 130101FF 		addi	sp,sp,-16
 168              		.cfi_def_cfa_offset 16
 169 0084 23348100 		sd	s0,8(sp)
 170              		.cfi_offset 8, -8
 171 0088 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccKXbn17.s 			page 9


 172              		.cfi_def_cfa 8, 0
  45:src/syscall_c.cpp ****     __asm__ volatile ("mv a1, %0" : : "r" (handle));
 173              		.loc 1 45 5
 174              		.loc 1 45 52 is_stmt 0
 175              	#APP
 176              	# 45 "src/syscall_c.cpp" 1
  46              	    __asm__ volatile("li a0, 0x14");
 177              		mv a1, a0
 178              	# 0 "" 2
 179              		.loc 1 46 5 is_stmt 1
 180              		.loc 1 46 36 is_stmt 0
 181              	# 46 "src/syscall_c.cpp" 1
  47              	    __asm__ volatile ("ecall");
 182              		li a0, 0x14
 183              	# 0 "" 2
 184              		.loc 1 47 5 is_stmt 1
 185              		.loc 1 47 31 is_stmt 0
 186              	# 47 "src/syscall_c.cpp" 1
  48              	}
 187              		ecall
 188              	# 0 "" 2
 189              		.loc 1 48 1
 190              	#NO_APP
 191 0098 03348100 		ld	s0,8(sp)
 192              		.cfi_restore 8
 193              		.cfi_def_cfa 2, 16
 194 009c 13010101 		addi	sp,sp,16
 195              		.cfi_def_cfa_offset 0
 196 00a0 67800000 		jr	ra
 197              		.cfi_endproc
 198              	.LFE43:
 200              		.align	2
 201              		.globl	_Z8sem_openPP11MySemaphorej
 203              	_Z8sem_openPP11MySemaphorej:
 204              	.LFB44:
  49:src/syscall_c.cpp **** 
  50:src/syscall_c.cpp **** 
  51:src/syscall_c.cpp **** int sem_open(sem_t* handle, unsigned init) {
 205              		.loc 1 51 44 is_stmt 1
 206              		.cfi_startproc
 207              	.LVL8:
 208 00a4 130101FF 		addi	sp,sp,-16
 209              		.cfi_def_cfa_offset 16
 210 00a8 23348100 		sd	s0,8(sp)
 211              		.cfi_offset 8, -8
 212 00ac 13040101 		addi	s0,sp,16
 213              		.cfi_def_cfa 8, 0
  52:src/syscall_c.cpp ****     __asm__ volatile ("mv a2, %0" : : "r" (init));
 214              		.loc 1 52 5
 215              		.loc 1 52 50 is_stmt 0
 216              	#APP
 217              	# 52 "src/syscall_c.cpp" 1
  53              	    __asm__ volatile ("mv a1, %0" : : "r" (handle));
 218              		mv a2, a1
 219              	# 0 "" 2
 220              		.loc 1 53 5 is_stmt 1
 221              		.loc 1 53 52 is_stmt 0
GAS LISTING /tmp/ccKXbn17.s 			page 10


 222              	# 53 "src/syscall_c.cpp" 1
  54              	    __asm__ volatile("li a0, 0x21");
 223              		mv a1, a0
 224              	# 0 "" 2
 225              		.loc 1 54 5 is_stmt 1
 226              		.loc 1 54 36 is_stmt 0
 227              	# 54 "src/syscall_c.cpp" 1
  55              	    __asm__ volatile ("ecall");
 228              		li a0, 0x21
 229              	# 0 "" 2
 230              		.loc 1 55 5 is_stmt 1
 231              		.loc 1 55 31 is_stmt 0
 232              	# 55 "src/syscall_c.cpp" 1
  56              	
  57:src/syscall_c.cpp ****     uint64 returnValue;
 233              		ecall
 234              	# 0 "" 2
 235              		.loc 1 57 5 is_stmt 1
  58:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(returnValue));
 236              		.loc 1 58 5
 237              		.loc 1 58 54 is_stmt 0
 238              	# 58 "src/syscall_c.cpp" 1
  59              	    return (int)returnValue;
 239              		mv a0, a0
 240              	# 0 "" 2
 241              	.LVL9:
 242              		.loc 1 59 5 is_stmt 1
  60:src/syscall_c.cpp **** }
 243              		.loc 1 60 1 is_stmt 0
 244              	#NO_APP
 245 00c4 1B050500 		sext.w	a0,a0
 246              	.LVL10:
 247 00c8 03348100 		ld	s0,8(sp)
 248              		.cfi_restore 8
 249              		.cfi_def_cfa 2, 16
 250 00cc 13010101 		addi	sp,sp,16
 251              		.cfi_def_cfa_offset 0
 252 00d0 67800000 		jr	ra
 253              		.cfi_endproc
 254              	.LFE44:
 256              		.align	2
 257              		.globl	_Z9sem_closeP11MySemaphore
 259              	_Z9sem_closeP11MySemaphore:
 260              	.LFB45:
  61:src/syscall_c.cpp **** 
  62:src/syscall_c.cpp **** int sem_close(sem_t handle) {
 261              		.loc 1 62 29 is_stmt 1
 262              		.cfi_startproc
 263              	.LVL11:
 264 00d4 130101FF 		addi	sp,sp,-16
 265              		.cfi_def_cfa_offset 16
 266 00d8 23348100 		sd	s0,8(sp)
 267              		.cfi_offset 8, -8
 268 00dc 13040101 		addi	s0,sp,16
 269              		.cfi_def_cfa 8, 0
  63:src/syscall_c.cpp ****     __asm__ volatile ("mv a1, %0" : : "r" (handle));
 270              		.loc 1 63 5
GAS LISTING /tmp/ccKXbn17.s 			page 11


 271              		.loc 1 63 52 is_stmt 0
 272              	#APP
 273              	# 63 "src/syscall_c.cpp" 1
  64              	    __asm__ volatile("li a0, 0x22");
 274              		mv a1, a0
 275              	# 0 "" 2
 276              		.loc 1 64 5 is_stmt 1
 277              		.loc 1 64 36 is_stmt 0
 278              	# 64 "src/syscall_c.cpp" 1
  65              	    __asm__ volatile ("ecall");
 279              		li a0, 0x22
 280              	# 0 "" 2
 281              		.loc 1 65 5 is_stmt 1
 282              		.loc 1 65 31 is_stmt 0
 283              	# 65 "src/syscall_c.cpp" 1
  66              	
  67:src/syscall_c.cpp ****     uint64 returnValue;
 284              		ecall
 285              	# 0 "" 2
 286              		.loc 1 67 5 is_stmt 1
  68:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(returnValue));
 287              		.loc 1 68 5
 288              		.loc 1 68 54 is_stmt 0
 289              	# 68 "src/syscall_c.cpp" 1
  69              	    return (int)returnValue;
 290              		mv a0, a0
 291              	# 0 "" 2
 292              	.LVL12:
 293              		.loc 1 69 5 is_stmt 1
  70:src/syscall_c.cpp **** }
 294              		.loc 1 70 1 is_stmt 0
 295              	#NO_APP
 296 00f0 1B050500 		sext.w	a0,a0
 297              	.LVL13:
 298 00f4 03348100 		ld	s0,8(sp)
 299              		.cfi_restore 8
 300              		.cfi_def_cfa 2, 16
 301 00f8 13010101 		addi	sp,sp,16
 302              		.cfi_def_cfa_offset 0
 303 00fc 67800000 		jr	ra
 304              		.cfi_endproc
 305              	.LFE45:
 307              		.align	2
 308              		.globl	_Z8sem_waitP11MySemaphore
 310              	_Z8sem_waitP11MySemaphore:
 311              	.LFB46:
  71:src/syscall_c.cpp **** 
  72:src/syscall_c.cpp **** int sem_wait(sem_t id) {
 312              		.loc 1 72 24 is_stmt 1
 313              		.cfi_startproc
 314              	.LVL14:
 315 0100 130101FF 		addi	sp,sp,-16
 316              		.cfi_def_cfa_offset 16
 317 0104 23348100 		sd	s0,8(sp)
 318              		.cfi_offset 8, -8
 319 0108 13040101 		addi	s0,sp,16
 320              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccKXbn17.s 			page 12


  73:src/syscall_c.cpp ****     __asm__ volatile ("mv a1, %0" : : "r" (id));
 321              		.loc 1 73 5
 322              		.loc 1 73 48 is_stmt 0
 323              	#APP
 324              	# 73 "src/syscall_c.cpp" 1
  74              	    __asm__ volatile("li a0, 0x23");
 325              		mv a1, a0
 326              	# 0 "" 2
 327              		.loc 1 74 5 is_stmt 1
 328              		.loc 1 74 36 is_stmt 0
 329              	# 74 "src/syscall_c.cpp" 1
  75              	    __asm__ volatile ("ecall");
 330              		li a0, 0x23
 331              	# 0 "" 2
 332              		.loc 1 75 5 is_stmt 1
 333              		.loc 1 75 31 is_stmt 0
 334              	# 75 "src/syscall_c.cpp" 1
  76              	
  77:src/syscall_c.cpp ****     uint64 returnValue;
 335              		ecall
 336              	# 0 "" 2
 337              		.loc 1 77 5 is_stmt 1
  78:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(returnValue));
 338              		.loc 1 78 5
 339              		.loc 1 78 54 is_stmt 0
 340              	# 78 "src/syscall_c.cpp" 1
  79              	    return (int)returnValue;
 341              		mv a0, a0
 342              	# 0 "" 2
 343              	.LVL15:
 344              		.loc 1 79 5 is_stmt 1
  80:src/syscall_c.cpp **** }
 345              		.loc 1 80 1 is_stmt 0
 346              	#NO_APP
 347 011c 1B050500 		sext.w	a0,a0
 348              	.LVL16:
 349 0120 03348100 		ld	s0,8(sp)
 350              		.cfi_restore 8
 351              		.cfi_def_cfa 2, 16
 352 0124 13010101 		addi	sp,sp,16
 353              		.cfi_def_cfa_offset 0
 354 0128 67800000 		jr	ra
 355              		.cfi_endproc
 356              	.LFE46:
 358              		.align	2
 359              		.globl	_Z10sem_signalP11MySemaphore
 361              	_Z10sem_signalP11MySemaphore:
 362              	.LFB47:
  81:src/syscall_c.cpp **** 
  82:src/syscall_c.cpp **** int sem_signal(sem_t id) {
 363              		.loc 1 82 26 is_stmt 1
 364              		.cfi_startproc
 365              	.LVL17:
 366 012c 130101FF 		addi	sp,sp,-16
 367              		.cfi_def_cfa_offset 16
 368 0130 23348100 		sd	s0,8(sp)
 369              		.cfi_offset 8, -8
GAS LISTING /tmp/ccKXbn17.s 			page 13


 370 0134 13040101 		addi	s0,sp,16
 371              		.cfi_def_cfa 8, 0
  83:src/syscall_c.cpp ****     __asm__ volatile ("mv a1, %0" : : "r" (id));
 372              		.loc 1 83 5
 373              		.loc 1 83 48 is_stmt 0
 374              	#APP
 375              	# 83 "src/syscall_c.cpp" 1
  84              	    __asm__ volatile("li a0, 0x24");
 376              		mv a1, a0
 377              	# 0 "" 2
 378              		.loc 1 84 5 is_stmt 1
 379              		.loc 1 84 36 is_stmt 0
 380              	# 84 "src/syscall_c.cpp" 1
  85              	    __asm__ volatile ("ecall");
 381              		li a0, 0x24
 382              	# 0 "" 2
 383              		.loc 1 85 5 is_stmt 1
 384              		.loc 1 85 31 is_stmt 0
 385              	# 85 "src/syscall_c.cpp" 1
  86              	
  87:src/syscall_c.cpp ****     uint64 returnValue;
 386              		ecall
 387              	# 0 "" 2
 388              		.loc 1 87 5 is_stmt 1
  88:src/syscall_c.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(returnValue));
 389              		.loc 1 88 5
 390              		.loc 1 88 54 is_stmt 0
 391              	# 88 "src/syscall_c.cpp" 1
  89              	    return (int)returnValue;
 392              		mv a0, a0
 393              	# 0 "" 2
 394              	.LVL18:
 395              		.loc 1 89 5 is_stmt 1
  90:src/syscall_c.cpp **** }
 396              		.loc 1 90 1 is_stmt 0
 397              	#NO_APP
 398 0148 1B050500 		sext.w	a0,a0
 399              	.LVL19:
 400 014c 03348100 		ld	s0,8(sp)
 401              		.cfi_restore 8
 402              		.cfi_def_cfa 2, 16
 403 0150 13010101 		addi	sp,sp,16
 404              		.cfi_def_cfa_offset 0
 405 0154 67800000 		jr	ra
 406              		.cfi_endproc
 407              	.LFE47:
 409              	.Letext0:
 410              		.file 3 "src/../h/../lib/hw.h"
 411              		.file 4 "src/../h/list.hpp"
 412              		.file 5 "src/../h/tcb.hpp"
 413              		.file 6 "src/../h/mySemaphore.hpp"
 414              		.file 7 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccKXbn17.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccKXbn17.s:9      .text:0000000000000000 _Z13thread_createPP3TCBPFvPvES2_
     /tmp/ccKXbn17.s:13     .text:0000000000000000 .L0 
     /tmp/ccKXbn17.s:15     .text:0000000000000000 .L0 
     /tmp/ccKXbn17.s:16     .text:0000000000000004 .L0 
     /tmp/ccKXbn17.s:18     .text:0000000000000008 .L0 
     /tmp/ccKXbn17.s:20     .text:000000000000000c .L0 
     /tmp/ccKXbn17.s:22     .text:000000000000000c .L0 
   src/syscall_c.cpp:15     .text:000000000000000c .L0 
     /tmp/ccKXbn17.s:28     .text:0000000000000010 .L0 
   src/syscall_c.cpp:16     .text:0000000000000010 .L0 
     /tmp/ccKXbn17.s:33     .text:0000000000000014 .L0 
   src/syscall_c.cpp:17     .text:0000000000000014 .L0 
     /tmp/ccKXbn17.s:38     .text:0000000000000018 .L0 
   src/syscall_c.cpp:18     .text:0000000000000018 .L0 
     /tmp/ccKXbn17.s:43     .text:000000000000001c .L0 
   src/syscall_c.cpp:19     .text:000000000000001c .L0 
     /tmp/ccKXbn17.s:48     .text:0000000000000020 .L0 
     /tmp/ccKXbn17.s:49     .text:0000000000000020 .L0 
   src/syscall_c.cpp:22     .text:0000000000000020 .L0 
     /tmp/ccKXbn17.s:55     .text:0000000000000024 .L0 
     /tmp/ccKXbn17.s:57     .text:0000000000000024 .L0 
     /tmp/ccKXbn17.s:60     .text:000000000000002c .L0 
     /tmp/ccKXbn17.s:61     .text:000000000000002c .L0 
     /tmp/ccKXbn17.s:63     .text:0000000000000030 .L0 
     /tmp/ccKXbn17.s:65     .text:0000000000000034 .L0 
     /tmp/ccKXbn17.s:71     .text:0000000000000034 _Z11thread_exitv
     /tmp/ccKXbn17.s:74     .text:0000000000000034 .L0 
     /tmp/ccKXbn17.s:75     .text:0000000000000034 .L0 
     /tmp/ccKXbn17.s:76     .text:0000000000000038 .L0 
     /tmp/ccKXbn17.s:78     .text:000000000000003c .L0 
     /tmp/ccKXbn17.s:80     .text:0000000000000040 .L0 
     /tmp/ccKXbn17.s:86     .text:0000000000000040 .L0 
     /tmp/ccKXbn17.s:87     .text:0000000000000040 .L0 
     /tmp/ccKXbn17.s:88     .text:0000000000000040 .L0 
     /tmp/ccKXbn17.s:98     .text:0000000000000048 .L0 
   src/syscall_c.cpp:31     .text:0000000000000048 .L0 
     /tmp/ccKXbn17.s:104    .text:000000000000004c .L0 
     /tmp/ccKXbn17.s:105    .text:000000000000004c .L0 
   src/syscall_c.cpp:34     .text:000000000000004c .L0 
     /tmp/ccKXbn17.s:111    .text:0000000000000050 .L0 
     /tmp/ccKXbn17.s:113    .text:0000000000000050 .L0 
     /tmp/ccKXbn17.s:116    .text:0000000000000058 .L0 
     /tmp/ccKXbn17.s:117    .text:0000000000000058 .L0 
     /tmp/ccKXbn17.s:119    .text:000000000000005c .L0 
     /tmp/ccKXbn17.s:121    .text:0000000000000060 .L0 
     /tmp/ccKXbn17.s:127    .text:0000000000000060 _Z15thread_dispatchv
     /tmp/ccKXbn17.s:130    .text:0000000000000060 .L0 
     /tmp/ccKXbn17.s:131    .text:0000000000000060 .L0 
     /tmp/ccKXbn17.s:132    .text:0000000000000064 .L0 
     /tmp/ccKXbn17.s:134    .text:0000000000000068 .L0 
     /tmp/ccKXbn17.s:136    .text:000000000000006c .L0 
     /tmp/ccKXbn17.s:138    .text:000000000000006c .L0 
   src/syscall_c.cpp:39     .text:000000000000006c .L0 
     /tmp/ccKXbn17.s:144    .text:0000000000000070 .L0 
   src/syscall_c.cpp:40     .text:0000000000000070 .L0 
GAS LISTING /tmp/ccKXbn17.s 			page 15


     /tmp/ccKXbn17.s:150    .text:0000000000000074 .L0 
     /tmp/ccKXbn17.s:151    .text:0000000000000078 .L0 
     /tmp/ccKXbn17.s:152    .text:0000000000000078 .L0 
     /tmp/ccKXbn17.s:154    .text:000000000000007c .L0 
     /tmp/ccKXbn17.s:156    .text:0000000000000080 .L0 
     /tmp/ccKXbn17.s:162    .text:0000000000000080 _Z11thread_joinP3TCB
     /tmp/ccKXbn17.s:165    .text:0000000000000080 .L0 
     /tmp/ccKXbn17.s:167    .text:0000000000000080 .L0 
     /tmp/ccKXbn17.s:168    .text:0000000000000084 .L0 
     /tmp/ccKXbn17.s:170    .text:0000000000000088 .L0 
     /tmp/ccKXbn17.s:172    .text:000000000000008c .L0 
     /tmp/ccKXbn17.s:174    .text:000000000000008c .L0 
   src/syscall_c.cpp:45     .text:000000000000008c .L0 
     /tmp/ccKXbn17.s:180    .text:0000000000000090 .L0 
   src/syscall_c.cpp:46     .text:0000000000000090 .L0 
     /tmp/ccKXbn17.s:185    .text:0000000000000094 .L0 
   src/syscall_c.cpp:47     .text:0000000000000094 .L0 
     /tmp/ccKXbn17.s:191    .text:0000000000000098 .L0 
     /tmp/ccKXbn17.s:192    .text:000000000000009c .L0 
     /tmp/ccKXbn17.s:193    .text:000000000000009c .L0 
     /tmp/ccKXbn17.s:195    .text:00000000000000a0 .L0 
     /tmp/ccKXbn17.s:197    .text:00000000000000a4 .L0 
     /tmp/ccKXbn17.s:203    .text:00000000000000a4 _Z8sem_openPP11MySemaphorej
     /tmp/ccKXbn17.s:206    .text:00000000000000a4 .L0 
     /tmp/ccKXbn17.s:208    .text:00000000000000a4 .L0 
     /tmp/ccKXbn17.s:209    .text:00000000000000a8 .L0 
     /tmp/ccKXbn17.s:211    .text:00000000000000ac .L0 
     /tmp/ccKXbn17.s:213    .text:00000000000000b0 .L0 
     /tmp/ccKXbn17.s:215    .text:00000000000000b0 .L0 
   src/syscall_c.cpp:52     .text:00000000000000b0 .L0 
     /tmp/ccKXbn17.s:221    .text:00000000000000b4 .L0 
   src/syscall_c.cpp:53     .text:00000000000000b4 .L0 
     /tmp/ccKXbn17.s:226    .text:00000000000000b8 .L0 
   src/syscall_c.cpp:54     .text:00000000000000b8 .L0 
     /tmp/ccKXbn17.s:231    .text:00000000000000bc .L0 
   src/syscall_c.cpp:55     .text:00000000000000bc .L0 
     /tmp/ccKXbn17.s:236    .text:00000000000000c0 .L0 
     /tmp/ccKXbn17.s:237    .text:00000000000000c0 .L0 
   src/syscall_c.cpp:58     .text:00000000000000c0 .L0 
     /tmp/ccKXbn17.s:243    .text:00000000000000c4 .L0 
     /tmp/ccKXbn17.s:245    .text:00000000000000c4 .L0 
     /tmp/ccKXbn17.s:248    .text:00000000000000cc .L0 
     /tmp/ccKXbn17.s:249    .text:00000000000000cc .L0 
     /tmp/ccKXbn17.s:251    .text:00000000000000d0 .L0 
     /tmp/ccKXbn17.s:253    .text:00000000000000d4 .L0 
     /tmp/ccKXbn17.s:259    .text:00000000000000d4 _Z9sem_closeP11MySemaphore
     /tmp/ccKXbn17.s:262    .text:00000000000000d4 .L0 
     /tmp/ccKXbn17.s:264    .text:00000000000000d4 .L0 
     /tmp/ccKXbn17.s:265    .text:00000000000000d8 .L0 
     /tmp/ccKXbn17.s:267    .text:00000000000000dc .L0 
     /tmp/ccKXbn17.s:269    .text:00000000000000e0 .L0 
     /tmp/ccKXbn17.s:271    .text:00000000000000e0 .L0 
   src/syscall_c.cpp:63     .text:00000000000000e0 .L0 
     /tmp/ccKXbn17.s:277    .text:00000000000000e4 .L0 
   src/syscall_c.cpp:64     .text:00000000000000e4 .L0 
     /tmp/ccKXbn17.s:282    .text:00000000000000e8 .L0 
   src/syscall_c.cpp:65     .text:00000000000000e8 .L0 
GAS LISTING /tmp/ccKXbn17.s 			page 16


     /tmp/ccKXbn17.s:287    .text:00000000000000ec .L0 
     /tmp/ccKXbn17.s:288    .text:00000000000000ec .L0 
   src/syscall_c.cpp:68     .text:00000000000000ec .L0 
     /tmp/ccKXbn17.s:294    .text:00000000000000f0 .L0 
     /tmp/ccKXbn17.s:296    .text:00000000000000f0 .L0 
     /tmp/ccKXbn17.s:299    .text:00000000000000f8 .L0 
     /tmp/ccKXbn17.s:300    .text:00000000000000f8 .L0 
     /tmp/ccKXbn17.s:302    .text:00000000000000fc .L0 
     /tmp/ccKXbn17.s:304    .text:0000000000000100 .L0 
     /tmp/ccKXbn17.s:310    .text:0000000000000100 _Z8sem_waitP11MySemaphore
     /tmp/ccKXbn17.s:313    .text:0000000000000100 .L0 
     /tmp/ccKXbn17.s:315    .text:0000000000000100 .L0 
     /tmp/ccKXbn17.s:316    .text:0000000000000104 .L0 
     /tmp/ccKXbn17.s:318    .text:0000000000000108 .L0 
     /tmp/ccKXbn17.s:320    .text:000000000000010c .L0 
     /tmp/ccKXbn17.s:322    .text:000000000000010c .L0 
   src/syscall_c.cpp:73     .text:000000000000010c .L0 
     /tmp/ccKXbn17.s:328    .text:0000000000000110 .L0 
   src/syscall_c.cpp:74     .text:0000000000000110 .L0 
     /tmp/ccKXbn17.s:333    .text:0000000000000114 .L0 
   src/syscall_c.cpp:75     .text:0000000000000114 .L0 
     /tmp/ccKXbn17.s:338    .text:0000000000000118 .L0 
     /tmp/ccKXbn17.s:339    .text:0000000000000118 .L0 
   src/syscall_c.cpp:78     .text:0000000000000118 .L0 
     /tmp/ccKXbn17.s:345    .text:000000000000011c .L0 
     /tmp/ccKXbn17.s:347    .text:000000000000011c .L0 
     /tmp/ccKXbn17.s:350    .text:0000000000000124 .L0 
     /tmp/ccKXbn17.s:351    .text:0000000000000124 .L0 
     /tmp/ccKXbn17.s:353    .text:0000000000000128 .L0 
     /tmp/ccKXbn17.s:355    .text:000000000000012c .L0 
     /tmp/ccKXbn17.s:361    .text:000000000000012c _Z10sem_signalP11MySemaphore
     /tmp/ccKXbn17.s:364    .text:000000000000012c .L0 
     /tmp/ccKXbn17.s:366    .text:000000000000012c .L0 
     /tmp/ccKXbn17.s:367    .text:0000000000000130 .L0 
     /tmp/ccKXbn17.s:369    .text:0000000000000134 .L0 
     /tmp/ccKXbn17.s:371    .text:0000000000000138 .L0 
     /tmp/ccKXbn17.s:373    .text:0000000000000138 .L0 
   src/syscall_c.cpp:83     .text:0000000000000138 .L0 
     /tmp/ccKXbn17.s:379    .text:000000000000013c .L0 
   src/syscall_c.cpp:84     .text:000000000000013c .L0 
     /tmp/ccKXbn17.s:384    .text:0000000000000140 .L0 
   src/syscall_c.cpp:85     .text:0000000000000140 .L0 
     /tmp/ccKXbn17.s:389    .text:0000000000000144 .L0 
     /tmp/ccKXbn17.s:390    .text:0000000000000144 .L0 
   src/syscall_c.cpp:88     .text:0000000000000144 .L0 
     /tmp/ccKXbn17.s:396    .text:0000000000000148 .L0 
     /tmp/ccKXbn17.s:398    .text:0000000000000148 .L0 
     /tmp/ccKXbn17.s:401    .text:0000000000000150 .L0 
     /tmp/ccKXbn17.s:402    .text:0000000000000150 .L0 
     /tmp/ccKXbn17.s:404    .text:0000000000000154 .L0 
     /tmp/ccKXbn17.s:406    .text:0000000000000158 .L0 
     /tmp/ccKXbn17.s:415    .text:0000000000000158 .L0 
     /tmp/ccKXbn17.s:1686   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccKXbn17.s:2962   .debug_str:00000000000008d9 .LASF176
     /tmp/ccKXbn17.s:2824   .debug_str:00000000000004b5 .LASF177
     /tmp/ccKXbn17.s:2944   .debug_str:0000000000000841 .LASF178
     /tmp/ccKXbn17.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccKXbn17.s 			page 17


     /tmp/ccKXbn17.s:409    .text:0000000000000158 .Letext0
     /tmp/ccKXbn17.s:2666   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccKXbn17.s:2772   .debug_str:000000000000035f .LASF0
     /tmp/ccKXbn17.s:2808   .debug_str:0000000000000451 .LASF1
     /tmp/ccKXbn17.s:2902   .debug_str:0000000000000735 .LASF2
     /tmp/ccKXbn17.s:2910   .debug_str:0000000000000770 .LASF4
     /tmp/ccKXbn17.s:2780   .debug_str:000000000000039c .LASF3
     /tmp/ccKXbn17.s:2684   .debug_str:00000000000000a5 .LASF5
     /tmp/ccKXbn17.s:2874   .debug_str:000000000000063d .LASF6
     /tmp/ccKXbn17.s:2798   .debug_str:00000000000003fa .LASF7
     /tmp/ccKXbn17.s:2754   .debug_str:00000000000002ce .LASF8
     /tmp/ccKXbn17.s:2760   .debug_str:000000000000030b .LASF9
     /tmp/ccKXbn17.s:2710   .debug_str:0000000000000157 .LASF10
     /tmp/ccKXbn17.s:2750   .debug_str:00000000000002ae .LASF11
     /tmp/ccKXbn17.s:2726   .debug_str:00000000000001d7 .LASF12
     /tmp/ccKXbn17.s:2708   .debug_str:0000000000000147 .LASF13
     /tmp/ccKXbn17.s:2940   .debug_str:0000000000000820 .LASF14
     /tmp/ccKXbn17.s:2742   .debug_str:0000000000000243 .LASF15
     /tmp/ccKXbn17.s:2928   .debug_str:00000000000007ca .LASF16
     /tmp/ccKXbn17.s:2996   .debug_str:0000000000000a8d .LASF34
     /tmp/ccKXbn17.s:2986   .debug_str:0000000000000a4a .LASF179
     /tmp/ccKXbn17.s:2932   .debug_str:00000000000007f3 .LASF17
     /tmp/ccKXbn17.s:2840   .debug_str:000000000000054b .LASF18
     /tmp/ccKXbn17.s:2834   .debug_str:0000000000000527 .LASF19
     /tmp/ccKXbn17.s:2930   .debug_str:00000000000007e0 .LASF21
     /tmp/ccKXbn17.s:2748   .debug_str:0000000000000297 .LASF26
     /tmp/ccKXbn17.s:2904   .debug_str:0000000000000743 .LASF156
     /tmp/ccKXbn17.s:2894   .debug_str:00000000000006f2 .LASF158
     /tmp/ccKXbn17.s:2804   .debug_str:000000000000043a .LASF20
     /tmp/ccKXbn17.s:2702   .debug_str:00000000000000fd .LASF22
     /tmp/ccKXbn17.s:2816   .debug_str:000000000000048b .LASF23
     /tmp/ccKXbn17.s:2744   .debug_str:0000000000000259 .LASF24
     /tmp/ccKXbn17.s:2870   .debug_str:0000000000000620 .LASF25
     /tmp/ccKXbn17.s:2998   .debug_str:0000000000000a97 .LASF27
     /tmp/ccKXbn17.s:3042   .debug_str:0000000000000bcc .LASF28
     /tmp/ccKXbn17.s:3028   .debug_str:0000000000000b57 .LASF29
     /tmp/ccKXbn17.s:2920   .debug_str:00000000000007a7 .LASF30
     /tmp/ccKXbn17.s:2796   .debug_str:00000000000003dd .LASF31
     /tmp/ccKXbn17.s:2888   .debug_str:00000000000006d0 .LASF32
     /tmp/ccKXbn17.s:2678   .debug_str:0000000000000057 .LASF33
     /tmp/ccKXbn17.s:2948   .debug_str:000000000000088c .LASF180
     /tmp/ccKXbn17.s:2912   .debug_str:0000000000000777 .LASF35
     /tmp/ccKXbn17.s:2682   .debug_str:0000000000000099 .LASF36
     /tmp/ccKXbn17.s:2950   .debug_str:0000000000000894 .LASF37
     /tmp/ccKXbn17.s:2836   .debug_str:000000000000052c .LASF38
     /tmp/ccKXbn17.s:2696   .debug_str:00000000000000de .LASF39
     /tmp/ccKXbn17.s:2982   .debug_str:0000000000000a2a .LASF40
     /tmp/ccKXbn17.s:3018   .debug_str:0000000000000b27 .LASF41
     /tmp/ccKXbn17.s:2704   .debug_str:000000000000011a .LASF42
     /tmp/ccKXbn17.s:2952   .debug_str:000000000000089f .LASF43
     /tmp/ccKXbn17.s:2722   .debug_str:00000000000001a7 .LASF44
     /tmp/ccKXbn17.s:2938   .debug_str:0000000000000813 .LASF45
     /tmp/ccKXbn17.s:2990   .debug_str:0000000000000a5d .LASF46
     /tmp/ccKXbn17.s:2860   .debug_str:00000000000005e2 .LASF181
     /tmp/ccKXbn17.s:2810   .debug_str:0000000000000464 .LASF78
     /tmp/ccKXbn17.s:2966   .debug_str:00000000000009b1 .LASF80
     /tmp/ccKXbn17.s:2960   .debug_str:00000000000008d1 .LASF182
GAS LISTING /tmp/ccKXbn17.s 			page 18


     /tmp/ccKXbn17.s:2964   .debug_str:000000000000099d .LASF183
     /tmp/ccKXbn17.s:2672   .debug_str:0000000000000026 .LASF47
     /tmp/ccKXbn17.s:2924   .debug_str:00000000000007bb .LASF48
     /tmp/ccKXbn17.s:2976   .debug_str:00000000000009fc .LASF49
     /tmp/ccKXbn17.s:2926   .debug_str:00000000000007c1 .LASF50
     /tmp/ccKXbn17.s:2852   .debug_str:000000000000059f .LASF51
     /tmp/ccKXbn17.s:2700   .debug_str:00000000000000ef .LASF52
     /tmp/ccKXbn17.s:2812   .debug_str:000000000000046a .LASF54
     /tmp/ccKXbn17.s:2728   .debug_str:00000000000001e7 .LASF56
     /tmp/ccKXbn17.s:2680   .debug_str:0000000000000071 .LASF58
     /tmp/ccKXbn17.s:2734   .debug_str:000000000000021e .LASF53
     /tmp/ccKXbn17.s:2718   .debug_str:000000000000018f .LASF55
     /tmp/ccKXbn17.s:2956   .debug_str:00000000000008bb .LASF57
     /tmp/ccKXbn17.s:2752   .debug_str:00000000000002bd .LASF59
     /tmp/ccKXbn17.s:2908   .debug_str:0000000000000765 .LASF184
     /tmp/ccKXbn17.s:2818   .debug_str:0000000000000493 .LASF60
     /tmp/ccKXbn17.s:2716   .debug_str:0000000000000183 .LASF61
     /tmp/ccKXbn17.s:2668   .debug_str:0000000000000000 .LASF62
     /tmp/ccKXbn17.s:2736   .debug_str:0000000000000227 .LASF63
     /tmp/ccKXbn17.s:2706   .debug_str:000000000000012f .LASF64
     /tmp/ccKXbn17.s:2946   .debug_str:0000000000000885 .LASF65
     /tmp/ccKXbn17.s:2724   .debug_str:00000000000001bd .LASF66
     /tmp/ccKXbn17.s:2898   .debug_str:000000000000071a .LASF67
     /tmp/ccKXbn17.s:3012   .debug_str:0000000000000aef .LASF68
     /tmp/ccKXbn17.s:2968   .debug_str:00000000000009c1 .LASF69
     /tmp/ccKXbn17.s:2880   .debug_str:0000000000000682 .LASF70
     /tmp/ccKXbn17.s:2688   .debug_str:00000000000000b7 .LASF71
     /tmp/ccKXbn17.s:3010   .debug_str:0000000000000ad6 .LASF72
     /tmp/ccKXbn17.s:3000   .debug_str:0000000000000ab5 .LASF73
     /tmp/ccKXbn17.s:2766   .debug_str:000000000000032f .LASF74
     /tmp/ccKXbn17.s:2994   .debug_str:0000000000000a84 .LASF75
     /tmp/ccKXbn17.s:3024   .debug_str:0000000000000b40 .LASF76
     /tmp/ccKXbn17.s:3002   .debug_str:0000000000000abc .LASF77
     /tmp/ccKXbn17.s:2764   .debug_str:0000000000000324 .LASF79
     /tmp/ccKXbn17.s:2770   .debug_str:0000000000000347 .LASF81
     /tmp/ccKXbn17.s:2984   .debug_str:0000000000000a41 .LASF83
     /tmp/ccKXbn17.s:2978   .debug_str:0000000000000a04 .LASF85
     /tmp/ccKXbn17.s:3036   .debug_str:0000000000000baa .LASF82
     /tmp/ccKXbn17.s:2854   .debug_str:00000000000005a7 .LASF88
     /tmp/ccKXbn17.s:2992   .debug_str:0000000000000a7d .LASF84
     /tmp/ccKXbn17.s:2882   .debug_str:000000000000069f .LASF86
     /tmp/ccKXbn17.s:2842   .debug_str:0000000000000550 .LASF87
     /tmp/ccKXbn17.s:2800   .debug_str:000000000000040d .LASF89
     /tmp/ccKXbn17.s:3020   .debug_str:0000000000000b31 .LASF90
     /tmp/ccKXbn17.s:2936   .debug_str:00000000000007ff .LASF91
     /tmp/ccKXbn17.s:2838   .debug_str:0000000000000543 .LASF92
     /tmp/ccKXbn17.s:3030   .debug_str:0000000000000b72 .LASF93
     /tmp/ccKXbn17.s:2814   .debug_str:0000000000000483 .LASF94
     /tmp/ccKXbn17.s:2886   .debug_str:00000000000006bc .LASF95
     /tmp/ccKXbn17.s:3038   .debug_str:0000000000000bb3 .LASF96
     /tmp/ccKXbn17.s:2776   .debug_str:0000000000000372 .LASF97
     /tmp/ccKXbn17.s:2934   .debug_str:00000000000007f8 .LASF98
     /tmp/ccKXbn17.s:2914   .debug_str:000000000000077c .LASF99
     /tmp/ccKXbn17.s:2916   .debug_str:000000000000078f .LASF100
     /tmp/ccKXbn17.s:2714   .debug_str:0000000000000170 .LASF101
     /tmp/ccKXbn17.s:2740   .debug_str:000000000000023d .LASF102
     /tmp/ccKXbn17.s:2768   .debug_str:0000000000000335 .LASF103
GAS LISTING /tmp/ccKXbn17.s 			page 19


     /tmp/ccKXbn17.s:2774   .debug_str:000000000000036c .LASF104
     /tmp/ccKXbn17.s:2732   .debug_str:000000000000020c .LASF105
     /tmp/ccKXbn17.s:2686   .debug_str:00000000000000ac .LASF106
     /tmp/ccKXbn17.s:2906   .debug_str:000000000000074d .LASF107
     /tmp/ccKXbn17.s:2900   .debug_str:000000000000072a .LASF108
     /tmp/ccKXbn17.s:3032   .debug_str:0000000000000b86 .LASF109
     /tmp/ccKXbn17.s:3004   .debug_str:0000000000000ac2 .LASF110
     /tmp/ccKXbn17.s:2778   .debug_str:0000000000000386 .LASF111
     /tmp/ccKXbn17.s:2712   .debug_str:0000000000000166 .LASF112
     /tmp/ccKXbn17.s:2826   .debug_str:00000000000004c7 .LASF113
     /tmp/ccKXbn17.s:3014   .debug_str:0000000000000b13 .LASF114
     /tmp/ccKXbn17.s:2758   .debug_str:00000000000002ef .LASF115
     /tmp/ccKXbn17.s:2918   .debug_str:0000000000000796 .LASF116
     /tmp/ccKXbn17.s:2866   .debug_str:00000000000005fd .LASF117
     /tmp/ccKXbn17.s:3006   .debug_str:0000000000000acc .LASF118
     /tmp/ccKXbn17.s:2862   .debug_str:00000000000005e7 .LASF119
     /tmp/ccKXbn17.s:2784   .debug_str:00000000000003bf .LASF120
     /tmp/ccKXbn17.s:2958   .debug_str:00000000000008c0 .LASF121
     /tmp/ccKXbn17.s:3008   .debug_str:0000000000000ad1 .LASF122
     /tmp/ccKXbn17.s:2782   .debug_str:00000000000003ae .LASF123
     /tmp/ccKXbn17.s:2786   .debug_str:00000000000003c4 .LASF124
     /tmp/ccKXbn17.s:2872   .debug_str:000000000000062c .LASF125
     /tmp/ccKXbn17.s:2850   .debug_str:000000000000059a .LASF126
     /tmp/ccKXbn17.s:2676   .debug_str:0000000000000046 .LASF127
     /tmp/ccKXbn17.s:2788   .debug_str:00000000000003c9 .LASF128
     /tmp/ccKXbn17.s:2954   .debug_str:00000000000008aa .LASF129
     /tmp/ccKXbn17.s:2720   .debug_str:00000000000001a2 .LASF130
     /tmp/ccKXbn17.s:3040   .debug_str:0000000000000bbb .LASF131
     /tmp/ccKXbn17.s:2790   .debug_str:00000000000003ce .LASF132
     /tmp/ccKXbn17.s:2738   .debug_str:000000000000022c .LASF133
     /tmp/ccKXbn17.s:2856   .debug_str:00000000000005bc .LASF134
     /tmp/ccKXbn17.s:2972   .debug_str:00000000000009e6 .LASF135
     /tmp/ccKXbn17.s:2792   .debug_str:00000000000003d3 .LASF136
     /tmp/ccKXbn17.s:2670   .debug_str:0000000000000015 .LASF137
     /tmp/ccKXbn17.s:3016   .debug_str:0000000000000b22 .LASF138
     /tmp/ccKXbn17.s:2896   .debug_str:0000000000000709 .LASF139
     /tmp/ccKXbn17.s:2794   .debug_str:00000000000003d8 .LASF140
     /tmp/ccKXbn17.s:2980   .debug_str:0000000000000a19 .LASF141
     /tmp/ccKXbn17.s:2864   .debug_str:00000000000005f8 .LASF142
     /tmp/ccKXbn17.s:2822   .debug_str:00000000000004a4 .LASF143
     /tmp/ccKXbn17.s:2698   .debug_str:00000000000000ea .LASF144
     /tmp/ccKXbn17.s:2692   .debug_str:00000000000000c8 .LASF145
     /tmp/ccKXbn17.s:2868   .debug_str:000000000000061b .LASF146
     /tmp/ccKXbn17.s:2756   .debug_str:00000000000002de .LASF147
     /tmp/ccKXbn17.s:2974   .debug_str:00000000000009f7 .LASF148
     /tmp/ccKXbn17.s:2828   .debug_str:00000000000004dd .LASF149
     /tmp/ccKXbn17.s:2876   .debug_str:0000000000000650 .LASF150
     /tmp/ccKXbn17.s:2746   .debug_str:0000000000000275 .LASF151
     /tmp/ccKXbn17.s:2942   .debug_str:000000000000082c .LASF152
     /tmp/ccKXbn17.s:2844   .debug_str:0000000000000557 .LASF153
     /tmp/ccKXbn17.s:2730   .debug_str:00000000000001f5 .LASF154
     /tmp/ccKXbn17.s:2832   .debug_str:0000000000000503 .LASF155
     /tmp/ccKXbn17.s:2762   .debug_str:0000000000000319 .LASF157
     /tmp/ccKXbn17.s:2878   .debug_str:0000000000000665 .LASF159
     /tmp/ccKXbn17.s:362    .text:000000000000012c .LFB47
     /tmp/ccKXbn17.s:407    .text:0000000000000158 .LFE47
     /tmp/ccKXbn17.s:2533   .debug_loc:0000000000000000 .LLST10
GAS LISTING /tmp/ccKXbn17.s 			page 20


     /tmp/ccKXbn17.s:3034   .debug_str:0000000000000b9e .LASF160
     /tmp/ccKXbn17.s:2547   .debug_loc:0000000000000039 .LLST11
     /tmp/ccKXbn17.s:2922   .debug_str:00000000000007b2 .LASF161
     /tmp/ccKXbn17.s:2802   .debug_str:0000000000000420 .LASF162
     /tmp/ccKXbn17.s:311    .text:0000000000000100 .LFB46
     /tmp/ccKXbn17.s:356    .text:000000000000012c .LFE46
     /tmp/ccKXbn17.s:2554   .debug_loc:000000000000005c .LLST8
     /tmp/ccKXbn17.s:2568   .debug_loc:0000000000000095 .LLST9
     /tmp/ccKXbn17.s:2884   .debug_str:00000000000006b2 .LASF163
     /tmp/ccKXbn17.s:2674   .debug_str:000000000000002b .LASF164
     /tmp/ccKXbn17.s:260    .text:00000000000000d4 .LFB45
     /tmp/ccKXbn17.s:305    .text:0000000000000100 .LFE45
     /tmp/ccKXbn17.s:3022   .debug_str:0000000000000b39 .LASF165
     /tmp/ccKXbn17.s:2575   .debug_loc:00000000000000b8 .LLST6
     /tmp/ccKXbn17.s:2589   .debug_loc:00000000000000f1 .LLST7
     /tmp/ccKXbn17.s:2892   .debug_str:00000000000006e9 .LASF166
     /tmp/ccKXbn17.s:2970   .debug_str:00000000000009ca .LASF167
     /tmp/ccKXbn17.s:204    .text:00000000000000a4 .LFB44
     /tmp/ccKXbn17.s:254    .text:00000000000000d4 .LFE44
     /tmp/ccKXbn17.s:2596   .debug_loc:0000000000000114 .LLST4
     /tmp/ccKXbn17.s:2694   .debug_str:00000000000000d9 .LASF168
     /tmp/ccKXbn17.s:2610   .debug_loc:000000000000014d .LLST5
     /tmp/ccKXbn17.s:2846   .debug_str:0000000000000579 .LASF169
     /tmp/ccKXbn17.s:2848   .debug_str:0000000000000585 .LASF170
     /tmp/ccKXbn17.s:163    .text:0000000000000080 .LFB43
     /tmp/ccKXbn17.s:198    .text:00000000000000a4 .LFE43
     /tmp/ccKXbn17.s:2890   .debug_str:00000000000006d9 .LASF185
     /tmp/ccKXbn17.s:2830   .debug_str:00000000000004ee .LASF186
     /tmp/ccKXbn17.s:128    .text:0000000000000060 .LFB42
     /tmp/ccKXbn17.s:157    .text:0000000000000080 .LFE42
     /tmp/ccKXbn17.s:2820   .debug_str:0000000000000498 .LASF171
     /tmp/ccKXbn17.s:3026   .debug_str:0000000000000b46 .LASF172
     /tmp/ccKXbn17.s:72     .text:0000000000000034 .LFB41
     /tmp/ccKXbn17.s:122    .text:0000000000000060 .LFE41
     /tmp/ccKXbn17.s:2617   .debug_loc:0000000000000170 .LLST2
     /tmp/ccKXbn17.s:83     .text:0000000000000040 .LBB4
     /tmp/ccKXbn17.s:96     .text:0000000000000048 .LBE4
     /tmp/ccKXbn17.s:2624   .debug_loc:0000000000000193 .LLST3
     /tmp/ccKXbn17.s:2988   .debug_str:0000000000000a4f .LASF173
     /tmp/ccKXbn17.s:2858   .debug_str:00000000000005c1 .LASF174
     /tmp/ccKXbn17.s:10     .text:0000000000000000 .LFB40
     /tmp/ccKXbn17.s:66     .text:0000000000000034 .LFE40
     /tmp/ccKXbn17.s:2632   .debug_loc:00000000000001b7 .LLST0
     /tmp/ccKXbn17.s:2806   .debug_str:0000000000000443 .LASF175
     /tmp/ccKXbn17.s:2646   .debug_loc:00000000000001f0 .LLST1
     /tmp/ccKXbn17.s:2690   .debug_str:00000000000000bd .LASF187
     /tmp/ccKXbn17.s:365    .text:000000000000012c .LVL17
     /tmp/ccKXbn17.s:394    .text:0000000000000148 .LVL18
     /tmp/ccKXbn17.s:399    .text:000000000000014c .LVL19
     /tmp/ccKXbn17.s:314    .text:0000000000000100 .LVL14
     /tmp/ccKXbn17.s:343    .text:000000000000011c .LVL15
     /tmp/ccKXbn17.s:348    .text:0000000000000120 .LVL16
     /tmp/ccKXbn17.s:263    .text:00000000000000d4 .LVL11
     /tmp/ccKXbn17.s:292    .text:00000000000000f0 .LVL12
     /tmp/ccKXbn17.s:297    .text:00000000000000f4 .LVL13
     /tmp/ccKXbn17.s:207    .text:00000000000000a4 .LVL8
     /tmp/ccKXbn17.s:241    .text:00000000000000c4 .LVL9
GAS LISTING /tmp/ccKXbn17.s 			page 21


     /tmp/ccKXbn17.s:246    .text:00000000000000c8 .LVL10
     /tmp/ccKXbn17.s:109    .text:0000000000000050 .LVL5
     /tmp/ccKXbn17.s:114    .text:0000000000000054 .LVL6
     /tmp/ccKXbn17.s:82     .text:0000000000000040 .LVL3
     /tmp/ccKXbn17.s:93     .text:0000000000000048 .LVL4
     /tmp/ccKXbn17.s:14     .text:0000000000000000 .LVL0
     /tmp/ccKXbn17.s:53     .text:0000000000000024 .LVL1
     /tmp/ccKXbn17.s:58     .text:0000000000000028 .LVL2
     /tmp/ccKXbn17.s:416    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
