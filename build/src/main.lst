GAS LISTING /tmp/cccPjr0b.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadA created\n"
   9      61644120 
   9      63726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 54687265 		.string	"ThreadB created\n"
  12      61644220 
  12      63726561 
  12      7465640A 
  12      00
  13 0029 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0030 46696E69 		.string	"Finished\nReturn value: "
  15      73686564 
  15      0A526574 
  15      75726E20 
  15      76616C75 
  16              		.align	3
  17              	.LC3:
  18 0048 0A00     		.string	"\n"
  19              		.text
  20              		.align	2
  21              		.globl	main
  23              	main:
  24              	.LFB40:
  25              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by marko on 20.4.22..
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "../h/tcb.hpp"
   6:src/main.cpp  **** #include "../h/workers.hpp"
   7:src/main.cpp  **** #include "../h/print.hpp"
   8:src/main.cpp  **** #include "../h/riscv.hpp"
   9:src/main.cpp  **** #include "../h/syscall_c.hpp"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** int main()
  12:src/main.cpp  **** {
  26              		.loc 1 12 1
  27              		.cfi_startproc
  28 0000 130101FA 		addi	sp,sp,-96
  29              		.cfi_def_cfa_offset 96
  30 0004 233C1104 		sd	ra,88(sp)
  31 0008 23388104 		sd	s0,80(sp)
  32 000c 23349104 		sd	s1,72(sp)
GAS LISTING /tmp/cccPjr0b.s 			page 2


  33 0010 23302105 		sd	s2,64(sp)
  34              		.cfi_offset 1, -8
  35              		.cfi_offset 8, -16
  36              		.cfi_offset 9, -24
  37              		.cfi_offset 18, -32
  38 0014 13040106 		addi	s0,sp,96
  39              		.cfi_def_cfa 8, 0
  13:src/main.cpp  ****     TCB *threads[5];
  40              		.loc 1 13 5
  14:src/main.cpp  **** 
  15:src/main.cpp  ****     threads[0] = TCB::createThread(nullptr,nullptr);
  41              		.loc 1 15 5
  42              		.loc 1 15 35 is_stmt 0
  43 0018 93050000 		li	a1,0
  44 001c 13050000 		li	a0,0
  45 0020 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
  45      E7800000 
  46              	.LVL0:
  47              		.loc 1 15 16
  48 0028 233CA4FA 		sd	a0,-72(s0)
  16:src/main.cpp  ****     TCB::running = threads[0];
  49              		.loc 1 16 5 is_stmt 1
  50              		.loc 1 16 18 is_stmt 0
  51 002c 97070000 		la	a5,_ZN3TCB7runningE
  51      83B70700 
  52 0034 23B0A700 		sd	a0,0(a5)
  17:src/main.cpp  **** 
  18:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::stvecVectorTable | 0b01);
  53              		.loc 1 18 5 is_stmt 1
  54              		.loc 1 18 19 is_stmt 0
  55 0038 97070000 		la	a5,_ZN5Riscv16stvecVectorTableEv
  55      83B70700 
  56 0040 93E71700 		ori	a5,a5,1
  57              	.LVL1:
  58              	.LBB14:
  59              	.LBB15:
  60              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
GAS LISTING /tmp/cccPjr0b.s 			page 3


  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
GAS LISTING /tmp/cccPjr0b.s 			page 4


  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     //read a1 register
  92:src/../h/riscv.hpp ****     static uint64 r_a1();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //write to a1 register
  95:src/../h/riscv.hpp ****     static void w_a1(uint64 writeValue);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     //read a2 register
  98:src/../h/riscv.hpp ****     static uint64 r_a2();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     //write to a2 register
 101:src/../h/riscv.hpp ****     static void w_a2(uint64 writeValue);
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp ****     //read a3 register
 104:src/../h/riscv.hpp ****     static uint64 r_a3();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     //write to a3 register
 107:src/../h/riscv.hpp ****     static void w_a3(uint64 writeValue);
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     //read a4 register
 110:src/../h/riscv.hpp ****     static uint64 r_a4();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     //write to a4 register
 113:src/../h/riscv.hpp ****     static void w_a4(uint64 writeValue);
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****     //read a5 register
 116:src/../h/riscv.hpp ****     static uint64 r_a5();
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp ****     //write to a5 register
 119:src/../h/riscv.hpp ****     static void w_a5(uint64 writeValue);
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp ****     //read a6 register
 122:src/../h/riscv.hpp ****     static uint64 r_a6();
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     //write to a6 register
 125:src/../h/riscv.hpp ****     static void w_a6(uint64 writeValue);
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp ****     //read a7 register
 128:src/../h/riscv.hpp ****     static uint64 r_a7();
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp ****     //write to a7 register
 131:src/../h/riscv.hpp ****     static void w_a7(uint64 writeValue);
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** private:
GAS LISTING /tmp/cccPjr0b.s 			page 5


 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp ****     // supervisor trap handler
 137:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 142:src/../h/riscv.hpp **** };
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     uint64 volatile scause;
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 149:src/../h/riscv.hpp ****     return scause;
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     uint64 volatile sepc;
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 161:src/../h/riscv.hpp ****     return sepc;
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile stvec;
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 173:src/../h/riscv.hpp ****     return stvec;
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  61              		.loc 2 178 5 is_stmt 1
  62              		.loc 2 178 69 is_stmt 0
  63              	#APP
  64              	# 178 "src/../h/riscv.hpp" 1
 179              	}
  65              		csrw stvec, a5
  66              	# 0 "" 2
  67              	.LVL2:
  68              	#NO_APP
  69              	.LBE15:
  70              	.LBE14:
  19:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  71              		.loc 1 19 5 is_stmt 1
GAS LISTING /tmp/cccPjr0b.s 			page 6


  72              	.LBB16:
  73              	.LBB17:
 180:src/../h/riscv.hpp **** 
 181:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 182:src/../h/riscv.hpp **** {
 183:src/../h/riscv.hpp ****     uint64 volatile stval;
 184:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 185:src/../h/riscv.hpp ****     return stval;
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 191:src/../h/riscv.hpp **** }
 192:src/../h/riscv.hpp **** 
 193:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 194:src/../h/riscv.hpp **** {
 195:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 196:src/../h/riscv.hpp **** }
 197:src/../h/riscv.hpp **** 
 198:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 199:src/../h/riscv.hpp **** {
 200:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 201:src/../h/riscv.hpp **** }
 202:src/../h/riscv.hpp **** 
 203:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 204:src/../h/riscv.hpp **** {
 205:src/../h/riscv.hpp ****     uint64 volatile sip;
 206:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 207:src/../h/riscv.hpp ****     return sip;
 208:src/../h/riscv.hpp **** }
 209:src/../h/riscv.hpp **** 
 210:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 211:src/../h/riscv.hpp **** {
 212:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 213:src/../h/riscv.hpp **** }
 214:src/../h/riscv.hpp **** 
 215:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 216:src/../h/riscv.hpp **** {
 217:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  74              		.loc 2 217 5
  75              		.loc 2 217 68 is_stmt 0
  76 0048 93072000 		li	a5,2
  77              	#APP
  78              	# 217 "src/../h/riscv.hpp" 1
 218              	}
  79              		csrs sstatus, a5
  80              	# 0 "" 2
  81              	.LVL3:
  82              	#NO_APP
  83              	.LBE17:
  84              	.LBE16:
  20:src/main.cpp  **** 
  21:src/main.cpp  ****     int return1 = thread_create(&threads[1], workerBodyA, nullptr);
  85              		.loc 1 21 5 is_stmt 1
  86              		.loc 1 21 32 is_stmt 0
  87 0050 13060000 		li	a2,0
GAS LISTING /tmp/cccPjr0b.s 			page 7


  88 0054 97050000 		la	a1,_Z11workerBodyAPv
  88      83B50500 
  89 005c 130504FC 		addi	a0,s0,-64
  90 0060 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  90      E7800000 
  91              	.LVL4:
  92 0068 93040500 		mv	s1,a0
  93              	.LVL5:
  22:src/main.cpp  ****     printString("ThreadA created\n");
  94              		.loc 1 22 5 is_stmt 1
  95              		.loc 1 22 16 is_stmt 0
  96 006c 17050000 		lla	a0,.LC0
  96      13050500 
  97 0074 97000000 		call	_Z11printStringPKc@plt
  97      E7800000 
  98              	.LVL6:
  23:src/main.cpp  ****     printInteger(return1);
  99              		.loc 1 23 5 is_stmt 1
 100              		.loc 1 23 17 is_stmt 0
 101 007c 13850400 		mv	a0,s1
 102 0080 97000000 		call	_Z12printIntegerm@plt
 102      E7800000 
 103              	.LVL7:
  24:src/main.cpp  ****     int return2 = thread_create(&threads[2], workerBodyB, threads[1]);
 104              		.loc 1 24 5 is_stmt 1
 105              		.loc 1 24 32 is_stmt 0
 106 0088 033604FC 		ld	a2,-64(s0)
 107 008c 97050000 		la	a1,_Z11workerBodyBPv
 107      83B50500 
 108 0094 130584FC 		addi	a0,s0,-56
 109 0098 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 109      E7800000 
 110              	.LVL8:
 111 00a0 93040500 		mv	s1,a0
 112              	.LVL9:
  25:src/main.cpp  ****     printString("ThreadB created\n");
 113              		.loc 1 25 5 is_stmt 1
 114              		.loc 1 25 16 is_stmt 0
 115 00a4 17050000 		lla	a0,.LC1
 115      13050500 
 116 00ac 97000000 		call	_Z11printStringPKc@plt
 116      E7800000 
 117              	.LVL10:
  26:src/main.cpp  ****     printInteger(return2);
 118              		.loc 1 26 5 is_stmt 1
 119              		.loc 1 26 17 is_stmt 0
 120 00b4 13850400 		mv	a0,s1
 121 00b8 97000000 		call	_Z12printIntegerm@plt
 121      E7800000 
 122              	.LVL11:
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     MySemaphore* semaphore[2];
 123              		.loc 1 28 5 is_stmt 1
  29:src/main.cpp  ****     sem_open(&semaphore[0], 0);
 124              		.loc 1 29 5
 125              		.loc 1 29 13 is_stmt 0
 126 00c0 93050000 		li	a1,0
GAS LISTING /tmp/cccPjr0b.s 			page 8


 127 00c4 130584FA 		addi	a0,s0,-88
 128 00c8 97000000 		call	_Z8sem_openPP11MySemaphorej@plt
 128      E7800000 
 129              	.LVL12:
 130 00d0 6F00C000 		j	.L4
 131              	.L2:
  30:src/main.cpp  **** 
  31:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
  32:src/main.cpp  ****              threads[2]->isFinished()))
  33:src/main.cpp  ****     {
  34:src/main.cpp  ****         thread_dispatch();
 132              		.loc 1 34 9 is_stmt 1 discriminator 3
 133              		.loc 1 34 24 is_stmt 0 discriminator 3
 134 00d4 97000000 		call	_Z15thread_dispatchv@plt
 134      E7800000 
 135              	.LVL13:
 136              	.L4:
  31:src/main.cpp  ****              threads[2]->isFinished()))
 137              		.loc 1 31 5 is_stmt 1
  31:src/main.cpp  ****              threads[2]->isFinished()))
 138              		.loc 1 31 12
  31:src/main.cpp  ****              threads[2]->isFinished()))
 139              		.loc 1 31 23 is_stmt 0
 140 00dc 833704FC 		ld	a5,-64(s0)
 141              	.LVL14:
 142              	.LBB18:
 143              	.LBB19:
 144              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 145              		.loc 3 17 31 is_stmt 1
 146              		.loc 3 17 38 is_stmt 0
 147 00e0 83C70702 		lbu	a5,32(a5)
 148              	.LVL15:
 149              	.LBE19:
 150              	.LBE18:
  31:src/main.cpp  ****              threads[2]->isFinished()))
 151              		.loc 1 31 12
 152 00e4 E38807FE 		beqz	a5,.L2
  32:src/main.cpp  ****     {
 153              		.loc 1 32 23 discriminator 2
 154 00e8 833784FC 		ld	a5,-56(s0)
GAS LISTING /tmp/cccPjr0b.s 			page 9


 155              	.LVL16:
 156              	.LBB20:
 157              	.LBB21:
 158              		.loc 3 17 31 is_stmt 1 discriminator 2
 159              		.loc 3 17 38 is_stmt 0 discriminator 2
 160 00ec 83C70702 		lbu	a5,32(a5)
 161              	.LVL17:
 162              	.LBE21:
 163              	.LBE20:
  31:src/main.cpp  ****              threads[2]->isFinished()))
 164              		.loc 1 31 12 discriminator 2
 165 00f0 E38207FE 		beqz	a5,.L2
  35:src/main.cpp  ****     }
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** 
  39:src/main.cpp  ****     thread_create(&threads[3], workerBodyC, semaphore[0]);
 166              		.loc 1 39 5 is_stmt 1
 167              		.loc 1 39 18 is_stmt 0
 168 00f4 033684FA 		ld	a2,-88(s0)
 169 00f8 97050000 		la	a1,_Z11workerBodyCPv
 169      83B50500 
 170 0100 930404FD 		addi	s1,s0,-48
 171              	.LVL18:
 172 0104 13850400 		mv	a0,s1
 173 0108 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 173      E7800000 
 174              	.LVL19:
  40:src/main.cpp  ****     thread_create(&threads[3], workerBodyD, semaphore[0]);
 175              		.loc 1 40 5 is_stmt 1
 176              		.loc 1 40 18 is_stmt 0
 177 0110 033684FA 		ld	a2,-88(s0)
 178 0114 97050000 		la	a1,_Z11workerBodyDPv
 178      83B50500 
 179 011c 13850400 		mv	a0,s1
 180 0120 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 180      E7800000 
 181              	.LVL20:
  41:src/main.cpp  ****     //thread_dispatch();
  42:src/main.cpp  ****     int returnValue = sem_wait(semaphore[0]);
 182              		.loc 1 42 5 is_stmt 1
 183              		.loc 1 42 31 is_stmt 0
 184 0128 033584FA 		ld	a0,-88(s0)
 185 012c 97000000 		call	_Z8sem_waitP11MySemaphore@plt
 185      E7800000 
 186              	.LVL21:
 187 0134 93040500 		mv	s1,a0
 188              	.LVL22:
  43:src/main.cpp  **** 
  44:src/main.cpp  ****     printString("Finished\nReturn value: ");
 189              		.loc 1 44 5 is_stmt 1
 190              		.loc 1 44 16 is_stmt 0
 191 0138 17050000 		lla	a0,.LC2
 191      13050500 
 192 0140 97000000 		call	_Z11printStringPKc@plt
 192      E7800000 
 193              	.LVL23:
GAS LISTING /tmp/cccPjr0b.s 			page 10


  45:src/main.cpp  ****     printInteger(returnValue);
 194              		.loc 1 45 5 is_stmt 1
 195              		.loc 1 45 17 is_stmt 0
 196 0148 13850400 		mv	a0,s1
 197 014c 97000000 		call	_Z12printIntegerm@plt
 197      E7800000 
 198              	.LVL24:
  46:src/main.cpp  ****     printString("\n");
 199              		.loc 1 46 5 is_stmt 1
 200              		.loc 1 46 16 is_stmt 0
 201 0154 17050000 		lla	a0,.LC3
 201      13050500 
 202 015c 97000000 		call	_Z11printStringPKc@plt
 202      E7800000 
 203              	.LVL25:
  47:src/main.cpp  **** 
  48:src/main.cpp  ****     thread_dispatch();
 204              		.loc 1 48 5 is_stmt 1
 205              		.loc 1 48 20 is_stmt 0
 206 0164 97000000 		call	_Z15thread_dispatchv@plt
 206      E7800000 
 207              	.LVL26:
 208              	.LBB22:
  49:src/main.cpp  ****     for (auto &thread: threads) {
 209              		.loc 1 49 24
 210 016c 930484FB 		addi	s1,s0,-72
 211              	.LVL27:
 212 0170 6F004001 		j	.L8
 213              	.LVL28:
 214              	.L7:
  50:src/main.cpp  ****         delete thread;
 215              		.loc 1 50 16
 216 0174 13050900 		mv	a0,s2
 217 0178 97000000 		call	_ZdlPv@plt
 217      E7800000 
 218              	.LVL29:
 219              	.L6:
  49:src/main.cpp  ****     for (auto &thread: threads) {
 220              		.loc 1 49 5 is_stmt 1 discriminator 3
 221 0180 93848400 		addi	s1,s1,8
 222              	.LVL30:
 223              	.L8:
  49:src/main.cpp  ****     for (auto &thread: threads) {
 224              		.loc 1 49 24 discriminator 1
 225 0184 930704FE 		addi	a5,s0,-32
 226 0188 6380F402 		beq	s1,a5,.L5
 227              	.LVL31:
 228              		.loc 1 50 9 discriminator 2
 229              		.loc 1 50 16 is_stmt 0 discriminator 2
 230 018c 03B90400 		ld	s2,0(s1)
 231              		.loc 1 50 22 discriminator 2
 232 0190 E30809FE 		beqz	s2,.L6
 233              	.LVL32:
 234              	.LBB23:
 235              	.LBB24:
  15:src/../h/tcb.hpp **** 
 236              		.loc 3 15 14 is_stmt 1
GAS LISTING /tmp/cccPjr0b.s 			page 11


  15:src/../h/tcb.hpp **** 
 237              		.loc 3 15 23 is_stmt 0
 238 0194 03358900 		ld	a0,8(s2)
  15:src/../h/tcb.hpp **** 
 239              		.loc 3 15 28
 240 0198 E30E05FC 		beqz	a0,.L7
  15:src/../h/tcb.hpp **** 
 241              		.loc 3 15 23
 242 019c 97000000 		call	_ZdaPv@plt
 242      E7800000 
 243              	.LVL33:
 244 01a4 6FF01FFD 		j	.L7
 245              	.LVL34:
 246              	.L5:
 247              	.LBE24:
 248              	.LBE23:
 249              	.LBE22:
  51:src/main.cpp  ****     }
  52:src/main.cpp  ****     return 0;
 250              		.loc 1 52 5 is_stmt 1
  53:src/main.cpp  **** }
 251              		.loc 1 53 1 is_stmt 0
 252 01a8 13050000 		li	a0,0
 253 01ac 83308105 		ld	ra,88(sp)
 254              		.cfi_restore 1
 255 01b0 03340105 		ld	s0,80(sp)
 256              		.cfi_restore 8
 257              		.cfi_def_cfa 2, 96
 258 01b4 83348104 		ld	s1,72(sp)
 259              		.cfi_restore 9
 260              	.LVL35:
 261 01b8 03390104 		ld	s2,64(sp)
 262              		.cfi_restore 18
 263 01bc 13010106 		addi	sp,sp,96
 264              		.cfi_def_cfa_offset 0
 265 01c0 67800000 		jr	ra
 266              		.cfi_endproc
 267              	.LFE40:
 269              	.Letext0:
 270              		.file 4 "src/../h/../lib/hw.h"
 271              		.file 5 "src/../h/list.hpp"
 272              		.file 6 "src/../h/mySemaphore.hpp"
 273              		.file 7 "src/../h/syscall_c.hpp"
 274              		.file 8 "src/../h/print.hpp"
GAS LISTING /tmp/cccPjr0b.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cccPjr0b.s:23     .text:0000000000000000 main
     /tmp/cccPjr0b.s:27     .text:0000000000000000 .L0 
     /tmp/cccPjr0b.s:28     .text:0000000000000000 .L0 
     /tmp/cccPjr0b.s:29     .text:0000000000000004 .L0 
     /tmp/cccPjr0b.s:34     .text:0000000000000014 .L0 
     /tmp/cccPjr0b.s:35     .text:0000000000000014 .L0 
     /tmp/cccPjr0b.s:36     .text:0000000000000014 .L0 
     /tmp/cccPjr0b.s:37     .text:0000000000000014 .L0 
     /tmp/cccPjr0b.s:39     .text:0000000000000018 .L0 
     /tmp/cccPjr0b.s:41     .text:0000000000000018 .L0 
     /tmp/cccPjr0b.s:42     .text:0000000000000018 .L0 
     /tmp/cccPjr0b.s:43     .text:0000000000000018 .L0 
     /tmp/cccPjr0b.s:48     .text:0000000000000028 .L0 
     /tmp/cccPjr0b.s:50     .text:000000000000002c .L0 
     /tmp/cccPjr0b.s:51     .text:000000000000002c .L0 
     /tmp/cccPjr0b.s:54     .text:0000000000000038 .L0 
     /tmp/cccPjr0b.s:55     .text:0000000000000038 .L0 
     /tmp/cccPjr0b.s:62     .text:0000000000000044 .L0 
  src/../h/riscv.hpp:178    .text:0000000000000044 .L0 
     /tmp/cccPjr0b.s:74     .text:0000000000000048 .L0 
     /tmp/cccPjr0b.s:75     .text:0000000000000048 .L0 
     /tmp/cccPjr0b.s:76     .text:0000000000000048 .L0 
     /tmp/cccPjr0b.s:86     .text:0000000000000050 .L0 
     /tmp/cccPjr0b.s:87     .text:0000000000000050 .L0 
     /tmp/cccPjr0b.s:95     .text:000000000000006c .L0 
     /tmp/cccPjr0b.s:96     .text:000000000000006c .L0 
     /tmp/cccPjr0b.s:100    .text:000000000000007c .L0 
     /tmp/cccPjr0b.s:101    .text:000000000000007c .L0 
     /tmp/cccPjr0b.s:105    .text:0000000000000088 .L0 
     /tmp/cccPjr0b.s:106    .text:0000000000000088 .L0 
     /tmp/cccPjr0b.s:114    .text:00000000000000a4 .L0 
     /tmp/cccPjr0b.s:115    .text:00000000000000a4 .L0 
     /tmp/cccPjr0b.s:119    .text:00000000000000b4 .L0 
     /tmp/cccPjr0b.s:120    .text:00000000000000b4 .L0 
     /tmp/cccPjr0b.s:124    .text:00000000000000c0 .L0 
     /tmp/cccPjr0b.s:125    .text:00000000000000c0 .L0 
     /tmp/cccPjr0b.s:126    .text:00000000000000c0 .L0 
     /tmp/cccPjr0b.s:133    .text:00000000000000d4 .L0 
     /tmp/cccPjr0b.s:134    .text:00000000000000d4 .L0 
     /tmp/cccPjr0b.s:138    .text:00000000000000dc .L0 
     /tmp/cccPjr0b.s:139    .text:00000000000000dc .L0 
     /tmp/cccPjr0b.s:140    .text:00000000000000dc .L0 
     /tmp/cccPjr0b.s:146    .text:00000000000000e0 .L0 
     /tmp/cccPjr0b.s:147    .text:00000000000000e0 .L0 
     /tmp/cccPjr0b.s:152    .text:00000000000000e4 .L0 
     /tmp/cccPjr0b.s:154    .text:00000000000000e8 .L0 
     /tmp/cccPjr0b.s:159    .text:00000000000000ec .L0 
     /tmp/cccPjr0b.s:160    .text:00000000000000ec .L0 
     /tmp/cccPjr0b.s:165    .text:00000000000000f0 .L0 
     /tmp/cccPjr0b.s:167    .text:00000000000000f4 .L0 
     /tmp/cccPjr0b.s:168    .text:00000000000000f4 .L0 
     /tmp/cccPjr0b.s:176    .text:0000000000000110 .L0 
     /tmp/cccPjr0b.s:177    .text:0000000000000110 .L0 
     /tmp/cccPjr0b.s:183    .text:0000000000000128 .L0 
     /tmp/cccPjr0b.s:184    .text:0000000000000128 .L0 
GAS LISTING /tmp/cccPjr0b.s 			page 13


     /tmp/cccPjr0b.s:190    .text:0000000000000138 .L0 
     /tmp/cccPjr0b.s:191    .text:0000000000000138 .L0 
     /tmp/cccPjr0b.s:195    .text:0000000000000148 .L0 
     /tmp/cccPjr0b.s:196    .text:0000000000000148 .L0 
     /tmp/cccPjr0b.s:200    .text:0000000000000154 .L0 
     /tmp/cccPjr0b.s:201    .text:0000000000000154 .L0 
     /tmp/cccPjr0b.s:205    .text:0000000000000164 .L0 
     /tmp/cccPjr0b.s:206    .text:0000000000000164 .L0 
     /tmp/cccPjr0b.s:210    .text:000000000000016c .L0 
     /tmp/cccPjr0b.s:216    .text:0000000000000174 .L0 
     /tmp/cccPjr0b.s:221    .text:0000000000000180 .L0 
     /tmp/cccPjr0b.s:225    .text:0000000000000184 .L0 
     /tmp/cccPjr0b.s:229    .text:000000000000018c .L0 
     /tmp/cccPjr0b.s:230    .text:000000000000018c .L0 
     /tmp/cccPjr0b.s:232    .text:0000000000000190 .L0 
     /tmp/cccPjr0b.s:237    .text:0000000000000194 .L0 
     /tmp/cccPjr0b.s:238    .text:0000000000000194 .L0 
     /tmp/cccPjr0b.s:240    .text:0000000000000198 .L0 
     /tmp/cccPjr0b.s:242    .text:000000000000019c .L0 
     /tmp/cccPjr0b.s:251    .text:00000000000001a8 .L0 
     /tmp/cccPjr0b.s:252    .text:00000000000001a8 .L0 
     /tmp/cccPjr0b.s:254    .text:00000000000001b0 .L0 
     /tmp/cccPjr0b.s:256    .text:00000000000001b4 .L0 
     /tmp/cccPjr0b.s:257    .text:00000000000001b4 .L0 
     /tmp/cccPjr0b.s:259    .text:00000000000001b8 .L0 
     /tmp/cccPjr0b.s:262    .text:00000000000001bc .L0 
     /tmp/cccPjr0b.s:264    .text:00000000000001c0 .L0 
     /tmp/cccPjr0b.s:266    .text:00000000000001c4 .L0 
     /tmp/cccPjr0b.s:275    .text:00000000000001c4 .L0 
     /tmp/cccPjr0b.s:51     .text:000000000000002c .L0 
     /tmp/cccPjr0b.s:55     .text:0000000000000038 .L0 
     /tmp/cccPjr0b.s:88     .text:0000000000000054 .L0 
     /tmp/cccPjr0b.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cccPjr0b.s:96     .text:000000000000006c .L0 
     /tmp/cccPjr0b.s:107    .text:000000000000008c .L0 
     /tmp/cccPjr0b.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/cccPjr0b.s:115    .text:00000000000000a4 .L0 
     /tmp/cccPjr0b.s:169    .text:00000000000000f8 .L0 
     /tmp/cccPjr0b.s:178    .text:0000000000000114 .L0 
     /tmp/cccPjr0b.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/cccPjr0b.s:191    .text:0000000000000138 .L0 
     /tmp/cccPjr0b.s:17     .rodata.str1.8:0000000000000048 .LC3
     /tmp/cccPjr0b.s:201    .text:0000000000000154 .L0 
     /tmp/cccPjr0b.s:136    .text:00000000000000dc .L4
     /tmp/cccPjr0b.s:131    .text:00000000000000d4 .L2
     /tmp/cccPjr0b.s:223    .text:0000000000000184 .L8
     /tmp/cccPjr0b.s:246    .text:00000000000001a8 .L5
     /tmp/cccPjr0b.s:219    .text:0000000000000180 .L6
     /tmp/cccPjr0b.s:214    .text:0000000000000174 .L7
     /tmp/cccPjr0b.s:1754   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cccPjr0b.s:3116   .debug_str:00000000000008fa .LASF186
     /tmp/cccPjr0b.s:2886   .debug_str:00000000000002d2 .LASF187
     /tmp/cccPjr0b.s:3160   .debug_str:0000000000000af1 .LASF188
     /tmp/cccPjr0b.s:5      .text:0000000000000000 .Ltext0
     /tmp/cccPjr0b.s:269    .text:00000000000001c4 .Letext0
     /tmp/cccPjr0b.s:2796   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cccPjr0b.s:2916   .debug_str:00000000000003cc .LASF0
GAS LISTING /tmp/cccPjr0b.s 			page 14


     /tmp/cccPjr0b.s:2952   .debug_str:00000000000004c3 .LASF1
     /tmp/cccPjr0b.s:3050   .debug_str:000000000000076d .LASF2
     /tmp/cccPjr0b.s:3058   .debug_str:00000000000007a8 .LASF4
     /tmp/cccPjr0b.s:2922   .debug_str:00000000000003f3 .LASF3
     /tmp/cccPjr0b.s:2818   .debug_str:00000000000000ae .LASF5
     /tmp/cccPjr0b.s:3014   .debug_str:000000000000066f .LASF6
     /tmp/cccPjr0b.s:2940   .debug_str:0000000000000451 .LASF7
     /tmp/cccPjr0b.s:2894   .debug_str:00000000000002fa .LASF8
     /tmp/cccPjr0b.s:2902   .debug_str:0000000000000358 .LASF9
     /tmp/cccPjr0b.s:2838   .debug_str:000000000000013f .LASF10
     /tmp/cccPjr0b.s:2884   .debug_str:00000000000002c3 .LASF11
     /tmp/cccPjr0b.s:2852   .debug_str:00000000000001ba .LASF12
     /tmp/cccPjr0b.s:2836   .debug_str:000000000000012f .LASF13
     /tmp/cccPjr0b.s:3092   .debug_str:000000000000086c .LASF14
     /tmp/cccPjr0b.s:2870   .debug_str:0000000000000232 .LASF15
     /tmp/cccPjr0b.s:3078   .debug_str:000000000000080a .LASF16
     /tmp/cccPjr0b.s:3150   .debug_str:0000000000000ab2 .LASF34
     /tmp/cccPjr0b.s:3140   .debug_str:0000000000000a6b .LASF189
     /tmp/cccPjr0b.s:3084   .debug_str:000000000000083f .LASF17
     /tmp/cccPjr0b.s:2984   .debug_str:00000000000005b6 .LASF18
     /tmp/cccPjr0b.s:2978   .debug_str:0000000000000592 .LASF19
     /tmp/cccPjr0b.s:3080   .debug_str:0000000000000820 .LASF21
     /tmp/cccPjr0b.s:2882   .debug_str:00000000000002ac .LASF26
     /tmp/cccPjr0b.s:3052   .debug_str:000000000000077b .LASF190
     /tmp/cccPjr0b.s:3040   .debug_str:0000000000000727 .LASF191
     /tmp/cccPjr0b.s:2946   .debug_str:0000000000000491 .LASF20
     /tmp/cccPjr0b.s:2830   .debug_str:00000000000000e5 .LASF22
     /tmp/cccPjr0b.s:2962   .debug_str:0000000000000503 .LASF23
     /tmp/cccPjr0b.s:2872   .debug_str:0000000000000248 .LASF24
     /tmp/cccPjr0b.s:3010   .debug_str:0000000000000652 .LASF25
     /tmp/cccPjr0b.s:3152   .debug_str:0000000000000abc .LASF27
     /tmp/cccPjr0b.s:3196   .debug_str:0000000000000bfd .LASF28
     /tmp/cccPjr0b.s:3184   .debug_str:0000000000000b91 .LASF29
     /tmp/cccPjr0b.s:3070   .debug_str:00000000000007e7 .LASF30
     /tmp/cccPjr0b.s:2938   .debug_str:0000000000000434 .LASF31
     /tmp/cccPjr0b.s:3034   .debug_str:0000000000000705 .LASF32
     /tmp/cccPjr0b.s:2810   .debug_str:0000000000000056 .LASF33
     /tmp/cccPjr0b.s:3098   .debug_str:0000000000000894 .LASF192
     /tmp/cccPjr0b.s:3060   .debug_str:00000000000007af .LASF35
     /tmp/cccPjr0b.s:2814   .debug_str:0000000000000098 .LASF36
     /tmp/cccPjr0b.s:3100   .debug_str:000000000000089c .LASF37
     /tmp/cccPjr0b.s:2980   .debug_str:0000000000000597 .LASF38
     /tmp/cccPjr0b.s:2824   .debug_str:00000000000000c6 .LASF39
     /tmp/cccPjr0b.s:3136   .debug_str:0000000000000a4b .LASF40
     /tmp/cccPjr0b.s:3174   .debug_str:0000000000000b39 .LASF41
     /tmp/cccPjr0b.s:2832   .debug_str:0000000000000102 .LASF42
     /tmp/cccPjr0b.s:3102   .debug_str:00000000000008a7 .LASF43
     /tmp/cccPjr0b.s:2848   .debug_str:000000000000018a .LASF44
     /tmp/cccPjr0b.s:3090   .debug_str:000000000000085f .LASF45
     /tmp/cccPjr0b.s:3144   .debug_str:0000000000000a7e .LASF46
     /tmp/cccPjr0b.s:3000   .debug_str:0000000000000614 .LASF193
     /tmp/cccPjr0b.s:2954   .debug_str:00000000000004d6 .LASF65
     /tmp/cccPjr0b.s:3120   .debug_str:00000000000009d2 .LASF67
     /tmp/cccPjr0b.s:3112   .debug_str:00000000000008e5 .LASF194
     /tmp/cccPjr0b.s:3118   .debug_str:00000000000009be .LASF195
     /tmp/cccPjr0b.s:2804   .debug_str:0000000000000030 .LASF47
     /tmp/cccPjr0b.s:3074   .debug_str:00000000000007fb .LASF48
GAS LISTING /tmp/cccPjr0b.s 			page 15


     /tmp/cccPjr0b.s:3130   .debug_str:0000000000000a1d .LASF49
     /tmp/cccPjr0b.s:3076   .debug_str:0000000000000801 .LASF50
     /tmp/cccPjr0b.s:2992   .debug_str:00000000000005eb .LASF51
     /tmp/cccPjr0b.s:2828   .debug_str:00000000000000d7 .LASF52
     /tmp/cccPjr0b.s:2956   .debug_str:00000000000004dc .LASF54
     /tmp/cccPjr0b.s:2854   .debug_str:00000000000001ca .LASF56
     /tmp/cccPjr0b.s:2812   .debug_str:0000000000000070 .LASF58
     /tmp/cccPjr0b.s:2862   .debug_str:000000000000020d .LASF53
     /tmp/cccPjr0b.s:2846   .debug_str:0000000000000177 .LASF55
     /tmp/cccPjr0b.s:3108   .debug_str:00000000000008cf .LASF57
     /tmp/cccPjr0b.s:2888   .debug_str:00000000000002df .LASF59
     /tmp/cccPjr0b.s:3056   .debug_str:000000000000079d .LASF196
     /tmp/cccPjr0b.s:2964   .debug_str:000000000000050b .LASF60
     /tmp/cccPjr0b.s:3156   .debug_str:0000000000000ae1 .LASF61
     /tmp/cccPjr0b.s:3146   .debug_str:0000000000000a9e .LASF197
     /tmp/cccPjr0b.s:2878   .debug_str:000000000000028d .LASF62
     /tmp/cccPjr0b.s:3114   .debug_str:00000000000008ed .LASF63
     /tmp/cccPjr0b.s:2858   .debug_str:00000000000001ef .LASF64
     /tmp/cccPjr0b.s:2908   .debug_str:0000000000000391 .LASF66
     /tmp/cccPjr0b.s:2914   .debug_str:00000000000003b4 .LASF68
     /tmp/cccPjr0b.s:3138   .debug_str:0000000000000a62 .LASF70
     /tmp/cccPjr0b.s:3132   .debug_str:0000000000000a25 .LASF72
     /tmp/cccPjr0b.s:3046   .debug_str:0000000000000759 .LASF69
     /tmp/cccPjr0b.s:2994   .debug_str:00000000000005f3 .LASF75
     /tmp/cccPjr0b.s:3028   .debug_str:00000000000006d7 .LASF71
     /tmp/cccPjr0b.s:3030   .debug_str:00000000000006de .LASF73
     /tmp/cccPjr0b.s:2986   .debug_str:00000000000005bb .LASF74
     /tmp/cccPjr0b.s:2942   .debug_str:0000000000000464 .LASF76
     /tmp/cccPjr0b.s:3176   .debug_str:0000000000000b43 .LASF77
     /tmp/cccPjr0b.s:3088   .debug_str:000000000000084b .LASF78
     /tmp/cccPjr0b.s:2982   .debug_str:00000000000005ae .LASF79
     /tmp/cccPjr0b.s:3186   .debug_str:0000000000000bac .LASF80
     /tmp/cccPjr0b.s:2958   .debug_str:00000000000004f5 .LASF81
     /tmp/cccPjr0b.s:3032   .debug_str:00000000000006f1 .LASF82
     /tmp/cccPjr0b.s:3192   .debug_str:0000000000000be4 .LASF83
     /tmp/cccPjr0b.s:2920   .debug_str:00000000000003df .LASF84
     /tmp/cccPjr0b.s:3086   .debug_str:0000000000000844 .LASF85
     /tmp/cccPjr0b.s:3062   .debug_str:00000000000007b4 .LASF86
     /tmp/cccPjr0b.s:3064   .debug_str:00000000000007c7 .LASF87
     /tmp/cccPjr0b.s:2842   .debug_str:0000000000000158 .LASF88
     /tmp/cccPjr0b.s:2868   .debug_str:000000000000022c .LASF89
     /tmp/cccPjr0b.s:2912   .debug_str:00000000000003a2 .LASF90
     /tmp/cccPjr0b.s:2918   .debug_str:00000000000003d9 .LASF91
     /tmp/cccPjr0b.s:2860   .debug_str:00000000000001fb .LASF92
     /tmp/cccPjr0b.s:2820   .debug_str:00000000000000b5 .LASF93
     /tmp/cccPjr0b.s:3054   .debug_str:0000000000000785 .LASF94
     /tmp/cccPjr0b.s:3048   .debug_str:0000000000000762 .LASF95
     /tmp/cccPjr0b.s:3188   .debug_str:0000000000000bc0 .LASF96
     /tmp/cccPjr0b.s:3158   .debug_str:0000000000000ae7 .LASF97
     /tmp/cccPjr0b.s:3178   .debug_str:0000000000000b4b .LASF98
     /tmp/cccPjr0b.s:2840   .debug_str:000000000000014e .LASF99
     /tmp/cccPjr0b.s:2970   .debug_str:0000000000000532 .LASF100
     /tmp/cccPjr0b.s:3170   .debug_str:0000000000000b25 .LASF101
     /tmp/cccPjr0b.s:2900   .debug_str:000000000000033c .LASF102
     /tmp/cccPjr0b.s:3066   .debug_str:00000000000007ce .LASF103
     /tmp/cccPjr0b.s:3006   .debug_str:000000000000062f .LASF104
     /tmp/cccPjr0b.s:3162   .debug_str:0000000000000b11 .LASF105
GAS LISTING /tmp/cccPjr0b.s 			page 16


     /tmp/cccPjr0b.s:3002   .debug_str:0000000000000619 .LASF106
     /tmp/cccPjr0b.s:2926   .debug_str:0000000000000416 .LASF107
     /tmp/cccPjr0b.s:3110   .debug_str:00000000000008d4 .LASF108
     /tmp/cccPjr0b.s:3164   .debug_str:0000000000000b16 .LASF109
     /tmp/cccPjr0b.s:2924   .debug_str:0000000000000405 .LASF110
     /tmp/cccPjr0b.s:2928   .debug_str:000000000000041b .LASF111
     /tmp/cccPjr0b.s:3012   .debug_str:000000000000065e .LASF112
     /tmp/cccPjr0b.s:3166   .debug_str:0000000000000b1b .LASF113
     /tmp/cccPjr0b.s:2808   .debug_str:0000000000000045 .LASF114
     /tmp/cccPjr0b.s:2930   .debug_str:0000000000000420 .LASF115
     /tmp/cccPjr0b.s:3104   .debug_str:00000000000008b2 .LASF116
     /tmp/cccPjr0b.s:3168   .debug_str:0000000000000b20 .LASF117
     /tmp/cccPjr0b.s:3194   .debug_str:0000000000000bec .LASF118
     /tmp/cccPjr0b.s:2932   .debug_str:0000000000000425 .LASF119
     /tmp/cccPjr0b.s:2866   .debug_str:000000000000021b .LASF120
     /tmp/cccPjr0b.s:2996   .debug_str:0000000000000608 .LASF121
     /tmp/cccPjr0b.s:3126   .debug_str:0000000000000a07 .LASF122
     /tmp/cccPjr0b.s:2934   .debug_str:000000000000042a .LASF123
     /tmp/cccPjr0b.s:2802   .debug_str:000000000000001f .LASF124
     /tmp/cccPjr0b.s:3172   .debug_str:0000000000000b34 .LASF125
     /tmp/cccPjr0b.s:3042   .debug_str:000000000000073e .LASF126
     /tmp/cccPjr0b.s:2936   .debug_str:000000000000042f .LASF127
     /tmp/cccPjr0b.s:3134   .debug_str:0000000000000a3a .LASF128
     /tmp/cccPjr0b.s:3004   .debug_str:000000000000062a .LASF129
     /tmp/cccPjr0b.s:2966   .debug_str:0000000000000510 .LASF130
     /tmp/cccPjr0b.s:2826   .debug_str:00000000000000d2 .LASF131
     /tmp/cccPjr0b.s:2968   .debug_str:0000000000000521 .LASF132
     /tmp/cccPjr0b.s:3008   .debug_str:000000000000064d .LASF133
     /tmp/cccPjr0b.s:2898   .debug_str:000000000000032b .LASF134
     /tmp/cccPjr0b.s:3128   .debug_str:0000000000000a18 .LASF135
     /tmp/cccPjr0b.s:2972   .debug_str:0000000000000548 .LASF136
     /tmp/cccPjr0b.s:3020   .debug_str:00000000000006a5 .LASF137
     /tmp/cccPjr0b.s:2874   .debug_str:0000000000000264 .LASF138
     /tmp/cccPjr0b.s:3094   .debug_str:0000000000000878 .LASF139
     /tmp/cccPjr0b.s:2988   .debug_str:00000000000005c2 .LASF140
     /tmp/cccPjr0b.s:2856   .debug_str:00000000000001d8 .LASF141
     /tmp/cccPjr0b.s:2976   .debug_str:000000000000056e .LASF142
     /tmp/cccPjr0b.s:2844   .debug_str:000000000000016b .LASF143
     /tmp/cccPjr0b.s:2800   .debug_str:000000000000000a .LASF144
     /tmp/cccPjr0b.s:2864   .debug_str:0000000000000216 .LASF145
     /tmp/cccPjr0b.s:2834   .debug_str:0000000000000117 .LASF146
     /tmp/cccPjr0b.s:3096   .debug_str:000000000000088d .LASF147
     /tmp/cccPjr0b.s:2850   .debug_str:00000000000001a0 .LASF148
     /tmp/cccPjr0b.s:3018   .debug_str:0000000000000695 .LASF149
     /tmp/cccPjr0b.s:3182   .debug_str:0000000000000b6d .LASF150
     /tmp/cccPjr0b.s:3122   .debug_str:00000000000009e2 .LASF151
     /tmp/cccPjr0b.s:2950   .debug_str:00000000000004a6 .LASF152
     /tmp/cccPjr0b.s:2822   .debug_str:00000000000000c0 .LASF153
     /tmp/cccPjr0b.s:2904   .debug_str:0000000000000366 .LASF154
     /tmp/cccPjr0b.s:3154   .debug_str:0000000000000ada .LASF155
     /tmp/cccPjr0b.s:2910   .debug_str:000000000000039c .LASF156
     /tmp/cccPjr0b.s:2892   .debug_str:00000000000002f5 .LASF157
     /tmp/cccPjr0b.s:24     .text:0000000000000000 .LFB40
     /tmp/cccPjr0b.s:267    .text:00000000000001c4 .LFE40
     /tmp/cccPjr0b.s:3068   .debug_str:00000000000007df .LASF158
     /tmp/cccPjr0b.s:3024   .debug_str:00000000000006c7 .LASF159
     /tmp/cccPjr0b.s:2708   .debug_loc:0000000000000000 .LLST0
GAS LISTING /tmp/cccPjr0b.s 			page 17


     /tmp/cccPjr0b.s:3026   .debug_str:00000000000006cf .LASF160
     /tmp/cccPjr0b.s:2715   .debug_loc:0000000000000023 .LLST1
     /tmp/cccPjr0b.s:3044   .debug_str:000000000000074f .LASF161
     /tmp/cccPjr0b.s:3190   .debug_str:0000000000000bd8 .LASF162
     /tmp/cccPjr0b.s:2722   .debug_loc:0000000000000046 .LLST2
     /tmp/cccPjr0b.s:208    .text:000000000000016c .LBB22
     /tmp/cccPjr0b.s:249    .text:00000000000001a8 .LBE22
     /tmp/cccPjr0b.s:2876   .debug_str:0000000000000286 .LASF163
     /tmp/cccPjr0b.s:2729   .debug_loc:0000000000000069 .LLST7
     /tmp/cccPjr0b.s:3082   .debug_str:0000000000000833 .LASF164
     /tmp/cccPjr0b.s:3106   .debug_str:00000000000008c3 .LASF198
     /tmp/cccPjr0b.s:2740   .debug_loc:000000000000009f .LLST8
     /tmp/cccPjr0b.s:2798   .debug_str:0000000000000000 .LASF165
     /tmp/cccPjr0b.s:234    .text:0000000000000194 .LBB23
     /tmp/cccPjr0b.s:248    .text:00000000000001a8 .LBE23
     /tmp/cccPjr0b.s:2747   .debug_loc:00000000000000c2 .LLST9
     /tmp/cccPjr0b.s:243    .text:00000000000001a4 .LVL33
     /tmp/cccPjr0b.s:218    .text:0000000000000180 .LVL29
     /tmp/cccPjr0b.s:58     .text:0000000000000044 .LBB14
     /tmp/cccPjr0b.s:70     .text:0000000000000048 .LBE14
     /tmp/cccPjr0b.s:2754   .debug_loc:00000000000000e5 .LLST3
     /tmp/cccPjr0b.s:72     .text:0000000000000048 .LBB16
     /tmp/cccPjr0b.s:84     .text:0000000000000050 .LBE16
     /tmp/cccPjr0b.s:2761   .debug_loc:0000000000000108 .LLST4
     /tmp/cccPjr0b.s:142    .text:00000000000000e0 .LBB18
     /tmp/cccPjr0b.s:150    .text:00000000000000e4 .LBE18
     /tmp/cccPjr0b.s:2769   .debug_loc:000000000000012c .LLST5
     /tmp/cccPjr0b.s:156    .text:00000000000000ec .LBB20
     /tmp/cccPjr0b.s:163    .text:00000000000000f0 .LBE20
     /tmp/cccPjr0b.s:2776   .debug_loc:000000000000014f .LLST6
     /tmp/cccPjr0b.s:46     .text:0000000000000028 .LVL0
     /tmp/cccPjr0b.s:91     .text:0000000000000068 .LVL4
     /tmp/cccPjr0b.s:98     .text:000000000000007c .LVL6
     /tmp/cccPjr0b.s:103    .text:0000000000000088 .LVL7
     /tmp/cccPjr0b.s:110    .text:00000000000000a0 .LVL8
     /tmp/cccPjr0b.s:117    .text:00000000000000b4 .LVL10
     /tmp/cccPjr0b.s:122    .text:00000000000000c0 .LVL11
     /tmp/cccPjr0b.s:129    .text:00000000000000d0 .LVL12
     /tmp/cccPjr0b.s:135    .text:00000000000000dc .LVL13
     /tmp/cccPjr0b.s:174    .text:0000000000000110 .LVL19
     /tmp/cccPjr0b.s:181    .text:0000000000000128 .LVL20
     /tmp/cccPjr0b.s:186    .text:0000000000000134 .LVL21
     /tmp/cccPjr0b.s:193    .text:0000000000000148 .LVL23
     /tmp/cccPjr0b.s:198    .text:0000000000000154 .LVL24
     /tmp/cccPjr0b.s:203    .text:0000000000000164 .LVL25
     /tmp/cccPjr0b.s:207    .text:000000000000016c .LVL26
     /tmp/cccPjr0b.s:3148   .debug_str:0000000000000aad .LASF166
     /tmp/cccPjr0b.s:2960   .debug_str:00000000000004fd .LASF167
     /tmp/cccPjr0b.s:2890   .debug_str:00000000000002f0 .LASF168
     /tmp/cccPjr0b.s:2816   .debug_str:00000000000000a4 .LASF169
     /tmp/cccPjr0b.s:2948   .debug_str:000000000000049a .LASF199
     /tmp/cccPjr0b.s:2990   .debug_str:00000000000005e4 .LASF170
     /tmp/cccPjr0b.s:2880   .debug_str:0000000000000299 .LASF172
     /tmp/cccPjr0b.s:2998   .debug_str:000000000000060d .LASF171
     /tmp/cccPjr0b.s:2806   .debug_str:0000000000000035 .LASF173
     /tmp/cccPjr0b.s:2896   .debug_str:000000000000030a .LASF174
     /tmp/cccPjr0b.s:3142   .debug_str:0000000000000a70 .LASF176
GAS LISTING /tmp/cccPjr0b.s 			page 18


     /tmp/cccPjr0b.s:3016   .debug_str:0000000000000682 .LASF175
     /tmp/cccPjr0b.s:3180   .debug_str:0000000000000b61 .LASF177
     /tmp/cccPjr0b.s:2906   .debug_str:000000000000037f .LASF178
     /tmp/cccPjr0b.s:3022   .debug_str:00000000000006ba .LASF179
     /tmp/cccPjr0b.s:3124   .debug_str:00000000000009eb .LASF180
     /tmp/cccPjr0b.s:3038   .debug_str:000000000000071e .LASF181
     /tmp/cccPjr0b.s:2974   .debug_str:0000000000000559 .LASF182
     /tmp/cccPjr0b.s:3036   .debug_str:000000000000070e .LASF183
     /tmp/cccPjr0b.s:2944   .debug_str:0000000000000477 .LASF184
     /tmp/cccPjr0b.s:3072   .debug_str:00000000000007f2 .LASF185
     /tmp/cccPjr0b.s:93     .text:000000000000006c .LVL5
     /tmp/cccPjr0b.s:112    .text:00000000000000a4 .LVL9
     /tmp/cccPjr0b.s:171    .text:0000000000000104 .LVL18
     /tmp/cccPjr0b.s:188    .text:0000000000000138 .LVL22
     /tmp/cccPjr0b.s:211    .text:0000000000000170 .LVL27
     /tmp/cccPjr0b.s:213    .text:0000000000000174 .LVL28
     /tmp/cccPjr0b.s:222    .text:0000000000000184 .LVL30
     /tmp/cccPjr0b.s:227    .text:000000000000018c .LVL31
     /tmp/cccPjr0b.s:245    .text:00000000000001a8 .LVL34
     /tmp/cccPjr0b.s:260    .text:00000000000001b8 .LVL35
     /tmp/cccPjr0b.s:233    .text:0000000000000194 .LVL32
     /tmp/cccPjr0b.s:57     .text:0000000000000044 .LVL1
     /tmp/cccPjr0b.s:67     .text:0000000000000048 .LVL2
     /tmp/cccPjr0b.s:81     .text:0000000000000050 .LVL3
     /tmp/cccPjr0b.s:141    .text:00000000000000e0 .LVL14
     /tmp/cccPjr0b.s:148    .text:00000000000000e4 .LVL15
     /tmp/cccPjr0b.s:155    .text:00000000000000ec .LVL16
     /tmp/cccPjr0b.s:161    .text:00000000000000f0 .LVL17
     /tmp/cccPjr0b.s:276    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN3TCB12createThreadEPFvPvES0_
_ZN3TCB7runningE
_ZN5Riscv16stvecVectorTableEv
_Z11workerBodyAPv
_Z13thread_createPP3TCBPFvPvES2_
_Z11printStringPKc
_Z12printIntegerm
_Z11workerBodyBPv
_Z8sem_openPP11MySemaphorej
_Z15thread_dispatchv
_Z11workerBodyCPv
_Z11workerBodyDPv
_Z8sem_waitP11MySemaphore
_ZdlPv
_ZdaPv
