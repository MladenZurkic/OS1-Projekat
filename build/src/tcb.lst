GAS LISTING /tmp/cclBCrsM.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB12createThreadEPFvPvES0_
   9              	_ZN3TCB12createThreadEPFvPvES0_:
  10              	.LFB48:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** //
   2:src/tcb.cpp   **** // Created by marko on 20.4.22..
   3:src/tcb.cpp   **** //
   4:src/tcb.cpp   **** 
   5:src/tcb.cpp   **** #include "../h/tcb.hpp"
   6:src/tcb.cpp   **** #include "../h/riscv.hpp"
   7:src/tcb.cpp   **** 
   8:src/tcb.cpp   **** TCB *TCB::running = nullptr;
   9:src/tcb.cpp   **** 
  10:src/tcb.cpp   **** //uint64 TCB::timeSliceCounter = 0;
  11:src/tcb.cpp   **** //uint64 TCB::timeSliceCounterTest = 0;
  12:src/tcb.cpp   **** 
  13:src/tcb.cpp   **** TCB *TCB::createThread(Body body, void* arg)
  14:src/tcb.cpp   **** {
  12              		.loc 1 14 1
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA48
  16              	.LVL0:
  17 0000 130101FD 		addi	sp,sp,-48
  18              		.cfi_def_cfa_offset 48
  19 0004 23341102 		sd	ra,40(sp)
  20 0008 23308102 		sd	s0,32(sp)
  21 000c 233C9100 		sd	s1,24(sp)
  22 0010 23382101 		sd	s2,16(sp)
  23 0014 23343101 		sd	s3,8(sp)
  24              		.cfi_offset 1, -8
  25              		.cfi_offset 8, -16
  26              		.cfi_offset 9, -24
  27              		.cfi_offset 18, -32
  28              		.cfi_offset 19, -40
  29 0018 13040103 		addi	s0,sp,48
  30              		.cfi_def_cfa 8, 0
  31 001c 13090500 		mv	s2,a0
  32 0020 93890500 		mv	s3,a1
  15:src/tcb.cpp   ****     return new TCB(body, arg);
  33              		.loc 1 15 5
  34              		.loc 1 15 29 is_stmt 0
  35 0024 13050003 		li	a0,48
  36              	.LVL1:
  37              	.LEHB0:
  38 0028 97000000 		call	_Znwm@plt
  38      E7800000 
  39              	.LVL2:
  40              	.LEHE0:
  41 0030 93040500 		mv	s1,a0
  42              	.LVL3:
GAS LISTING /tmp/cclBCrsM.s 			page 2


  43              	.LBB13:
  44              	.LBB14:
  45              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     //uint64 getTimeSlice() const { return timeSlice; }
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     //static uint64 getTimeSliceTest() { return timeSliceCounterTest; }
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  26:src/../h/tcb.hpp **** 
  27:src/../h/tcb.hpp ****     static TCB *createThread(Body body, void* arg);
  28:src/../h/tcb.hpp **** 
  29:src/../h/tcb.hpp ****     static void yield();
  30:src/../h/tcb.hpp **** 
  31:src/../h/tcb.hpp ****     static TCB *running;
  32:src/../h/tcb.hpp **** 
  33:src/../h/tcb.hpp **** private:
  34:src/../h/tcb.hpp ****     TCB(Body body, void* arg) :
  35:src/../h/tcb.hpp ****             body(body),
  36:src/../h/tcb.hpp ****             stack(body != nullptr ? new uint64[STACK_SIZE] : nullptr),
  37:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  38:src/../h/tcb.hpp ****                      stack != nullptr ? (uint64) &stack[STACK_SIZE] : 0
  39:src/../h/tcb.hpp ****                     }),
  40:src/../h/tcb.hpp ****             finished(false),
  41:src/../h/tcb.hpp ****             arg(arg)
  46              		.loc 2 41 20
  47 0034 23302501 		sd	s2,0(a0)
  36:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  48              		.loc 2 36 35
  49 0038 630A0900 		beqz	s2,.L6
  36:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  50              		.loc 2 36 58
  51 003c 37250000 		li	a0,8192
  52              	.LEHB1:
  53 0040 97000000 		call	_Znam@plt
  53      E7800000 
  54              	.LVL4:
  55 0048 6F008000 		j	.L2
GAS LISTING /tmp/cclBCrsM.s 			page 3


  56              	.L6:
  36:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  57              		.loc 2 36 35
  58 004c 13050000 		li	a0,0
  59              	.L2:
  60              		.loc 2 41 20
  61 0050 23B4A400 		sd	a0,8(s1)
  62 0054 97070000 		lla	a5,_ZN3TCB13threadWrapperEv
  62      93870700 
  63 005c 23B8F400 		sd	a5,16(s1)
  38:src/../h/tcb.hpp ****                     }),
  64              		.loc 2 38 39
  65 0060 63060502 		beqz	a0,.L7
  38:src/../h/tcb.hpp ****                     }),
  66              		.loc 2 38 50
  67 0064 B7270000 		li	a5,8192
  68 0068 B307F500 		add	a5,a0,a5
  69              	.L3:
  70              		.loc 2 41 20
  71 006c 23BCF400 		sd	a5,24(s1)
  72 0070 23800402 		sb	zero,32(s1)
  73 0074 23B43403 		sd	s3,40(s1)
  42:src/../h/tcb.hpp ****     {
  43:src/../h/tcb.hpp ****         if (body != nullptr) { Scheduler::put(this); }
  74              		.loc 2 43 9 is_stmt 1
  75 0078 630C0902 		beqz	s2,.L1
  76              		.loc 2 43 32
  77              		.loc 2 43 46 is_stmt 0
  78 007c 13850400 		mv	a0,s1
  79 0080 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
  79      E7800000 
  80              	.LVL5:
  81              	.LEHE1:
  82 0088 6F008002 		j	.L1
  83              	.L7:
  38:src/../h/tcb.hpp ****                     }),
  84              		.loc 2 38 39
  85 008c 93070000 		li	a5,0
  86 0090 6FF0DFFD 		j	.L3
  87              	.L8:
  88 0094 13090500 		mv	s2,a0
  89              	.LVL6:
  90              	.LBE14:
  91              	.LBE13:
  92              		.loc 1 15 29
  93 0098 13850400 		mv	a0,s1
  94 009c 97000000 		call	_ZdlPv@plt
  94      E7800000 
  95              	.LVL7:
  96 00a4 13050900 		mv	a0,s2
  97              	.LEHB2:
  98 00a8 97000000 		call	_Unwind_Resume@plt
  98      E7800000 
  99              	.LVL8:
 100              	.LEHE2:
 101              	.L1:
  16:src/tcb.cpp   **** }
GAS LISTING /tmp/cclBCrsM.s 			page 4


 102              		.loc 1 16 1
 103 00b0 13850400 		mv	a0,s1
 104 00b4 83308102 		ld	ra,40(sp)
 105              		.cfi_restore 1
 106 00b8 03340102 		ld	s0,32(sp)
 107              		.cfi_restore 8
 108              		.cfi_def_cfa 2, 48
 109 00bc 83348101 		ld	s1,24(sp)
 110              		.cfi_restore 9
 111              	.LVL9:
 112 00c0 03390101 		ld	s2,16(sp)
 113              		.cfi_restore 18
 114              	.LVL10:
 115 00c4 83398100 		ld	s3,8(sp)
 116              		.cfi_restore 19
 117              	.LVL11:
 118 00c8 13010103 		addi	sp,sp,48
 119              		.cfi_def_cfa_offset 0
 120 00cc 67800000 		jr	ra
 121              		.cfi_endproc
 122              	.LFE48:
 123              		.globl	__gxx_personality_v0
 124              		.section	.gcc_except_table,"a",@progbits
 125              	.LLSDA48:
 126 0000 FF       		.byte	0xff
 127 0001 FF       		.byte	0xff
 128 0002 03       		.byte	0x3
 129 0003 27       		.byte	0x27
 130 0004 00000000 		.4byte	.LEHB0-.LFB48
 131 0008 00000000 		.4byte	.LEHE0-.LEHB0
 132 000c 00000000 		.4byte	0
 133 0010 00       		.byte	0
 134 0011 00000000 		.4byte	.LEHB1-.LFB48
 135 0015 00000000 		.4byte	.LEHE1-.LEHB1
 136 0019 00000000 		.4byte	.L8-.LFB48
 137 001d 00       		.byte	0
 138 001e 00000000 		.4byte	.LEHB2-.LFB48
 139 0022 00000000 		.4byte	.LEHE2-.LEHB2
 140 0026 00000000 		.4byte	0
 141 002a 00       		.byte	0
 142              		.text
 144              		.align	2
 145              		.globl	_ZN3TCB5yieldEv
 147              	_ZN3TCB5yieldEv:
 148              	.LFB49:
  17:src/tcb.cpp   **** 
  18:src/tcb.cpp   **** void TCB::yield()
  19:src/tcb.cpp   **** {
 149              		.loc 1 19 1 is_stmt 1
 150              		.cfi_startproc
 151 00d0 130101FF 		addi	sp,sp,-16
 152              		.cfi_def_cfa_offset 16
 153 00d4 23348100 		sd	s0,8(sp)
 154              		.cfi_offset 8, -8
 155 00d8 13040101 		addi	s0,sp,16
 156              		.cfi_def_cfa 8, 0
  20:src/tcb.cpp   ****     Riscv::w_a0(0x13);
GAS LISTING /tmp/cclBCrsM.s 			page 5


 157              		.loc 1 20 5
 158              	.LVL12:
 159              	.LBB15:
 160              	.LBB16:
 161              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
GAS LISTING /tmp/cclBCrsM.s 			page 6


  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     //read a1 register
  92:src/../h/riscv.hpp ****     static uint64 r_a1();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //write to a1 register
  95:src/../h/riscv.hpp ****     static void w_a1(uint64 writeValue);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     //read a2 register
  98:src/../h/riscv.hpp ****     static uint64 r_a2();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     //write to a2 register
 101:src/../h/riscv.hpp ****     static void w_a2(uint64 writeValue);
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp ****     //read a3 register
 104:src/../h/riscv.hpp ****     static uint64 r_a3();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     //write to a3 register
 107:src/../h/riscv.hpp ****     static void w_a3(uint64 writeValue);
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     //read a4 register
GAS LISTING /tmp/cclBCrsM.s 			page 7


 110:src/../h/riscv.hpp ****     static uint64 r_a4();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     //write to a4 register
 113:src/../h/riscv.hpp ****     static void w_a4(uint64 writeValue);
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****     //read a5 register
 116:src/../h/riscv.hpp ****     static uint64 r_a5();
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp ****     //write to a5 register
 119:src/../h/riscv.hpp ****     static void w_a5(uint64 writeValue);
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp ****     //read a6 register
 122:src/../h/riscv.hpp ****     static uint64 r_a6();
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     //write to a6 register
 125:src/../h/riscv.hpp ****     static void w_a6(uint64 writeValue);
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp ****     //read a7 register
 128:src/../h/riscv.hpp ****     static uint64 r_a7();
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp ****     //write to a7 register
 131:src/../h/riscv.hpp ****     static void w_a7(uint64 writeValue);
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** private:
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp ****     // supervisor trap handler
 137:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 142:src/../h/riscv.hpp **** };
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     uint64 volatile scause;
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 149:src/../h/riscv.hpp ****     return scause;
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     uint64 volatile sepc;
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 161:src/../h/riscv.hpp ****     return sepc;
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
GAS LISTING /tmp/cclBCrsM.s 			page 8


 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile stvec;
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 173:src/../h/riscv.hpp ****     return stvec;
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 179:src/../h/riscv.hpp **** }
 180:src/../h/riscv.hpp **** 
 181:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 182:src/../h/riscv.hpp **** {
 183:src/../h/riscv.hpp ****     uint64 volatile stval;
 184:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 185:src/../h/riscv.hpp ****     return stval;
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 191:src/../h/riscv.hpp **** }
 192:src/../h/riscv.hpp **** 
 193:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 194:src/../h/riscv.hpp **** {
 195:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 196:src/../h/riscv.hpp **** }
 197:src/../h/riscv.hpp **** 
 198:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 199:src/../h/riscv.hpp **** {
 200:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 201:src/../h/riscv.hpp **** }
 202:src/../h/riscv.hpp **** 
 203:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 204:src/../h/riscv.hpp **** {
 205:src/../h/riscv.hpp ****     uint64 volatile sip;
 206:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 207:src/../h/riscv.hpp ****     return sip;
 208:src/../h/riscv.hpp **** }
 209:src/../h/riscv.hpp **** 
 210:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 211:src/../h/riscv.hpp **** {
 212:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 213:src/../h/riscv.hpp **** }
 214:src/../h/riscv.hpp **** 
 215:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 216:src/../h/riscv.hpp **** {
 217:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 218:src/../h/riscv.hpp **** }
 219:src/../h/riscv.hpp **** 
 220:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 221:src/../h/riscv.hpp **** {
 222:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 223:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cclBCrsM.s 			page 9


 224:src/../h/riscv.hpp **** 
 225:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 226:src/../h/riscv.hpp **** {
 227:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 228:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 229:src/../h/riscv.hpp ****     return sstatus;
 230:src/../h/riscv.hpp **** }
 231:src/../h/riscv.hpp **** 
 232:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 233:src/../h/riscv.hpp **** {
 234:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 235:src/../h/riscv.hpp **** }
 236:src/../h/riscv.hpp **** 
 237:src/../h/riscv.hpp **** //a0
 238:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0()
 239:src/../h/riscv.hpp **** {
 240:src/../h/riscv.hpp ****     uint64 volatile a0;
 241:src/../h/riscv.hpp ****     __asm__ volatile ("mv %0, a0" : "=r"(a0));
 242:src/../h/riscv.hpp ****     return a0;
 243:src/../h/riscv.hpp **** }
 244:src/../h/riscv.hpp **** 
 245:src/../h/riscv.hpp **** 
 246:src/../h/riscv.hpp **** inline void Riscv::w_a0(uint64 writeValue) {
 247:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(writeValue));
 162              		.loc 3 247 5
 163              		.loc 3 247 55 is_stmt 0
 164 00dc 93073001 		li	a5,19
 165              	#APP
 166              	# 247 "src/../h/riscv.hpp" 1
 248              	}
 167              		mv a0, a5
 168              	# 0 "" 2
 169              	.LVL13:
 170              	#NO_APP
 171              	.LBE16:
 172              	.LBE15:
  21:src/tcb.cpp   ****     __asm__ volatile ("ecall");
 173              		.loc 1 21 5 is_stmt 1
 174              		.loc 1 21 31 is_stmt 0
 175              	#APP
 176              	# 21 "src/tcb.cpp" 1
  22              	}
 177              		ecall
 178              	# 0 "" 2
 179              		.loc 1 22 1
 180              	#NO_APP
 181 00e8 03348100 		ld	s0,8(sp)
 182              		.cfi_restore 8
 183              		.cfi_def_cfa 2, 16
 184 00ec 13010101 		addi	sp,sp,16
 185              		.cfi_def_cfa_offset 0
 186 00f0 67800000 		jr	ra
 187              		.cfi_endproc
 188              	.LFE49:
 190              		.align	2
 191              		.globl	_ZN3TCB13threadWrapperEv
 193              	_ZN3TCB13threadWrapperEv:
GAS LISTING /tmp/cclBCrsM.s 			page 10


 194              	.LFB51:
  23:src/tcb.cpp   **** 
  24:src/tcb.cpp   **** void TCB::dispatch()
  25:src/tcb.cpp   **** {
  26:src/tcb.cpp   ****     TCB *old = running;
  27:src/tcb.cpp   ****     if (!old->isFinished()) { Scheduler::put(old); }
  28:src/tcb.cpp   ****     running = Scheduler::get();
  29:src/tcb.cpp   **** 
  30:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
  31:src/tcb.cpp   **** }
  32:src/tcb.cpp   **** 
  33:src/tcb.cpp   **** void TCB::threadWrapper()
  34:src/tcb.cpp   **** {
 195              		.loc 1 34 1 is_stmt 1
 196              		.cfi_startproc
 197 00f4 130101FE 		addi	sp,sp,-32
 198              		.cfi_def_cfa_offset 32
 199 00f8 233C1100 		sd	ra,24(sp)
 200 00fc 23388100 		sd	s0,16(sp)
 201 0100 23349100 		sd	s1,8(sp)
 202              		.cfi_offset 1, -8
 203              		.cfi_offset 8, -16
 204              		.cfi_offset 9, -24
 205 0104 13040102 		addi	s0,sp,32
 206              		.cfi_def_cfa 8, 0
  35:src/tcb.cpp   ****     Riscv::popSppSpie();
 207              		.loc 1 35 5
 208              		.loc 1 35 22 is_stmt 0
 209 0108 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
 209      E7800000 
 210              	.LVL14:
  36:src/tcb.cpp   ****     running->body(running->arg);
 211              		.loc 1 36 5 is_stmt 1
 212              		.loc 1 36 14 is_stmt 0
 213 0110 97040000 		lla	s1,.LANCHOR0
 213      93840400 
 214 0118 83B70400 		ld	a5,0(s1)
 215 011c 03B70700 		ld	a4,0(a5)
 216              		.loc 1 36 18
 217 0120 03B58702 		ld	a0,40(a5)
 218 0124 E7000700 		jalr	a4
 219              	.LVL15:
  37:src/tcb.cpp   ****     running->setFinished(true);
 220              		.loc 1 37 5 is_stmt 1
 221              		.loc 1 37 25 is_stmt 0
 222 0128 83B70400 		ld	a5,0(s1)
 223              	.LVL16:
 224              	.LBB17:
 225              	.LBB18:
  19:src/../h/tcb.hpp **** 
 226              		.loc 2 19 36 is_stmt 1
  19:src/../h/tcb.hpp **** 
 227              		.loc 2 19 45 is_stmt 0
 228 012c 13071000 		li	a4,1
 229 0130 2380E702 		sb	a4,32(a5)
 230              	.LVL17:
 231              	.LBE18:
GAS LISTING /tmp/cclBCrsM.s 			page 11


 232              	.LBE17:
  38:src/tcb.cpp   ****     TCB::yield();
 233              		.loc 1 38 5 is_stmt 1
 234              		.loc 1 38 15 is_stmt 0
 235 0134 97000000 		call	_ZN3TCB5yieldEv
 235      E7800000 
 236              	.LVL18:
  39:src/tcb.cpp   **** }
 237              		.loc 1 39 1
 238 013c 83308101 		ld	ra,24(sp)
 239              		.cfi_restore 1
 240 0140 03340101 		ld	s0,16(sp)
 241              		.cfi_restore 8
 242              		.cfi_def_cfa 2, 32
 243 0144 83348100 		ld	s1,8(sp)
 244              		.cfi_restore 9
 245 0148 13010102 		addi	sp,sp,32
 246              		.cfi_def_cfa_offset 0
 247 014c 67800000 		jr	ra
 248              		.cfi_endproc
 249              	.LFE51:
 251              		.align	2
 252              		.globl	_ZN3TCB8dispatchEv
 254              	_ZN3TCB8dispatchEv:
 255              	.LFB50:
  25:src/tcb.cpp   ****     TCB *old = running;
 256              		.loc 1 25 1 is_stmt 1
 257              		.cfi_startproc
 258 0150 130101FE 		addi	sp,sp,-32
 259              		.cfi_def_cfa_offset 32
 260 0154 233C1100 		sd	ra,24(sp)
 261 0158 23388100 		sd	s0,16(sp)
 262 015c 23349100 		sd	s1,8(sp)
 263              		.cfi_offset 1, -8
 264              		.cfi_offset 8, -16
 265              		.cfi_offset 9, -24
 266 0160 13040102 		addi	s0,sp,32
 267              		.cfi_def_cfa 8, 0
  26:src/tcb.cpp   ****     if (!old->isFinished()) { Scheduler::put(old); }
 268              		.loc 1 26 5
  26:src/tcb.cpp   ****     if (!old->isFinished()) { Scheduler::put(old); }
 269              		.loc 1 26 10 is_stmt 0
 270 0164 97040000 		ld	s1,.LANCHOR0
 270      83B40400 
 271              	.LVL19:
  27:src/tcb.cpp   ****     running = Scheduler::get();
 272              		.loc 1 27 5 is_stmt 1
 273              	.LBB19:
 274              	.LBB20:
  17:src/../h/tcb.hpp **** 
 275              		.loc 2 17 31
  17:src/../h/tcb.hpp **** 
 276              		.loc 2 17 38 is_stmt 0
 277 016c 83C70402 		lbu	a5,32(s1)
 278              	.LVL20:
 279              	.LBE20:
 280              	.LBE19:
GAS LISTING /tmp/cclBCrsM.s 			page 12


  27:src/tcb.cpp   ****     running = Scheduler::get();
 281              		.loc 1 27 5
 282 0170 638C0702 		beqz	a5,.L17
 283              	.L15:
  28:src/tcb.cpp   **** 
 284              		.loc 1 28 5 is_stmt 1
  28:src/tcb.cpp   **** 
 285              		.loc 1 28 29 is_stmt 0
 286 0174 97000000 		call	_ZN9Scheduler3getEv@plt
 286      E7800000 
 287              	.LVL21:
  28:src/tcb.cpp   **** 
 288              		.loc 1 28 13
 289 017c 97070000 		sd	a0,.LANCHOR0,a5
 289      23B0A700 
  30:src/tcb.cpp   **** }
 290              		.loc 1 30 5 is_stmt 1
  30:src/tcb.cpp   **** }
 291              		.loc 1 30 23 is_stmt 0
 292 0184 93050501 		addi	a1,a0,16
 293 0188 13850401 		addi	a0,s1,16
 294 018c 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 294      E7800000 
 295              	.LVL22:
  31:src/tcb.cpp   **** 
 296              		.loc 1 31 1
 297 0194 83308101 		ld	ra,24(sp)
 298              		.cfi_remember_state
 299              		.cfi_restore 1
 300 0198 03340101 		ld	s0,16(sp)
 301              		.cfi_restore 8
 302              		.cfi_def_cfa 2, 32
 303 019c 83348100 		ld	s1,8(sp)
 304              		.cfi_restore 9
 305              	.LVL23:
 306 01a0 13010102 		addi	sp,sp,32
 307              		.cfi_def_cfa_offset 0
 308 01a4 67800000 		jr	ra
 309              	.LVL24:
 310              	.L17:
 311              		.cfi_restore_state
  27:src/tcb.cpp   ****     running = Scheduler::get();
 312              		.loc 1 27 31 is_stmt 1 discriminator 1
  27:src/tcb.cpp   ****     running = Scheduler::get();
 313              		.loc 1 27 45 is_stmt 0 discriminator 1
 314 01a8 13850400 		mv	a0,s1
 315 01ac 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 315      E7800000 
 316              	.LVL25:
 317 01b4 6FF01FFC 		j	.L15
 318              		.cfi_endproc
 319              	.LFE50:
 321              		.align	2
 322              		.globl	_ZN3TCB4joinEPS_
 324              	_ZN3TCB4joinEPS_:
 325              	.LFB52:
  40:src/tcb.cpp   **** 
GAS LISTING /tmp/cclBCrsM.s 			page 13


  41:src/tcb.cpp   **** void TCB::join(TCB* handle) {
 326              		.loc 1 41 29 is_stmt 1
 327              		.cfi_startproc
 328              	.LVL26:
 329 01b8 130101FE 		addi	sp,sp,-32
 330              		.cfi_def_cfa_offset 32
 331 01bc 233C1100 		sd	ra,24(sp)
 332 01c0 23388100 		sd	s0,16(sp)
 333 01c4 23349100 		sd	s1,8(sp)
 334              		.cfi_offset 1, -8
 335              		.cfi_offset 8, -16
 336              		.cfi_offset 9, -24
 337 01c8 13040102 		addi	s0,sp,32
 338              		.cfi_def_cfa 8, 0
 339 01cc 93040500 		mv	s1,a0
 340              	.LVL27:
 341              	.L20:
  42:src/tcb.cpp   ****     while(!handle->isFinished()) {
 342              		.loc 1 42 5
 343              		.loc 1 42 11
 344              	.LBB21:
 345              	.LBB22:
  17:src/../h/tcb.hpp **** 
 346              		.loc 2 17 31
  17:src/../h/tcb.hpp **** 
 347              		.loc 2 17 38 is_stmt 0
 348 01d0 83C70402 		lbu	a5,32(s1)
 349              	.LVL28:
 350              	.LBE22:
 351              	.LBE21:
 352              		.loc 1 42 11
 353 01d4 63980700 		bnez	a5,.L18
  43:src/tcb.cpp   ****         TCB::dispatch();
 354              		.loc 1 43 9 is_stmt 1
 355              		.loc 1 43 22 is_stmt 0
 356 01d8 97000000 		call	_ZN3TCB8dispatchEv
 356      E7800000 
 357              	.LVL29:
  42:src/tcb.cpp   ****     while(!handle->isFinished()) {
 358              		.loc 1 42 5
 359 01e0 6FF01FFF 		j	.L20
 360              	.L18:
  44:src/tcb.cpp   ****     }
  45:src/tcb.cpp   **** }
 361              		.loc 1 45 1
 362 01e4 83308101 		ld	ra,24(sp)
 363              		.cfi_restore 1
 364 01e8 03340101 		ld	s0,16(sp)
 365              		.cfi_restore 8
 366              		.cfi_def_cfa 2, 32
 367 01ec 83348100 		ld	s1,8(sp)
 368              		.cfi_restore 9
 369              	.LVL30:
 370 01f0 13010102 		addi	sp,sp,32
 371              		.cfi_def_cfa_offset 0
 372 01f4 67800000 		jr	ra
 373              		.cfi_endproc
GAS LISTING /tmp/cclBCrsM.s 			page 14


 374              	.LFE52:
 376              		.globl	_ZN3TCB7runningE
 377              		.bss
 378              		.align	3
 379              		.set	.LANCHOR0,. + 0
 382              	_ZN3TCB7runningE:
 383 0000 00000000 		.zero	8
 383      00000000 
 384              		.text
 385              	.Letext0:
 386              		.file 4 "src/../h/../lib/hw.h"
 387              		.file 5 "src/../h/scheduler.hpp"
 2821              		.align	3
 2824              	DW.ref.__gxx_personality_v0:
 2825 0000 00000000 		.dword	__gxx_personality_v0
 2825      00000000 
 2826              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 2827              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cclBCrsM.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/cclBCrsM.s:9      .text:0000000000000000 _ZN3TCB12createThreadEPFvPvES0_
     /tmp/cclBCrsM.s:13     .text:0000000000000000 .L0 
     /tmp/cclBCrsM.s:2824   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cclBCrsM.s:17     .text:0000000000000000 .L0 
     /tmp/cclBCrsM.s:18     .text:0000000000000004 .L0 
     /tmp/cclBCrsM.s:24     .text:0000000000000018 .L0 
     /tmp/cclBCrsM.s:25     .text:0000000000000018 .L0 
     /tmp/cclBCrsM.s:26     .text:0000000000000018 .L0 
     /tmp/cclBCrsM.s:27     .text:0000000000000018 .L0 
     /tmp/cclBCrsM.s:28     .text:0000000000000018 .L0 
     /tmp/cclBCrsM.s:30     .text:000000000000001c .L0 
     /tmp/cclBCrsM.s:34     .text:0000000000000024 .L0 
     /tmp/cclBCrsM.s:35     .text:0000000000000024 .L0 
     /tmp/cclBCrsM.s:47     .text:0000000000000034 .L0 
     /tmp/cclBCrsM.s:49     .text:0000000000000038 .L0 
     /tmp/cclBCrsM.s:51     .text:000000000000003c .L0 
     /tmp/cclBCrsM.s:58     .text:000000000000004c .L0 
     /tmp/cclBCrsM.s:61     .text:0000000000000050 .L0 
     /tmp/cclBCrsM.s:193    .text:00000000000000f4 _ZN3TCB13threadWrapperEv
     /tmp/cclBCrsM.s:65     .text:0000000000000060 .L0 
     /tmp/cclBCrsM.s:67     .text:0000000000000064 .L0 
     /tmp/cclBCrsM.s:71     .text:000000000000006c .L0 
     /tmp/cclBCrsM.s:75     .text:0000000000000078 .L0 
     /tmp/cclBCrsM.s:77     .text:000000000000007c .L0 
     /tmp/cclBCrsM.s:78     .text:000000000000007c .L0 
     /tmp/cclBCrsM.s:85     .text:000000000000008c .L0 
     /tmp/cclBCrsM.s:93     .text:0000000000000098 .L0 
     /tmp/cclBCrsM.s:103    .text:00000000000000b0 .L0 
     /tmp/cclBCrsM.s:105    .text:00000000000000b8 .L0 
     /tmp/cclBCrsM.s:107    .text:00000000000000bc .L0 
     /tmp/cclBCrsM.s:108    .text:00000000000000bc .L0 
     /tmp/cclBCrsM.s:110    .text:00000000000000c0 .L0 
     /tmp/cclBCrsM.s:113    .text:00000000000000c4 .L0 
     /tmp/cclBCrsM.s:116    .text:00000000000000c8 .L0 
     /tmp/cclBCrsM.s:119    .text:00000000000000cc .L0 
     /tmp/cclBCrsM.s:121    .text:00000000000000d0 .L0 
     /tmp/cclBCrsM.s:147    .text:00000000000000d0 _ZN3TCB5yieldEv
     /tmp/cclBCrsM.s:150    .text:00000000000000d0 .L0 
     /tmp/cclBCrsM.s:151    .text:00000000000000d0 .L0 
     /tmp/cclBCrsM.s:152    .text:00000000000000d4 .L0 
     /tmp/cclBCrsM.s:154    .text:00000000000000d8 .L0 
     /tmp/cclBCrsM.s:156    .text:00000000000000dc .L0 
     /tmp/cclBCrsM.s:162    .text:00000000000000dc .L0 
     /tmp/cclBCrsM.s:163    .text:00000000000000dc .L0 
     /tmp/cclBCrsM.s:164    .text:00000000000000dc .L0 
     /tmp/cclBCrsM.s:174    .text:00000000000000e4 .L0 
         src/tcb.cpp:21     .text:00000000000000e4 .L0 
     /tmp/cclBCrsM.s:181    .text:00000000000000e8 .L0 
     /tmp/cclBCrsM.s:182    .text:00000000000000ec .L0 
     /tmp/cclBCrsM.s:183    .text:00000000000000ec .L0 
     /tmp/cclBCrsM.s:185    .text:00000000000000f0 .L0 
     /tmp/cclBCrsM.s:187    .text:00000000000000f4 .L0 
     /tmp/cclBCrsM.s:196    .text:00000000000000f4 .L0 
     /tmp/cclBCrsM.s:197    .text:00000000000000f4 .L0 
     /tmp/cclBCrsM.s:198    .text:00000000000000f8 .L0 
GAS LISTING /tmp/cclBCrsM.s 			page 16


     /tmp/cclBCrsM.s:202    .text:0000000000000104 .L0 
     /tmp/cclBCrsM.s:203    .text:0000000000000104 .L0 
     /tmp/cclBCrsM.s:204    .text:0000000000000104 .L0 
     /tmp/cclBCrsM.s:206    .text:0000000000000108 .L0 
     /tmp/cclBCrsM.s:208    .text:0000000000000108 .L0 
     /tmp/cclBCrsM.s:209    .text:0000000000000108 .L0 
     /tmp/cclBCrsM.s:212    .text:0000000000000110 .L0 
     /tmp/cclBCrsM.s:213    .text:0000000000000110 .L0 
     /tmp/cclBCrsM.s:217    .text:0000000000000120 .L0 
     /tmp/cclBCrsM.s:221    .text:0000000000000128 .L0 
     /tmp/cclBCrsM.s:222    .text:0000000000000128 .L0 
     /tmp/cclBCrsM.s:227    .text:000000000000012c .L0 
     /tmp/cclBCrsM.s:228    .text:000000000000012c .L0 
     /tmp/cclBCrsM.s:234    .text:0000000000000134 .L0 
     /tmp/cclBCrsM.s:235    .text:0000000000000134 .L0 
     /tmp/cclBCrsM.s:238    .text:000000000000013c .L0 
     /tmp/cclBCrsM.s:239    .text:0000000000000140 .L0 
     /tmp/cclBCrsM.s:241    .text:0000000000000144 .L0 
     /tmp/cclBCrsM.s:242    .text:0000000000000144 .L0 
     /tmp/cclBCrsM.s:244    .text:0000000000000148 .L0 
     /tmp/cclBCrsM.s:246    .text:000000000000014c .L0 
     /tmp/cclBCrsM.s:248    .text:0000000000000150 .L0 
     /tmp/cclBCrsM.s:254    .text:0000000000000150 _ZN3TCB8dispatchEv
     /tmp/cclBCrsM.s:257    .text:0000000000000150 .L0 
     /tmp/cclBCrsM.s:258    .text:0000000000000150 .L0 
     /tmp/cclBCrsM.s:259    .text:0000000000000154 .L0 
     /tmp/cclBCrsM.s:263    .text:0000000000000160 .L0 
     /tmp/cclBCrsM.s:264    .text:0000000000000160 .L0 
     /tmp/cclBCrsM.s:265    .text:0000000000000160 .L0 
     /tmp/cclBCrsM.s:267    .text:0000000000000164 .L0 
     /tmp/cclBCrsM.s:269    .text:0000000000000164 .L0 
     /tmp/cclBCrsM.s:270    .text:0000000000000164 .L0 
     /tmp/cclBCrsM.s:275    .text:000000000000016c .L0 
     /tmp/cclBCrsM.s:276    .text:000000000000016c .L0 
     /tmp/cclBCrsM.s:277    .text:000000000000016c .L0 
     /tmp/cclBCrsM.s:282    .text:0000000000000170 .L0 
     /tmp/cclBCrsM.s:285    .text:0000000000000174 .L0 
     /tmp/cclBCrsM.s:286    .text:0000000000000174 .L0 
     /tmp/cclBCrsM.s:289    .text:000000000000017c .L0 
     /tmp/cclBCrsM.s:291    .text:0000000000000184 .L0 
     /tmp/cclBCrsM.s:292    .text:0000000000000184 .L0 
     /tmp/cclBCrsM.s:297    .text:0000000000000194 .L0 
     /tmp/cclBCrsM.s:298    .text:0000000000000198 .L0 
     /tmp/cclBCrsM.s:299    .text:0000000000000198 .L0 
     /tmp/cclBCrsM.s:301    .text:000000000000019c .L0 
     /tmp/cclBCrsM.s:302    .text:000000000000019c .L0 
     /tmp/cclBCrsM.s:304    .text:00000000000001a0 .L0 
     /tmp/cclBCrsM.s:307    .text:00000000000001a4 .L0 
     /tmp/cclBCrsM.s:311    .text:00000000000001a8 .L0 
     /tmp/cclBCrsM.s:313    .text:00000000000001a8 .L0 
     /tmp/cclBCrsM.s:314    .text:00000000000001a8 .L0 
     /tmp/cclBCrsM.s:318    .text:00000000000001b8 .L0 
     /tmp/cclBCrsM.s:324    .text:00000000000001b8 _ZN3TCB4joinEPS_
     /tmp/cclBCrsM.s:327    .text:00000000000001b8 .L0 
     /tmp/cclBCrsM.s:329    .text:00000000000001b8 .L0 
     /tmp/cclBCrsM.s:330    .text:00000000000001bc .L0 
     /tmp/cclBCrsM.s:334    .text:00000000000001c8 .L0 
GAS LISTING /tmp/cclBCrsM.s 			page 17


     /tmp/cclBCrsM.s:335    .text:00000000000001c8 .L0 
     /tmp/cclBCrsM.s:336    .text:00000000000001c8 .L0 
     /tmp/cclBCrsM.s:338    .text:00000000000001cc .L0 
     /tmp/cclBCrsM.s:343    .text:00000000000001d0 .L0 
     /tmp/cclBCrsM.s:346    .text:00000000000001d0 .L0 
     /tmp/cclBCrsM.s:347    .text:00000000000001d0 .L0 
     /tmp/cclBCrsM.s:348    .text:00000000000001d0 .L0 
     /tmp/cclBCrsM.s:353    .text:00000000000001d4 .L0 
     /tmp/cclBCrsM.s:355    .text:00000000000001d8 .L0 
     /tmp/cclBCrsM.s:356    .text:00000000000001d8 .L0 
     /tmp/cclBCrsM.s:359    .text:00000000000001e0 .L0 
     /tmp/cclBCrsM.s:362    .text:00000000000001e4 .L0 
     /tmp/cclBCrsM.s:363    .text:00000000000001e8 .L0 
     /tmp/cclBCrsM.s:365    .text:00000000000001ec .L0 
     /tmp/cclBCrsM.s:366    .text:00000000000001ec .L0 
     /tmp/cclBCrsM.s:368    .text:00000000000001f0 .L0 
     /tmp/cclBCrsM.s:371    .text:00000000000001f4 .L0 
     /tmp/cclBCrsM.s:373    .text:00000000000001f8 .L0 
     /tmp/cclBCrsM.s:382    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/cclBCrsM.s:379    .bss:0000000000000000 .LANCHOR0
     /tmp/cclBCrsM.s:388    .text:00000000000001f8 .L0 
     /tmp/cclBCrsM.s:62     .text:0000000000000054 .L0 
     /tmp/cclBCrsM.s:213    .text:0000000000000110 .L0 
     /tmp/cclBCrsM.s:270    .text:0000000000000164 .L0 
     /tmp/cclBCrsM.s:289    .text:000000000000017c .L0 
     /tmp/cclBCrsM.s:56     .text:000000000000004c .L6
     /tmp/cclBCrsM.s:59     .text:0000000000000050 .L2
     /tmp/cclBCrsM.s:83     .text:000000000000008c .L7
     /tmp/cclBCrsM.s:101    .text:00000000000000b0 .L1
     /tmp/cclBCrsM.s:69     .text:000000000000006c .L3
     /tmp/cclBCrsM.s:310    .text:00000000000001a8 .L17
     /tmp/cclBCrsM.s:283    .text:0000000000000174 .L15
     /tmp/cclBCrsM.s:360    .text:00000000000001e4 .L18
     /tmp/cclBCrsM.s:341    .text:00000000000001d0 .L20
     /tmp/cclBCrsM.s:37     .text:0000000000000028 .LEHB0
     /tmp/cclBCrsM.s:10     .text:0000000000000000 .LFB48
     /tmp/cclBCrsM.s:40     .text:0000000000000030 .LEHE0
     /tmp/cclBCrsM.s:52     .text:0000000000000040 .LEHB1
     /tmp/cclBCrsM.s:81     .text:0000000000000088 .LEHE1
     /tmp/cclBCrsM.s:87     .text:0000000000000094 .L8
     /tmp/cclBCrsM.s:97     .text:00000000000000a8 .LEHB2
     /tmp/cclBCrsM.s:100    .text:00000000000000b0 .LEHE2
     /tmp/cclBCrsM.s:1464   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cclBCrsM.s:2792   .debug_str:000000000000074e .LASF128
     /tmp/cclBCrsM.s:2664   .debug_str:00000000000003d2 .LASF129
     /tmp/cclBCrsM.s:2614   .debug_str:000000000000024b .LASF130
     /tmp/cclBCrsM.s:5      .text:0000000000000000 .Ltext0
     /tmp/cclBCrsM.s:385    .text:00000000000001f8 .Letext0
     /tmp/cclBCrsM.s:2528   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cclBCrsM.s:2682   .debug_str:000000000000044b .LASF0
     /tmp/cclBCrsM.s:2696   .debug_str:0000000000000499 .LASF1
     /tmp/cclBCrsM.s:2668   .debug_str:00000000000003e5 .LASF2
     /tmp/cclBCrsM.s:2640   .debug_str:000000000000034e .LASF4
     /tmp/cclBCrsM.s:2742   .debug_str:00000000000005ce .LASF3
     /tmp/cclBCrsM.s:2556   .debug_str:00000000000000a6 .LASF5
     /tmp/cclBCrsM.s:2700   .debug_str:00000000000004bd .LASF6
     /tmp/cclBCrsM.s:2680   .debug_str:0000000000000438 .LASF7
GAS LISTING /tmp/cclBCrsM.s 			page 18


     /tmp/cclBCrsM.s:2784   .debug_str:0000000000000715 .LASF8
     /tmp/cclBCrsM.s:2626   .debug_str:00000000000002b2 .LASF9
     /tmp/cclBCrsM.s:2718   .debug_str:0000000000000527 .LASF10
     /tmp/cclBCrsM.s:2776   .debug_str:00000000000006d2 .LASF11
     /tmp/cclBCrsM.s:2562   .debug_str:00000000000000b7 .LASF12
     /tmp/cclBCrsM.s:2534   .debug_str:0000000000000019 .LASF13
     /tmp/cclBCrsM.s:2580   .debug_str:0000000000000139 .LASF14
     /tmp/cclBCrsM.s:2732   .debug_str:000000000000057f .LASF15
     /tmp/cclBCrsM.s:2590   .debug_str:0000000000000193 .LASF16
     /tmp/cclBCrsM.s:2714   .debug_str:0000000000000518 .LASF17
     /tmp/cclBCrsM.s:2616   .debug_str:0000000000000269 .LASF131
     /tmp/cclBCrsM.s:2636   .debug_str:0000000000000312 .LASF132
     /tmp/cclBCrsM.s:2576   .debug_str:0000000000000117 .LASF133
     /tmp/cclBCrsM.s:2660   .debug_str:00000000000003b2 .LASF134
     /tmp/cclBCrsM.s:2542   .debug_str:000000000000004d .LASF135
     /tmp/cclBCrsM.s:2600   .debug_str:0000000000000201 .LASF18
     /tmp/cclBCrsM.s:2726   .debug_str:0000000000000563 .LASF20
     /tmp/cclBCrsM.s:2702   .debug_str:00000000000004d0 .LASF136
     /tmp/cclBCrsM.s:2624   .debug_str:000000000000029b .LASF137
     /tmp/cclBCrsM.s:2670   .debug_str:00000000000003f3 .LASF19
     /tmp/cclBCrsM.s:2812   .debug_str:0000000000000867 .LASF21
     /tmp/cclBCrsM.s:2654   .debug_str:000000000000038c .LASF22
     /tmp/cclBCrsM.s:2694   .debug_str:0000000000000479 .LASF23
     /tmp/cclBCrsM.s:2728   .debug_str:000000000000056f .LASF138
     /tmp/cclBCrsM.s:2734   .debug_str:0000000000000595 .LASF38
     /tmp/cclBCrsM.s:2676   .debug_str:0000000000000417 .LASF40
     /tmp/cclBCrsM.s:2604   .debug_str:000000000000020f .LASF139
     /tmp/cclBCrsM.s:2628   .debug_str:00000000000002c0 .LASF140
     /tmp/cclBCrsM.s:2648   .debug_str:0000000000000374 .LASF24
     /tmp/cclBCrsM.s:2688   .debug_str:0000000000000468 .LASF25
     /tmp/cclBCrsM.s:2652   .debug_str:0000000000000384 .LASF26
     /tmp/cclBCrsM.s:2646   .debug_str:000000000000036b .LASF27
     /tmp/cclBCrsM.s:2658   .debug_str:00000000000003a4 .LASF29
     /tmp/cclBCrsM.s:2632   .debug_str:00000000000002ea .LASF31
     /tmp/cclBCrsM.s:2790   .debug_str:0000000000000740 .LASF28
     /tmp/cclBCrsM.s:2638   .debug_str:0000000000000326 .LASF34
     /tmp/cclBCrsM.s:2686   .debug_str:000000000000045f .LASF30
     /tmp/cclBCrsM.s:2610   .debug_str:0000000000000233 .LASF32
     /tmp/cclBCrsM.s:2744   .debug_str:00000000000005e0 .LASF33
     /tmp/cclBCrsM.s:2770   .debug_str:00000000000006b7 .LASF35
     /tmp/cclBCrsM.s:2656   .debug_str:0000000000000399 .LASF141
     /tmp/cclBCrsM.s:2612   .debug_str:0000000000000246 .LASF36
     /tmp/cclBCrsM.s:2692   .debug_str:0000000000000473 .LASF37
     /tmp/cclBCrsM.s:2730   .debug_str:0000000000000574 .LASF39
     /tmp/cclBCrsM.s:2804   .debug_str:000000000000082b .LASF41
     /tmp/cclBCrsM.s:2536   .debug_str:0000000000000029 .LASF42
     /tmp/cclBCrsM.s:2756   .debug_str:0000000000000652 .LASF45
     /tmp/cclBCrsM.s:2602   .debug_str:0000000000000206 .LASF43
     /tmp/cclBCrsM.s:2586   .debug_str:0000000000000166 .LASF48
     /tmp/cclBCrsM.s:2674   .debug_str:0000000000000410 .LASF44
     /tmp/cclBCrsM.s:2722   .debug_str:000000000000053c .LASF46
     /tmp/cclBCrsM.s:2768   .debug_str:00000000000006b0 .LASF47
     /tmp/cclBCrsM.s:2762   .debug_str:0000000000000686 .LASF49
     /tmp/cclBCrsM.s:2620   .debug_str:000000000000028d .LASF50
     /tmp/cclBCrsM.s:2592   .debug_str:00000000000001a9 .LASF51
     /tmp/cclBCrsM.s:2532   .debug_str:0000000000000011 .LASF52
     /tmp/cclBCrsM.s:2746   .debug_str:00000000000005e5 .LASF53
GAS LISTING /tmp/cclBCrsM.s 			page 19


     /tmp/cclBCrsM.s:2606   .debug_str:0000000000000217 .LASF54
     /tmp/cclBCrsM.s:2572   .debug_str:00000000000000e7 .LASF55
     /tmp/cclBCrsM.s:2810   .debug_str:000000000000085f .LASF56
     /tmp/cclBCrsM.s:2608   .debug_str:000000000000021f .LASF57
     /tmp/cclBCrsM.s:2684   .debug_str:0000000000000458 .LASF58
     /tmp/cclBCrsM.s:2800   .debug_str:0000000000000813 .LASF59
     /tmp/cclBCrsM.s:2554   .debug_str:000000000000009f .LASF60
     /tmp/cclBCrsM.s:2618   .debug_str:000000000000027a .LASF61
     /tmp/cclBCrsM.s:2622   .debug_str:0000000000000295 .LASF62
     /tmp/cclBCrsM.s:2766   .debug_str:000000000000069e .LASF63
     /tmp/cclBCrsM.s:2552   .debug_str:0000000000000099 .LASF64
     /tmp/cclBCrsM.s:2816   .debug_str:000000000000088f .LASF65
     /tmp/cclBCrsM.s:2808   .debug_str:0000000000000854 .LASF66
     /tmp/cclBCrsM.s:2740   .debug_str:00000000000005b6 .LASF67
     /tmp/cclBCrsM.s:2650   .debug_str:0000000000000379 .LASF68
     /tmp/cclBCrsM.s:2758   .debug_str:0000000000000667 .LASF69
     /tmp/cclBCrsM.s:2578   .debug_str:000000000000012f .LASF70
     /tmp/cclBCrsM.s:2662   .debug_str:00000000000003bc .LASF71
     /tmp/cclBCrsM.s:2548   .debug_str:000000000000008a .LASF72
     /tmp/cclBCrsM.s:2630   .debug_str:00000000000002d4 .LASF73
     /tmp/cclBCrsM.s:2748   .debug_str:00000000000005f9 .LASF74
     /tmp/cclBCrsM.s:2574   .debug_str:00000000000000fb .LASF75
     /tmp/cclBCrsM.s:2598   .debug_str:00000000000001f0 .LASF76
     /tmp/cclBCrsM.s:2782   .debug_str:00000000000006f7 .LASF77
     /tmp/cclBCrsM.s:2764   .debug_str:0000000000000699 .LASF78
     /tmp/cclBCrsM.s:2708   .debug_str:00000000000004e5 .LASF79
     /tmp/cclBCrsM.s:2558   .debug_str:00000000000000ad .LASF80
     /tmp/cclBCrsM.s:2678   .debug_str:0000000000000427 .LASF81
     /tmp/cclBCrsM.s:2550   .debug_str:0000000000000094 .LASF82
     /tmp/cclBCrsM.s:2806   .debug_str:0000000000000843 .LASF83
     /tmp/cclBCrsM.s:2560   .debug_str:00000000000000b2 .LASF84
     /tmp/cclBCrsM.s:2594   .debug_str:00000000000001bd .LASF85
     /tmp/cclBCrsM.s:2704   .debug_str:00000000000004db .LASF86
     /tmp/cclBCrsM.s:2780   .debug_str:00000000000006e6 .LASF87
     /tmp/cclBCrsM.s:2690   .debug_str:000000000000046e .LASF88
     /tmp/cclBCrsM.s:2568   .debug_str:00000000000000d1 .LASF89
     /tmp/cclBCrsM.s:2796   .debug_str:00000000000007fd .LASF90
     /tmp/cclBCrsM.s:2530   .debug_str:0000000000000000 .LASF91
     /tmp/cclBCrsM.s:2564   .debug_str:00000000000000c7 .LASF92
     /tmp/cclBCrsM.s:2584   .debug_str:0000000000000155 .LASF93
     /tmp/cclBCrsM.s:2772   .debug_str:00000000000006c8 .LASF94
     /tmp/cclBCrsM.s:2698   .debug_str:00000000000004ac .LASF95
     /tmp/cclBCrsM.s:2566   .debug_str:00000000000000cc .LASF96
     /tmp/cclBCrsM.s:2544   .debug_str:0000000000000055 .LASF97
     /tmp/cclBCrsM.s:2774   .debug_str:00000000000006cd .LASF98
     /tmp/cclBCrsM.s:2672   .debug_str:00000000000003ff .LASF99
     /tmp/cclBCrsM.s:2570   .debug_str:00000000000000e2 .LASF100
     /tmp/cclBCrsM.s:2798   .debug_str:0000000000000802 .LASF101
     /tmp/cclBCrsM.s:2716   .debug_str:0000000000000522 .LASF102
     /tmp/cclBCrsM.s:2642   .debug_str:0000000000000355 .LASF103
     /tmp/cclBCrsM.s:2706   .debug_str:00000000000004e0 .LASF104
     /tmp/cclBCrsM.s:2750   .debug_str:0000000000000608 .LASF105
     /tmp/cclBCrsM.s:2778   .debug_str:00000000000006e1 .LASF106
     /tmp/cclBCrsM.s:2712   .debug_str:0000000000000507 .LASF107
     /tmp/cclBCrsM.s:2644   .debug_str:0000000000000366 .LASF108
     /tmp/cclBCrsM.s:2710   .debug_str:00000000000004f6 .LASF109
     /tmp/cclBCrsM.s:2786   .debug_str:0000000000000725 .LASF110
GAS LISTING /tmp/cclBCrsM.s 			page 20


     /tmp/cclBCrsM.s:2596   .debug_str:00000000000001ce .LASF111
     /tmp/cclBCrsM.s:2538   .debug_str:0000000000000032 .LASF112
     /tmp/cclBCrsM.s:2752   .debug_str:0000000000000619 .LASF113
     /tmp/cclBCrsM.s:2754   .debug_str:000000000000063b .LASF114
     /tmp/cclBCrsM.s:2546   .debug_str:0000000000000066 .LASF115
     /tmp/cclBCrsM.s:2814   .debug_str:000000000000087e .LASF142
     /tmp/cclBCrsM.s:325    .text:00000000000001b8 .LFB52
     /tmp/cclBCrsM.s:374    .text:00000000000001f8 .LFE52
     /tmp/cclBCrsM.s:2760   .debug_str:000000000000067f .LASF116
     /tmp/cclBCrsM.s:2352   .debug_loc:0000000000000000 .LLST10
     /tmp/cclBCrsM.s:344    .text:00000000000001d0 .LBB21
     /tmp/cclBCrsM.s:351    .text:00000000000001d4 .LBE21
     /tmp/cclBCrsM.s:2370   .debug_loc:000000000000004c .LLST11
     /tmp/cclBCrsM.s:357    .text:00000000000001e0 .LVL29
     /tmp/cclBCrsM.s:194    .text:00000000000000f4 .LFB51
     /tmp/cclBCrsM.s:249    .text:0000000000000150 .LFE51
     /tmp/cclBCrsM.s:224    .text:000000000000012c .LBB17
     /tmp/cclBCrsM.s:232    .text:0000000000000134 .LBE17
     /tmp/cclBCrsM.s:2377   .debug_loc:000000000000006f .LLST6
     /tmp/cclBCrsM.s:2385   .debug_loc:0000000000000093 .LLST7
     /tmp/cclBCrsM.s:210    .text:0000000000000110 .LVL14
     /tmp/cclBCrsM.s:236    .text:000000000000013c .LVL18
     /tmp/cclBCrsM.s:255    .text:0000000000000150 .LFB50
     /tmp/cclBCrsM.s:319    .text:00000000000001b8 .LFE50
     /tmp/cclBCrsM.s:2392   .debug_loc:00000000000000b6 .LLST8
     /tmp/cclBCrsM.s:273    .text:000000000000016c .LBB19
     /tmp/cclBCrsM.s:280    .text:0000000000000170 .LBE19
     /tmp/cclBCrsM.s:2403   .debug_loc:00000000000000ec .LLST9
     /tmp/cclBCrsM.s:287    .text:000000000000017c .LVL21
     /tmp/cclBCrsM.s:295    .text:0000000000000194 .LVL22
     /tmp/cclBCrsM.s:316    .text:00000000000001b4 .LVL25
     /tmp/cclBCrsM.s:148    .text:00000000000000d0 .LFB49
     /tmp/cclBCrsM.s:188    .text:00000000000000f4 .LFE49
     /tmp/cclBCrsM.s:159    .text:00000000000000dc .LBB15
     /tmp/cclBCrsM.s:172    .text:00000000000000e4 .LBE15
     /tmp/cclBCrsM.s:2410   .debug_loc:000000000000010f .LLST5
     /tmp/cclBCrsM.s:122    .text:00000000000000d0 .LFE48
     /tmp/cclBCrsM.s:2418   .debug_loc:0000000000000133 .LLST0
     /tmp/cclBCrsM.s:2447   .debug_loc:00000000000001a8 .LLST1
     /tmp/cclBCrsM.s:43     .text:0000000000000034 .LBB13
     /tmp/cclBCrsM.s:91     .text:0000000000000098 .LBE13
     /tmp/cclBCrsM.s:2465   .debug_loc:00000000000001f4 .LLST2
     /tmp/cclBCrsM.s:2479   .debug_loc:000000000000022d .LLST3
     /tmp/cclBCrsM.s:2504   .debug_loc:000000000000028f .LLST4
     /tmp/cclBCrsM.s:54     .text:0000000000000048 .LVL4
     /tmp/cclBCrsM.s:80     .text:0000000000000088 .LVL5
     /tmp/cclBCrsM.s:39     .text:0000000000000030 .LVL2
     /tmp/cclBCrsM.s:95     .text:00000000000000a4 .LVL7
     /tmp/cclBCrsM.s:99     .text:00000000000000b0 .LVL8
     /tmp/cclBCrsM.s:2738   .debug_str:00000000000005ab .LASF117
     /tmp/cclBCrsM.s:2802   .debug_str:0000000000000826 .LASF118
     /tmp/cclBCrsM.s:2724   .debug_str:000000000000054f .LASF143
     /tmp/cclBCrsM.s:2720   .debug_str:0000000000000536 .LASF119
     /tmp/cclBCrsM.s:2788   .debug_str:000000000000073a .LASF120
     /tmp/cclBCrsM.s:2736   .debug_str:000000000000059b .LASF122
     /tmp/cclBCrsM.s:2540   .debug_str:0000000000000047 .LASF121
     /tmp/cclBCrsM.s:2794   .debug_str:00000000000007f0 .LASF123
GAS LISTING /tmp/cclBCrsM.s 			page 21


     /tmp/cclBCrsM.s:2666   .debug_str:00000000000003de .LASF124
     /tmp/cclBCrsM.s:2582   .debug_str:0000000000000145 .LASF125
     /tmp/cclBCrsM.s:2634   .debug_str:0000000000000303 .LASF126
     /tmp/cclBCrsM.s:2588   .debug_str:000000000000017b .LASF127
     /tmp/cclBCrsM.s:328    .text:00000000000001b8 .LVL26
     /tmp/cclBCrsM.s:340    .text:00000000000001d0 .LVL27
     /tmp/cclBCrsM.s:369    .text:00000000000001f0 .LVL30
     /tmp/cclBCrsM.s:349    .text:00000000000001d4 .LVL28
     /tmp/cclBCrsM.s:223    .text:000000000000012c .LVL16
     /tmp/cclBCrsM.s:230    .text:0000000000000134 .LVL17
     /tmp/cclBCrsM.s:271    .text:000000000000016c .LVL19
     /tmp/cclBCrsM.s:305    .text:00000000000001a0 .LVL23
     /tmp/cclBCrsM.s:309    .text:00000000000001a8 .LVL24
     /tmp/cclBCrsM.s:278    .text:0000000000000170 .LVL20
     /tmp/cclBCrsM.s:158    .text:00000000000000dc .LVL12
     /tmp/cclBCrsM.s:169    .text:00000000000000e4 .LVL13
     /tmp/cclBCrsM.s:16     .text:0000000000000000 .LVL0
     /tmp/cclBCrsM.s:36     .text:0000000000000028 .LVL1
     /tmp/cclBCrsM.s:89     .text:0000000000000098 .LVL6
     /tmp/cclBCrsM.s:114    .text:00000000000000c4 .LVL10
     /tmp/cclBCrsM.s:117    .text:00000000000000c8 .LVL11
     /tmp/cclBCrsM.s:42     .text:0000000000000034 .LVL3
     /tmp/cclBCrsM.s:111    .text:00000000000000c0 .LVL9
     /tmp/cclBCrsM.s:389    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cclBCrsM.s:125    .gcc_except_table:0000000000000000 .LLSDA48

UNDEFINED SYMBOLS
_Znwm
_Znam
_ZN9Scheduler3putEP3TCB
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
_ZN5Riscv10popSppSpieEv
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
