GAS LISTING /tmp/ccOkThlN.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB13threadWrapperEv
   9              	_ZN3TCB13threadWrapperEv:
  10              	.LFB43:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** //
   2:src/tcb.cpp   **** // Created by marko on 20.4.22..
   3:src/tcb.cpp   **** //
   4:src/tcb.cpp   **** 
   5:src/tcb.cpp   **** #include "../h/tcb.hpp"
   6:src/tcb.cpp   **** #include "../h/riscv.hpp"
   7:src/tcb.cpp   **** #include "../h/print.hpp"
   8:src/tcb.cpp   **** #include "../h/syscall_c.hpp"
   9:src/tcb.cpp   **** 
  10:src/tcb.cpp   **** TCB *TCB::running = nullptr;
  11:src/tcb.cpp   **** 
  12:src/tcb.cpp   **** //uint64 TCB::timeSliceCounter = 0;
  13:src/tcb.cpp   **** //uint64 TCB::timeSliceCounterTest = 0;
  14:src/tcb.cpp   **** 
  15:src/tcb.cpp   **** TCB *TCB::createThread(Body body, void* arg)
  16:src/tcb.cpp   **** {
  17:src/tcb.cpp   ****     return new TCB(body, arg);
  18:src/tcb.cpp   **** }
  19:src/tcb.cpp   **** 
  20:src/tcb.cpp   **** void TCB::yield()
  21:src/tcb.cpp   **** {
  22:src/tcb.cpp   ****     Riscv::w_a0(0x13);
  23:src/tcb.cpp   ****     __asm__ volatile ("ecall");
  24:src/tcb.cpp   **** }
  25:src/tcb.cpp   **** 
  26:src/tcb.cpp   **** void TCB::dispatch()
  27:src/tcb.cpp   **** {
  28:src/tcb.cpp   ****     TCB *old = running;
  29:src/tcb.cpp   ****     if (!old->isFinished() && !old->isBlocked()) { Scheduler::put(old); }
  30:src/tcb.cpp   ****     running = Scheduler::get();
  31:src/tcb.cpp   **** 
  32:src/tcb.cpp   ****     /*while(running->isBlocked()) {
  33:src/tcb.cpp   ****         Scheduler::put(running);
  34:src/tcb.cpp   ****         running = Scheduler::get();
  35:src/tcb.cpp   ****     }*/
  36:src/tcb.cpp   **** 
  37:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
  38:src/tcb.cpp   **** }
  39:src/tcb.cpp   **** 
  40:src/tcb.cpp   **** void TCB::threadWrapper()
  41:src/tcb.cpp   **** {
  12              		.loc 1 41 1
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
GAS LISTING /tmp/ccOkThlN.s 			page 2


  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
  42:src/tcb.cpp   ****     Riscv::popSppSpie();
  24              		.loc 1 42 5
  25              		.loc 1 42 22 is_stmt 0
  26 0014 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  26      E7800000 
  27              	.LVL0:
  43:src/tcb.cpp   ****     running->body(running->arg);
  28              		.loc 1 43 5 is_stmt 1
  29              		.loc 1 43 14 is_stmt 0
  30 001c 97040000 		lla	s1,.LANCHOR0
  30      93840400 
  31 0024 83B70400 		ld	a5,0(s1)
  32 0028 03B70700 		ld	a4,0(a5)
  33              		.loc 1 43 18
  34 002c 03B58702 		ld	a0,40(a5)
  35 0030 E7000700 		jalr	a4
  36              	.LVL1:
  44:src/tcb.cpp   ****     running->setFinished(true);
  37              		.loc 1 44 5 is_stmt 1
  38              		.loc 1 44 25 is_stmt 0
  39 0034 83B70400 		ld	a5,0(s1)
  40              	.LVL2:
  41              	.LBB12:
  42              	.LBB13:
  43              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  44              		.loc 2 19 36 is_stmt 1
  45              		.loc 2 19 45 is_stmt 0
  46 0038 13071000 		li	a4,1
  47 003c 2380E702 		sb	a4,32(a5)
  48              	.LVL3:
  49              	.LBE13:
  50              	.LBE12:
GAS LISTING /tmp/ccOkThlN.s 			page 3


  45:src/tcb.cpp   ****     thread_dispatch();
  51              		.loc 1 45 5 is_stmt 1
  52              		.loc 1 45 20 is_stmt 0
  53 0040 97000000 		call	_Z15thread_dispatchv@plt
  53      E7800000 
  54              	.LVL4:
  46:src/tcb.cpp   **** }
  55              		.loc 1 46 1
  56 0048 83308101 		ld	ra,24(sp)
  57              		.cfi_restore 1
  58 004c 03340101 		ld	s0,16(sp)
  59              		.cfi_restore 8
  60              		.cfi_def_cfa 2, 32
  61 0050 83348100 		ld	s1,8(sp)
  62              		.cfi_restore 9
  63 0054 13010102 		addi	sp,sp,32
  64              		.cfi_def_cfa_offset 0
  65 0058 67800000 		jr	ra
  66              		.cfi_endproc
  67              	.LFE43:
  69              		.align	2
  70              		.globl	_ZN3TCB12createThreadEPFvPvES0_
  72              	_ZN3TCB12createThreadEPFvPvES0_:
  73              	.LFB40:
  16:src/tcb.cpp   ****     return new TCB(body, arg);
  74              		.loc 1 16 1 is_stmt 1
  75              		.cfi_startproc
  76              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  77              		.cfi_lsda 0x1b,.LLSDA40
  78              	.LVL5:
  79 005c 130101FD 		addi	sp,sp,-48
  80              		.cfi_def_cfa_offset 48
  81 0060 23341102 		sd	ra,40(sp)
  82 0064 23308102 		sd	s0,32(sp)
  83 0068 233C9100 		sd	s1,24(sp)
  84 006c 23382101 		sd	s2,16(sp)
  85 0070 23343101 		sd	s3,8(sp)
  86              		.cfi_offset 1, -8
  87              		.cfi_offset 8, -16
  88              		.cfi_offset 9, -24
  89              		.cfi_offset 18, -32
  90              		.cfi_offset 19, -40
  91 0074 13040103 		addi	s0,sp,48
  92              		.cfi_def_cfa 8, 0
  93 0078 13090500 		mv	s2,a0
  94 007c 93890500 		mv	s3,a1
  17:src/tcb.cpp   **** }
  95              		.loc 1 17 5
  17:src/tcb.cpp   **** }
  96              		.loc 1 17 29 is_stmt 0
  97 0080 13050003 		li	a0,48
  98              	.LVL6:
  99              	.LEHB0:
 100 0084 97000000 		call	_Znwm@plt
 100      E7800000 
 101              	.LVL7:
 102              	.LEHE0:
GAS LISTING /tmp/ccOkThlN.s 			page 4


 103 008c 93040500 		mv	s1,a0
 104              	.LVL8:
 105              	.LBB17:
 106              	.LBB18:
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     bool isBlocked() const { return this->blocked; }
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     void setBlocked(bool value) { this->blocked = value; }
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     //uint64 getTimeSlice() const { return timeSlice; }
  26:src/../h/tcb.hpp **** 
  27:src/../h/tcb.hpp ****     //static uint64 getTimeSliceTest() { return timeSliceCounterTest; }
  28:src/../h/tcb.hpp **** 
  29:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  30:src/../h/tcb.hpp **** 
  31:src/../h/tcb.hpp ****     static TCB *createThread(Body body, void* arg);
  32:src/../h/tcb.hpp **** 
  33:src/../h/tcb.hpp ****     static void yield();
  34:src/../h/tcb.hpp **** 
  35:src/../h/tcb.hpp ****     static TCB *running;
  36:src/../h/tcb.hpp **** 
  37:src/../h/tcb.hpp **** private:
  38:src/../h/tcb.hpp ****     TCB(Body body, void* arg) :
  39:src/../h/tcb.hpp ****             body(body),
  40:src/../h/tcb.hpp ****             stack(body != nullptr ? new uint64[STACK_SIZE] : nullptr),
  41:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  42:src/../h/tcb.hpp ****                      stack != nullptr ? (uint64) &stack[STACK_SIZE] : 0
  43:src/../h/tcb.hpp ****                     }),
  44:src/../h/tcb.hpp ****             finished(false),
  45:src/../h/tcb.hpp ****             blocked(false),
  46:src/../h/tcb.hpp ****             arg(arg)
 107              		.loc 2 46 20
 108 0090 23302501 		sd	s2,0(a0)
  40:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 109              		.loc 2 40 35
 110 0094 630A0900 		beqz	s2,.L8
  40:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 111              		.loc 2 40 58
 112 0098 37250000 		li	a0,8192
 113              	.LEHB1:
 114 009c 97000000 		call	_Znam@plt
 114      E7800000 
 115              	.LVL9:
 116 00a4 6F008000 		j	.L4
 117              	.L8:
  40:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 118              		.loc 2 40 35
 119 00a8 13050000 		li	a0,0
 120              	.L4:
 121              		.loc 2 46 20
 122 00ac 23B4A400 		sd	a0,8(s1)
 123 00b0 97070000 		lla	a5,_ZN3TCB13threadWrapperEv
 123      93870700 
 124 00b8 23B8F400 		sd	a5,16(s1)
  42:src/../h/tcb.hpp ****                     }),
 125              		.loc 2 42 39
 126 00bc 63080502 		beqz	a0,.L9
GAS LISTING /tmp/ccOkThlN.s 			page 5


  42:src/../h/tcb.hpp ****                     }),
 127              		.loc 2 42 50
 128 00c0 B7270000 		li	a5,8192
 129 00c4 B307F500 		add	a5,a0,a5
 130              	.L5:
 131              		.loc 2 46 20
 132 00c8 23BCF400 		sd	a5,24(s1)
 133 00cc 23800402 		sb	zero,32(s1)
 134 00d0 A3800402 		sb	zero,33(s1)
 135 00d4 23B43403 		sd	s3,40(s1)
  47:src/../h/tcb.hpp **** 
  48:src/../h/tcb.hpp ****     {
  49:src/../h/tcb.hpp ****         if (body != nullptr) { Scheduler::put(this); }
 136              		.loc 2 49 9 is_stmt 1
 137 00d8 630C0902 		beqz	s2,.L3
 138              		.loc 2 49 32
 139              		.loc 2 49 46 is_stmt 0
 140 00dc 13850400 		mv	a0,s1
 141 00e0 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 141      E7800000 
 142              	.LVL10:
 143              	.LEHE1:
 144 00e8 6F008002 		j	.L3
 145              	.L9:
  42:src/../h/tcb.hpp ****                     }),
 146              		.loc 2 42 39
 147 00ec 93070000 		li	a5,0
 148 00f0 6FF09FFD 		j	.L5
 149              	.L10:
 150 00f4 13090500 		mv	s2,a0
 151              	.LVL11:
 152              	.LBE18:
 153              	.LBE17:
  17:src/tcb.cpp   **** }
 154              		.loc 1 17 29
 155 00f8 13850400 		mv	a0,s1
 156 00fc 97000000 		call	_ZdlPv@plt
 156      E7800000 
 157              	.LVL12:
 158 0104 13050900 		mv	a0,s2
 159              	.LEHB2:
 160 0108 97000000 		call	_Unwind_Resume@plt
 160      E7800000 
 161              	.LVL13:
 162              	.LEHE2:
 163              	.L3:
  18:src/tcb.cpp   **** 
 164              		.loc 1 18 1
 165 0110 13850400 		mv	a0,s1
 166 0114 83308102 		ld	ra,40(sp)
 167              		.cfi_restore 1
 168 0118 03340102 		ld	s0,32(sp)
 169              		.cfi_restore 8
 170              		.cfi_def_cfa 2, 48
 171 011c 83348101 		ld	s1,24(sp)
 172              		.cfi_restore 9
 173              	.LVL14:
GAS LISTING /tmp/ccOkThlN.s 			page 6


 174 0120 03390101 		ld	s2,16(sp)
 175              		.cfi_restore 18
 176              	.LVL15:
 177 0124 83398100 		ld	s3,8(sp)
 178              		.cfi_restore 19
 179              	.LVL16:
 180 0128 13010103 		addi	sp,sp,48
 181              		.cfi_def_cfa_offset 0
 182 012c 67800000 		jr	ra
 183              		.cfi_endproc
 184              	.LFE40:
 185              		.globl	__gxx_personality_v0
 186              		.section	.gcc_except_table,"a",@progbits
 187              	.LLSDA40:
 188 0000 FF       		.byte	0xff
 189 0001 FF       		.byte	0xff
 190 0002 03       		.byte	0x3
 191 0003 27       		.byte	0x27
 192 0004 00000000 		.4byte	.LEHB0-.LFB40
 193 0008 00000000 		.4byte	.LEHE0-.LEHB0
 194 000c 00000000 		.4byte	0
 195 0010 00       		.byte	0
 196 0011 00000000 		.4byte	.LEHB1-.LFB40
 197 0015 00000000 		.4byte	.LEHE1-.LEHB1
 198 0019 00000000 		.4byte	.L10-.LFB40
 199 001d 00       		.byte	0
 200 001e 00000000 		.4byte	.LEHB2-.LFB40
 201 0022 00000000 		.4byte	.LEHE2-.LEHB2
 202 0026 00000000 		.4byte	0
 203 002a 00       		.byte	0
 204              		.text
 206              		.align	2
 207              		.globl	_ZN3TCB5yieldEv
 209              	_ZN3TCB5yieldEv:
 210              	.LFB41:
  21:src/tcb.cpp   ****     Riscv::w_a0(0x13);
 211              		.loc 1 21 1 is_stmt 1
 212              		.cfi_startproc
 213 0130 130101FF 		addi	sp,sp,-16
 214              		.cfi_def_cfa_offset 16
 215 0134 23348100 		sd	s0,8(sp)
 216              		.cfi_offset 8, -8
 217 0138 13040101 		addi	s0,sp,16
 218              		.cfi_def_cfa 8, 0
  22:src/tcb.cpp   ****     __asm__ volatile ("ecall");
 219              		.loc 1 22 5
 220              	.LVL17:
 221              	.LBB19:
 222              	.LBB20:
 223              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccOkThlN.s 			page 7


   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
GAS LISTING /tmp/ccOkThlN.s 			page 8


  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     //read a1 register
  92:src/../h/riscv.hpp ****     static uint64 r_a1();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //write to a1 register
  95:src/../h/riscv.hpp ****     static void w_a1(uint64 writeValue);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     //read a2 register
  98:src/../h/riscv.hpp ****     static uint64 r_a2();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     //write to a2 register
 101:src/../h/riscv.hpp ****     static void w_a2(uint64 writeValue);
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp ****     //read a3 register
 104:src/../h/riscv.hpp ****     static uint64 r_a3();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     //write to a3 register
 107:src/../h/riscv.hpp ****     static void w_a3(uint64 writeValue);
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     //read a4 register
 110:src/../h/riscv.hpp ****     static uint64 r_a4();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     //write to a4 register
 113:src/../h/riscv.hpp ****     static void w_a4(uint64 writeValue);
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****     //read a5 register
 116:src/../h/riscv.hpp ****     static uint64 r_a5();
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp ****     //write to a5 register
 119:src/../h/riscv.hpp ****     static void w_a5(uint64 writeValue);
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp ****     //read a6 register
GAS LISTING /tmp/ccOkThlN.s 			page 9


 122:src/../h/riscv.hpp ****     static uint64 r_a6();
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     //write to a6 register
 125:src/../h/riscv.hpp ****     static void w_a6(uint64 writeValue);
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp ****     //read a7 register
 128:src/../h/riscv.hpp ****     static uint64 r_a7();
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp ****     //write to a7 register
 131:src/../h/riscv.hpp ****     static void w_a7(uint64 writeValue);
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** private:
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp ****     // supervisor trap handler
 137:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 142:src/../h/riscv.hpp **** };
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     uint64 volatile scause;
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 149:src/../h/riscv.hpp ****     return scause;
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     uint64 volatile sepc;
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 161:src/../h/riscv.hpp ****     return sepc;
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile stvec;
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 173:src/../h/riscv.hpp ****     return stvec;
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
GAS LISTING /tmp/ccOkThlN.s 			page 10


 179:src/../h/riscv.hpp **** }
 180:src/../h/riscv.hpp **** 
 181:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 182:src/../h/riscv.hpp **** {
 183:src/../h/riscv.hpp ****     uint64 volatile stval;
 184:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 185:src/../h/riscv.hpp ****     return stval;
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 191:src/../h/riscv.hpp **** }
 192:src/../h/riscv.hpp **** 
 193:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 194:src/../h/riscv.hpp **** {
 195:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 196:src/../h/riscv.hpp **** }
 197:src/../h/riscv.hpp **** 
 198:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 199:src/../h/riscv.hpp **** {
 200:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 201:src/../h/riscv.hpp **** }
 202:src/../h/riscv.hpp **** 
 203:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 204:src/../h/riscv.hpp **** {
 205:src/../h/riscv.hpp ****     uint64 volatile sip;
 206:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 207:src/../h/riscv.hpp ****     return sip;
 208:src/../h/riscv.hpp **** }
 209:src/../h/riscv.hpp **** 
 210:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 211:src/../h/riscv.hpp **** {
 212:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 213:src/../h/riscv.hpp **** }
 214:src/../h/riscv.hpp **** 
 215:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 216:src/../h/riscv.hpp **** {
 217:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 218:src/../h/riscv.hpp **** }
 219:src/../h/riscv.hpp **** 
 220:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 221:src/../h/riscv.hpp **** {
 222:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 223:src/../h/riscv.hpp **** }
 224:src/../h/riscv.hpp **** 
 225:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 226:src/../h/riscv.hpp **** {
 227:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 228:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 229:src/../h/riscv.hpp ****     return sstatus;
 230:src/../h/riscv.hpp **** }
 231:src/../h/riscv.hpp **** 
 232:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 233:src/../h/riscv.hpp **** {
 234:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 235:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccOkThlN.s 			page 11


 236:src/../h/riscv.hpp **** 
 237:src/../h/riscv.hpp **** //a0
 238:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0()
 239:src/../h/riscv.hpp **** {
 240:src/../h/riscv.hpp ****     uint64 volatile a0;
 241:src/../h/riscv.hpp ****     __asm__ volatile ("mv %0, a0" : "=r"(a0));
 242:src/../h/riscv.hpp ****     return a0;
 243:src/../h/riscv.hpp **** }
 244:src/../h/riscv.hpp **** 
 245:src/../h/riscv.hpp **** 
 246:src/../h/riscv.hpp **** inline void Riscv::w_a0(uint64 writeValue) {
 247:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(writeValue));
 224              		.loc 3 247 5
 225              		.loc 3 247 55 is_stmt 0
 226 013c 93073001 		li	a5,19
 227              	#APP
 228              	# 247 "src/../h/riscv.hpp" 1
 248              	}
 229              		mv a0, a5
 230              	# 0 "" 2
 231              	.LVL18:
 232              	#NO_APP
 233              	.LBE20:
 234              	.LBE19:
  23:src/tcb.cpp   **** }
 235              		.loc 1 23 5 is_stmt 1
  23:src/tcb.cpp   **** }
 236              		.loc 1 23 31 is_stmt 0
 237              	#APP
 238              	# 23 "src/tcb.cpp" 1
  24:src/tcb.cpp   **** 
 239              		ecall
 240              	# 0 "" 2
 241              		.loc 1 24 1
 242              	#NO_APP
 243 0148 03348100 		ld	s0,8(sp)
 244              		.cfi_restore 8
 245              		.cfi_def_cfa 2, 16
 246 014c 13010101 		addi	sp,sp,16
 247              		.cfi_def_cfa_offset 0
 248 0150 67800000 		jr	ra
 249              		.cfi_endproc
 250              	.LFE41:
 252              		.align	2
 253              		.globl	_ZN3TCB8dispatchEv
 255              	_ZN3TCB8dispatchEv:
 256              	.LFB42:
  27:src/tcb.cpp   ****     TCB *old = running;
 257              		.loc 1 27 1 is_stmt 1
 258              		.cfi_startproc
 259 0154 130101FE 		addi	sp,sp,-32
 260              		.cfi_def_cfa_offset 32
 261 0158 233C1100 		sd	ra,24(sp)
 262 015c 23388100 		sd	s0,16(sp)
 263 0160 23349100 		sd	s1,8(sp)
 264              		.cfi_offset 1, -8
 265              		.cfi_offset 8, -16
GAS LISTING /tmp/ccOkThlN.s 			page 12


 266              		.cfi_offset 9, -24
 267 0164 13040102 		addi	s0,sp,32
 268              		.cfi_def_cfa 8, 0
  28:src/tcb.cpp   ****     if (!old->isFinished() && !old->isBlocked()) { Scheduler::put(old); }
 269              		.loc 1 28 5
  28:src/tcb.cpp   ****     if (!old->isFinished() && !old->isBlocked()) { Scheduler::put(old); }
 270              		.loc 1 28 10 is_stmt 0
 271 0168 97040000 		ld	s1,.LANCHOR0
 271      83B40400 
 272              	.LVL19:
  29:src/tcb.cpp   ****     running = Scheduler::get();
 273              		.loc 1 29 5 is_stmt 1
 274              	.LBB21:
 275              	.LBB22:
  17:src/../h/tcb.hpp **** 
 276              		.loc 2 17 31
  17:src/../h/tcb.hpp **** 
 277              		.loc 2 17 38 is_stmt 0
 278 0170 83C70402 		lbu	a5,32(s1)
 279              	.LVL20:
 280              	.LBE22:
 281              	.LBE21:
  29:src/tcb.cpp   ****     running = Scheduler::get();
 282              		.loc 1 29 28
 283 0174 63960700 		bnez	a5,.L15
 284              	.LVL21:
 285              	.LBB23:
 286              	.LBB24:
  21:src/../h/tcb.hpp **** 
 287              		.loc 2 21 30 is_stmt 1
  21:src/../h/tcb.hpp **** 
 288              		.loc 2 21 43 is_stmt 0
 289 0178 83C71402 		lbu	a5,33(s1)
 290              	.LVL22:
 291              	.LBE24:
 292              	.LBE23:
  29:src/tcb.cpp   ****     running = Scheduler::get();
 293              		.loc 1 29 28
 294 017c 638C0702 		beqz	a5,.L17
 295              	.L15:
  30:src/tcb.cpp   **** 
 296              		.loc 1 30 5 is_stmt 1
  30:src/tcb.cpp   **** 
 297              		.loc 1 30 29 is_stmt 0
 298 0180 97000000 		call	_ZN9Scheduler3getEv@plt
 298      E7800000 
 299              	.LVL23:
  30:src/tcb.cpp   **** 
 300              		.loc 1 30 13
 301 0188 97070000 		sd	a0,.LANCHOR0,a5
 301      23B0A700 
  37:src/tcb.cpp   **** }
 302              		.loc 1 37 5 is_stmt 1
  37:src/tcb.cpp   **** }
 303              		.loc 1 37 23 is_stmt 0
 304 0190 93050501 		addi	a1,a0,16
 305 0194 13850401 		addi	a0,s1,16
GAS LISTING /tmp/ccOkThlN.s 			page 13


 306 0198 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 306      E7800000 
 307              	.LVL24:
  38:src/tcb.cpp   **** 
 308              		.loc 1 38 1
 309 01a0 83308101 		ld	ra,24(sp)
 310              		.cfi_remember_state
 311              		.cfi_restore 1
 312 01a4 03340101 		ld	s0,16(sp)
 313              		.cfi_restore 8
 314              		.cfi_def_cfa 2, 32
 315 01a8 83348100 		ld	s1,8(sp)
 316              		.cfi_restore 9
 317              	.LVL25:
 318 01ac 13010102 		addi	sp,sp,32
 319              		.cfi_def_cfa_offset 0
 320 01b0 67800000 		jr	ra
 321              	.LVL26:
 322              	.L17:
 323              		.cfi_restore_state
  29:src/tcb.cpp   ****     running = Scheduler::get();
 324              		.loc 1 29 52 is_stmt 1
  29:src/tcb.cpp   ****     running = Scheduler::get();
 325              		.loc 1 29 66 is_stmt 0
 326 01b4 13850400 		mv	a0,s1
 327 01b8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 327      E7800000 
 328              	.LVL27:
 329 01c0 6FF01FFC 		j	.L15
 330              		.cfi_endproc
 331              	.LFE42:
 333              		.align	2
 334              		.globl	_ZN3TCB4joinEPS_
 336              	_ZN3TCB4joinEPS_:
 337              	.LFB44:
  47:src/tcb.cpp   **** 
  48:src/tcb.cpp   **** void TCB::join(TCB* handle) {
 338              		.loc 1 48 29 is_stmt 1
 339              		.cfi_startproc
 340              	.LVL28:
 341 01c4 130101FE 		addi	sp,sp,-32
 342              		.cfi_def_cfa_offset 32
 343 01c8 233C1100 		sd	ra,24(sp)
 344 01cc 23388100 		sd	s0,16(sp)
 345 01d0 23349100 		sd	s1,8(sp)
 346              		.cfi_offset 1, -8
 347              		.cfi_offset 8, -16
 348              		.cfi_offset 9, -24
 349 01d4 13040102 		addi	s0,sp,32
 350              		.cfi_def_cfa 8, 0
 351 01d8 93040500 		mv	s1,a0
 352              	.LVL29:
 353              	.L20:
  49:src/tcb.cpp   ****     while(!handle->isFinished()) {
 354              		.loc 1 49 5
 355              		.loc 1 49 11
 356              	.LBB25:
GAS LISTING /tmp/ccOkThlN.s 			page 14


 357              	.LBB26:
  17:src/../h/tcb.hpp **** 
 358              		.loc 2 17 31
  17:src/../h/tcb.hpp **** 
 359              		.loc 2 17 38 is_stmt 0
 360 01dc 83C70402 		lbu	a5,32(s1)
 361              	.LVL30:
 362              	.LBE26:
 363              	.LBE25:
 364              		.loc 1 49 11
 365 01e0 63980700 		bnez	a5,.L18
  50:src/tcb.cpp   ****         TCB::dispatch();
 366              		.loc 1 50 9 is_stmt 1
 367              		.loc 1 50 22 is_stmt 0
 368 01e4 97000000 		call	_ZN3TCB8dispatchEv
 368      E7800000 
 369              	.LVL31:
  49:src/tcb.cpp   ****     while(!handle->isFinished()) {
 370              		.loc 1 49 5
 371 01ec 6FF01FFF 		j	.L20
 372              	.L18:
  51:src/tcb.cpp   ****     }
  52:src/tcb.cpp   **** }...
 373              		.loc 1 52 1
 374 01f0 83308101 		ld	ra,24(sp)
 375              		.cfi_restore 1
 376 01f4 03340101 		ld	s0,16(sp)
 377              		.cfi_restore 8
 378              		.cfi_def_cfa 2, 32
 379 01f8 83348100 		ld	s1,8(sp)
 380              		.cfi_restore 9
 381              	.LVL32:
 382 01fc 13010102 		addi	sp,sp,32
 383              		.cfi_def_cfa_offset 0
 384 0200 67800000 		jr	ra
 385              		.cfi_endproc
 386              	.LFE44:
 388              		.globl	_ZN3TCB7runningE
 389              		.bss
 390              		.align	3
 391              		.set	.LANCHOR0,. + 0
 394              	_ZN3TCB7runningE:
 395 0000 00000000 		.zero	8
 395      00000000 
 396              		.text
 397              	.Letext0:
 398              		.file 4 "src/../h/../lib/hw.h"
 399              		.file 5 "src/../h/scheduler.hpp"
 400              		.file 6 "src/../h/list.hpp"
 401              		.file 7 "src/../h/syscall_c.hpp"
 3192              		.align	3
 3195              	DW.ref.__gxx_personality_v0:
 3196 0000 00000000 		.dword	__gxx_personality_v0
 3196      00000000 
 3197              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 3198              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccOkThlN.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/ccOkThlN.s:9      .text:0000000000000000 _ZN3TCB13threadWrapperEv
     /tmp/ccOkThlN.s:13     .text:0000000000000000 .L0 
     /tmp/ccOkThlN.s:14     .text:0000000000000000 .L0 
     /tmp/ccOkThlN.s:15     .text:0000000000000004 .L0 
     /tmp/ccOkThlN.s:19     .text:0000000000000010 .L0 
     /tmp/ccOkThlN.s:20     .text:0000000000000010 .L0 
     /tmp/ccOkThlN.s:21     .text:0000000000000010 .L0 
     /tmp/ccOkThlN.s:23     .text:0000000000000014 .L0 
     /tmp/ccOkThlN.s:25     .text:0000000000000014 .L0 
     /tmp/ccOkThlN.s:26     .text:0000000000000014 .L0 
     /tmp/ccOkThlN.s:29     .text:000000000000001c .L0 
     /tmp/ccOkThlN.s:30     .text:000000000000001c .L0 
     /tmp/ccOkThlN.s:34     .text:000000000000002c .L0 
     /tmp/ccOkThlN.s:38     .text:0000000000000034 .L0 
     /tmp/ccOkThlN.s:39     .text:0000000000000034 .L0 
     /tmp/ccOkThlN.s:45     .text:0000000000000038 .L0 
     /tmp/ccOkThlN.s:46     .text:0000000000000038 .L0 
     /tmp/ccOkThlN.s:52     .text:0000000000000040 .L0 
     /tmp/ccOkThlN.s:53     .text:0000000000000040 .L0 
     /tmp/ccOkThlN.s:56     .text:0000000000000048 .L0 
     /tmp/ccOkThlN.s:57     .text:000000000000004c .L0 
     /tmp/ccOkThlN.s:59     .text:0000000000000050 .L0 
     /tmp/ccOkThlN.s:60     .text:0000000000000050 .L0 
     /tmp/ccOkThlN.s:62     .text:0000000000000054 .L0 
     /tmp/ccOkThlN.s:64     .text:0000000000000058 .L0 
     /tmp/ccOkThlN.s:66     .text:000000000000005c .L0 
     /tmp/ccOkThlN.s:72     .text:000000000000005c _ZN3TCB12createThreadEPFvPvES0_
     /tmp/ccOkThlN.s:75     .text:000000000000005c .L0 
     /tmp/ccOkThlN.s:3195   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccOkThlN.s:79     .text:000000000000005c .L0 
     /tmp/ccOkThlN.s:80     .text:0000000000000060 .L0 
     /tmp/ccOkThlN.s:86     .text:0000000000000074 .L0 
     /tmp/ccOkThlN.s:87     .text:0000000000000074 .L0 
     /tmp/ccOkThlN.s:88     .text:0000000000000074 .L0 
     /tmp/ccOkThlN.s:89     .text:0000000000000074 .L0 
     /tmp/ccOkThlN.s:90     .text:0000000000000074 .L0 
     /tmp/ccOkThlN.s:92     .text:0000000000000078 .L0 
     /tmp/ccOkThlN.s:96     .text:0000000000000080 .L0 
     /tmp/ccOkThlN.s:97     .text:0000000000000080 .L0 
     /tmp/ccOkThlN.s:108    .text:0000000000000090 .L0 
     /tmp/ccOkThlN.s:110    .text:0000000000000094 .L0 
     /tmp/ccOkThlN.s:112    .text:0000000000000098 .L0 
     /tmp/ccOkThlN.s:119    .text:00000000000000a8 .L0 
     /tmp/ccOkThlN.s:122    .text:00000000000000ac .L0 
     /tmp/ccOkThlN.s:126    .text:00000000000000bc .L0 
     /tmp/ccOkThlN.s:128    .text:00000000000000c0 .L0 
     /tmp/ccOkThlN.s:132    .text:00000000000000c8 .L0 
     /tmp/ccOkThlN.s:137    .text:00000000000000d8 .L0 
     /tmp/ccOkThlN.s:139    .text:00000000000000dc .L0 
     /tmp/ccOkThlN.s:140    .text:00000000000000dc .L0 
     /tmp/ccOkThlN.s:147    .text:00000000000000ec .L0 
     /tmp/ccOkThlN.s:155    .text:00000000000000f8 .L0 
     /tmp/ccOkThlN.s:165    .text:0000000000000110 .L0 
     /tmp/ccOkThlN.s:167    .text:0000000000000118 .L0 
     /tmp/ccOkThlN.s:169    .text:000000000000011c .L0 
GAS LISTING /tmp/ccOkThlN.s 			page 16


     /tmp/ccOkThlN.s:170    .text:000000000000011c .L0 
     /tmp/ccOkThlN.s:172    .text:0000000000000120 .L0 
     /tmp/ccOkThlN.s:175    .text:0000000000000124 .L0 
     /tmp/ccOkThlN.s:178    .text:0000000000000128 .L0 
     /tmp/ccOkThlN.s:181    .text:000000000000012c .L0 
     /tmp/ccOkThlN.s:183    .text:0000000000000130 .L0 
     /tmp/ccOkThlN.s:209    .text:0000000000000130 _ZN3TCB5yieldEv
     /tmp/ccOkThlN.s:212    .text:0000000000000130 .L0 
     /tmp/ccOkThlN.s:213    .text:0000000000000130 .L0 
     /tmp/ccOkThlN.s:214    .text:0000000000000134 .L0 
     /tmp/ccOkThlN.s:216    .text:0000000000000138 .L0 
     /tmp/ccOkThlN.s:218    .text:000000000000013c .L0 
     /tmp/ccOkThlN.s:224    .text:000000000000013c .L0 
     /tmp/ccOkThlN.s:225    .text:000000000000013c .L0 
     /tmp/ccOkThlN.s:226    .text:000000000000013c .L0 
     /tmp/ccOkThlN.s:236    .text:0000000000000144 .L0 
         src/tcb.cpp:23     .text:0000000000000144 .L0 
     /tmp/ccOkThlN.s:243    .text:0000000000000148 .L0 
     /tmp/ccOkThlN.s:244    .text:000000000000014c .L0 
     /tmp/ccOkThlN.s:245    .text:000000000000014c .L0 
     /tmp/ccOkThlN.s:247    .text:0000000000000150 .L0 
     /tmp/ccOkThlN.s:249    .text:0000000000000154 .L0 
     /tmp/ccOkThlN.s:255    .text:0000000000000154 _ZN3TCB8dispatchEv
     /tmp/ccOkThlN.s:258    .text:0000000000000154 .L0 
     /tmp/ccOkThlN.s:259    .text:0000000000000154 .L0 
     /tmp/ccOkThlN.s:260    .text:0000000000000158 .L0 
     /tmp/ccOkThlN.s:264    .text:0000000000000164 .L0 
     /tmp/ccOkThlN.s:265    .text:0000000000000164 .L0 
     /tmp/ccOkThlN.s:266    .text:0000000000000164 .L0 
     /tmp/ccOkThlN.s:268    .text:0000000000000168 .L0 
     /tmp/ccOkThlN.s:270    .text:0000000000000168 .L0 
     /tmp/ccOkThlN.s:271    .text:0000000000000168 .L0 
     /tmp/ccOkThlN.s:276    .text:0000000000000170 .L0 
     /tmp/ccOkThlN.s:277    .text:0000000000000170 .L0 
     /tmp/ccOkThlN.s:278    .text:0000000000000170 .L0 
     /tmp/ccOkThlN.s:283    .text:0000000000000174 .L0 
     /tmp/ccOkThlN.s:288    .text:0000000000000178 .L0 
     /tmp/ccOkThlN.s:289    .text:0000000000000178 .L0 
     /tmp/ccOkThlN.s:294    .text:000000000000017c .L0 
     /tmp/ccOkThlN.s:297    .text:0000000000000180 .L0 
     /tmp/ccOkThlN.s:298    .text:0000000000000180 .L0 
     /tmp/ccOkThlN.s:301    .text:0000000000000188 .L0 
     /tmp/ccOkThlN.s:303    .text:0000000000000190 .L0 
     /tmp/ccOkThlN.s:304    .text:0000000000000190 .L0 
     /tmp/ccOkThlN.s:309    .text:00000000000001a0 .L0 
     /tmp/ccOkThlN.s:310    .text:00000000000001a4 .L0 
     /tmp/ccOkThlN.s:311    .text:00000000000001a4 .L0 
     /tmp/ccOkThlN.s:313    .text:00000000000001a8 .L0 
     /tmp/ccOkThlN.s:314    .text:00000000000001a8 .L0 
     /tmp/ccOkThlN.s:316    .text:00000000000001ac .L0 
     /tmp/ccOkThlN.s:319    .text:00000000000001b0 .L0 
     /tmp/ccOkThlN.s:323    .text:00000000000001b4 .L0 
     /tmp/ccOkThlN.s:325    .text:00000000000001b4 .L0 
     /tmp/ccOkThlN.s:326    .text:00000000000001b4 .L0 
     /tmp/ccOkThlN.s:330    .text:00000000000001c4 .L0 
     /tmp/ccOkThlN.s:336    .text:00000000000001c4 _ZN3TCB4joinEPS_
     /tmp/ccOkThlN.s:339    .text:00000000000001c4 .L0 
GAS LISTING /tmp/ccOkThlN.s 			page 17


     /tmp/ccOkThlN.s:341    .text:00000000000001c4 .L0 
     /tmp/ccOkThlN.s:342    .text:00000000000001c8 .L0 
     /tmp/ccOkThlN.s:346    .text:00000000000001d4 .L0 
     /tmp/ccOkThlN.s:347    .text:00000000000001d4 .L0 
     /tmp/ccOkThlN.s:348    .text:00000000000001d4 .L0 
     /tmp/ccOkThlN.s:350    .text:00000000000001d8 .L0 
     /tmp/ccOkThlN.s:355    .text:00000000000001dc .L0 
     /tmp/ccOkThlN.s:358    .text:00000000000001dc .L0 
     /tmp/ccOkThlN.s:359    .text:00000000000001dc .L0 
     /tmp/ccOkThlN.s:360    .text:00000000000001dc .L0 
     /tmp/ccOkThlN.s:365    .text:00000000000001e0 .L0 
     /tmp/ccOkThlN.s:367    .text:00000000000001e4 .L0 
     /tmp/ccOkThlN.s:368    .text:00000000000001e4 .L0 
     /tmp/ccOkThlN.s:371    .text:00000000000001ec .L0 
     /tmp/ccOkThlN.s:374    .text:00000000000001f0 .L0 
     /tmp/ccOkThlN.s:375    .text:00000000000001f4 .L0 
     /tmp/ccOkThlN.s:377    .text:00000000000001f8 .L0 
     /tmp/ccOkThlN.s:378    .text:00000000000001f8 .L0 
     /tmp/ccOkThlN.s:380    .text:00000000000001fc .L0 
     /tmp/ccOkThlN.s:383    .text:0000000000000200 .L0 
     /tmp/ccOkThlN.s:385    .text:0000000000000204 .L0 
     /tmp/ccOkThlN.s:394    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccOkThlN.s:391    .bss:0000000000000000 .LANCHOR0
     /tmp/ccOkThlN.s:402    .text:0000000000000204 .L0 
     /tmp/ccOkThlN.s:30     .text:000000000000001c .L0 
     /tmp/ccOkThlN.s:123    .text:00000000000000b0 .L0 
     /tmp/ccOkThlN.s:271    .text:0000000000000168 .L0 
     /tmp/ccOkThlN.s:301    .text:0000000000000188 .L0 
     /tmp/ccOkThlN.s:117    .text:00000000000000a8 .L8
     /tmp/ccOkThlN.s:120    .text:00000000000000ac .L4
     /tmp/ccOkThlN.s:145    .text:00000000000000ec .L9
     /tmp/ccOkThlN.s:163    .text:0000000000000110 .L3
     /tmp/ccOkThlN.s:130    .text:00000000000000c8 .L5
     /tmp/ccOkThlN.s:295    .text:0000000000000180 .L15
     /tmp/ccOkThlN.s:322    .text:00000000000001b4 .L17
     /tmp/ccOkThlN.s:372    .text:00000000000001f0 .L18
     /tmp/ccOkThlN.s:353    .text:00000000000001dc .L20
     /tmp/ccOkThlN.s:99     .text:0000000000000084 .LEHB0
     /tmp/ccOkThlN.s:73     .text:000000000000005c .LFB40
     /tmp/ccOkThlN.s:102    .text:000000000000008c .LEHE0
     /tmp/ccOkThlN.s:113    .text:000000000000009c .LEHB1
     /tmp/ccOkThlN.s:143    .text:00000000000000e8 .LEHE1
     /tmp/ccOkThlN.s:149    .text:00000000000000f4 .L10
     /tmp/ccOkThlN.s:159    .text:0000000000000108 .LEHB2
     /tmp/ccOkThlN.s:162    .text:0000000000000110 .LEHE2
     /tmp/ccOkThlN.s:1700   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccOkThlN.s:3117   .debug_str:00000000000007bb .LASF155
     /tmp/ccOkThlN.s:2943   .debug_str:0000000000000326 .LASF156
     /tmp/ccOkThlN.s:3149   .debug_str:0000000000000964 .LASF157
     /tmp/ccOkThlN.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccOkThlN.s:397    .text:0000000000000204 .Letext0
     /tmp/ccOkThlN.s:2845   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccOkThlN.s:2945   .debug_str:0000000000000332 .LASF0
     /tmp/ccOkThlN.s:2977   .debug_str:00000000000003ec .LASF1
     /tmp/ccOkThlN.s:3061   .debug_str:000000000000065a .LASF2
     /tmp/ccOkThlN.s:3069   .debug_str:0000000000000695 .LASF4
     /tmp/ccOkThlN.s:2953   .debug_str:000000000000035f .LASF3
GAS LISTING /tmp/ccOkThlN.s 			page 18


     /tmp/ccOkThlN.s:2861   .debug_str:0000000000000085 .LASF5
     /tmp/ccOkThlN.s:3037   .debug_str:000000000000059b .LASF6
     /tmp/ccOkThlN.s:2971   .debug_str:00000000000003bd .LASF7
     /tmp/ccOkThlN.s:2925   .debug_str:0000000000000288 .LASF8
     /tmp/ccOkThlN.s:2931   .debug_str:00000000000002c5 .LASF9
     /tmp/ccOkThlN.s:2881   .debug_str:0000000000000114 .LASF10
     /tmp/ccOkThlN.s:2917   .debug_str:0000000000000259 .LASF11
     /tmp/ccOkThlN.s:2891   .debug_str:0000000000000169 .LASF12
     /tmp/ccOkThlN.s:2879   .debug_str:0000000000000104 .LASF13
     /tmp/ccOkThlN.s:3097   .debug_str:000000000000073c .LASF14
     /tmp/ccOkThlN.s:2907   .debug_str:00000000000001e8 .LASF15
     /tmp/ccOkThlN.s:3085   .debug_str:00000000000006e6 .LASF16
     /tmp/ccOkThlN.s:2923   .debug_str:000000000000027e .LASF17
     /tmp/ccOkThlN.s:3105   .debug_str:0000000000000770 .LASF48
     /tmp/ccOkThlN.s:3173   .debug_str:00000000000009ea .LASF158
     /tmp/ccOkThlN.s:2937   .debug_str:00000000000002e4 .LASF159
     /tmp/ccOkThlN.s:3141   .debug_str:000000000000092c .LASF18
     /tmp/ccOkThlN.s:3137   .debug_str:0000000000000907 .LASF160
     /tmp/ccOkThlN.s:3089   .debug_str:000000000000070f .LASF19
     /tmp/ccOkThlN.s:3009   .debug_str:00000000000004e9 .LASF20
     /tmp/ccOkThlN.s:3003   .debug_str:00000000000004c5 .LASF21
     /tmp/ccOkThlN.s:3087   .debug_str:00000000000006fc .LASF23
     /tmp/ccOkThlN.s:2913   .debug_str:000000000000023c .LASF28
     /tmp/ccOkThlN.s:3063   .debug_str:0000000000000668 .LASF161
     /tmp/ccOkThlN.s:3053   .debug_str:000000000000061e .LASF162
     /tmp/ccOkThlN.s:2975   .debug_str:00000000000003e3 .LASF22
     /tmp/ccOkThlN.s:2875   .debug_str:00000000000000d2 .LASF24
     /tmp/ccOkThlN.s:2985   .debug_str:0000000000000426 .LASF25
     /tmp/ccOkThlN.s:2909   .debug_str:00000000000001fe .LASF26
     /tmp/ccOkThlN.s:3033   .debug_str:000000000000057e .LASF27
     /tmp/ccOkThlN.s:3143   .debug_str:0000000000000936 .LASF29
     /tmp/ccOkThlN.s:3187   .debug_str:0000000000000a6b .LASF30
     /tmp/ccOkThlN.s:3175   .debug_str:00000000000009fe .LASF31
     /tmp/ccOkThlN.s:3079   .debug_str:00000000000006cc .LASF32
     /tmp/ccOkThlN.s:2969   .debug_str:00000000000003a0 .LASF33
     /tmp/ccOkThlN.s:3049   .debug_str:0000000000000605 .LASF34
     /tmp/ccOkThlN.s:2855   .debug_str:0000000000000037 .LASF35
     /tmp/ccOkThlN.s:3101   .debug_str:000000000000075d .LASF163
     /tmp/ccOkThlN.s:3071   .debug_str:000000000000069c .LASF36
     /tmp/ccOkThlN.s:2859   .debug_str:0000000000000079 .LASF37
     /tmp/ccOkThlN.s:3103   .debug_str:0000000000000765 .LASF38
     /tmp/ccOkThlN.s:3005   .debug_str:00000000000004ca .LASF39
     /tmp/ccOkThlN.s:2869   .debug_str:00000000000000b3 .LASF40
     /tmp/ccOkThlN.s:3133   .debug_str:00000000000008e7 .LASF41
     /tmp/ccOkThlN.s:3163   .debug_str:00000000000009ac .LASF42
     /tmp/ccOkThlN.s:2877   .debug_str:00000000000000ef .LASF43
     /tmp/ccOkThlN.s:3107   .debug_str:0000000000000781 .LASF44
     /tmp/ccOkThlN.s:2889   .debug_str:0000000000000153 .LASF45
     /tmp/ccOkThlN.s:3095   .debug_str:000000000000072f .LASF46
     /tmp/ccOkThlN.s:3139   .debug_str:000000000000090c .LASF47
     /tmp/ccOkThlN.s:3023   .debug_str:0000000000000540 .LASF164
     /tmp/ccOkThlN.s:2979   .debug_str:00000000000003ff .LASF65
     /tmp/ccOkThlN.s:3121   .debug_str:0000000000000893 .LASF67
     /tmp/ccOkThlN.s:3115   .debug_str:00000000000007b3 .LASF49
     /tmp/ccOkThlN.s:3119   .debug_str:000000000000087f .LASF165
     /tmp/ccOkThlN.s:2849   .debug_str:0000000000000011 .LASF50
     /tmp/ccOkThlN.s:3081   .debug_str:00000000000006d7 .LASF51
GAS LISTING /tmp/ccOkThlN.s 			page 19


     /tmp/ccOkThlN.s:3127   .debug_str:00000000000008b9 .LASF52
     /tmp/ccOkThlN.s:3083   .debug_str:00000000000006dd .LASF53
     /tmp/ccOkThlN.s:3015   .debug_str:0000000000000517 .LASF54
     /tmp/ccOkThlN.s:2873   .debug_str:00000000000000c4 .LASF56
     /tmp/ccOkThlN.s:2981   .debug_str:0000000000000405 .LASF58
     /tmp/ccOkThlN.s:2893   .debug_str:0000000000000179 .LASF55
     /tmp/ccOkThlN.s:2857   .debug_str:0000000000000051 .LASF61
     /tmp/ccOkThlN.s:2901   .debug_str:00000000000001c8 .LASF57
     /tmp/ccOkThlN.s:2887   .debug_str:0000000000000140 .LASF59
     /tmp/ccOkThlN.s:3111   .debug_str:000000000000079d .LASF60
     /tmp/ccOkThlN.s:2919   .debug_str:0000000000000268 .LASF62
     /tmp/ccOkThlN.s:3067   .debug_str:000000000000068a .LASF166
     /tmp/ccOkThlN.s:2987   .debug_str:000000000000042e .LASF63
     /tmp/ccOkThlN.s:3145   .debug_str:0000000000000954 .LASF64
     /tmp/ccOkThlN.s:2933   .debug_str:00000000000002d3 .LASF66
     /tmp/ccOkThlN.s:2941   .debug_str:000000000000030e .LASF68
     /tmp/ccOkThlN.s:3135   .debug_str:00000000000008fe .LASF69
     /tmp/ccOkThlN.s:3129   .debug_str:00000000000008c1 .LASF72
     /tmp/ccOkThlN.s:3057   .debug_str:0000000000000646 .LASF70
     /tmp/ccOkThlN.s:3017   .debug_str:000000000000051f .LASF75
     /tmp/ccOkThlN.s:3043   .debug_str:00000000000005d7 .LASF71
     /tmp/ccOkThlN.s:3045   .debug_str:00000000000005de .LASF73
     /tmp/ccOkThlN.s:3011   .debug_str:00000000000004ee .LASF74
     /tmp/ccOkThlN.s:2973   .debug_str:00000000000003d0 .LASF76
     /tmp/ccOkThlN.s:3165   .debug_str:00000000000009b6 .LASF77
     /tmp/ccOkThlN.s:3093   .debug_str:000000000000071b .LASF78
     /tmp/ccOkThlN.s:3007   .debug_str:00000000000004e1 .LASF79
     /tmp/ccOkThlN.s:3177   .debug_str:0000000000000a19 .LASF80
     /tmp/ccOkThlN.s:2983   .debug_str:000000000000041e .LASF81
     /tmp/ccOkThlN.s:3047   .debug_str:00000000000005f1 .LASF82
     /tmp/ccOkThlN.s:3183   .debug_str:0000000000000a52 .LASF83
     /tmp/ccOkThlN.s:2949   .debug_str:0000000000000345 .LASF84
     /tmp/ccOkThlN.s:3091   .debug_str:0000000000000714 .LASF85
     /tmp/ccOkThlN.s:3073   .debug_str:00000000000006a1 .LASF86
     /tmp/ccOkThlN.s:3075   .debug_str:00000000000006b4 .LASF87
     /tmp/ccOkThlN.s:2885   .debug_str:000000000000012d .LASF88
     /tmp/ccOkThlN.s:2905   .debug_str:00000000000001e2 .LASF89
     /tmp/ccOkThlN.s:2939   .debug_str:00000000000002fc .LASF90
     /tmp/ccOkThlN.s:2947   .debug_str:000000000000033f .LASF91
     /tmp/ccOkThlN.s:2899   .debug_str:00000000000001b6 .LASF92
     /tmp/ccOkThlN.s:2863   .debug_str:000000000000008c .LASF93
     /tmp/ccOkThlN.s:3065   .debug_str:0000000000000672 .LASF94
     /tmp/ccOkThlN.s:3059   .debug_str:000000000000064f .LASF95
     /tmp/ccOkThlN.s:3179   .debug_str:0000000000000a2d .LASF96
     /tmp/ccOkThlN.s:3147   .debug_str:000000000000095a .LASF97
     /tmp/ccOkThlN.s:3169   .debug_str:00000000000009c5 .LASF98
     /tmp/ccOkThlN.s:2883   .debug_str:0000000000000123 .LASF99
     /tmp/ccOkThlN.s:2995   .debug_str:0000000000000465 .LASF100
     /tmp/ccOkThlN.s:3159   .debug_str:0000000000000998 .LASF101
     /tmp/ccOkThlN.s:2929   .debug_str:00000000000002a9 .LASF102
     /tmp/ccOkThlN.s:3077   .debug_str:00000000000006bb .LASF103
     /tmp/ccOkThlN.s:3029   .debug_str:000000000000055b .LASF104
     /tmp/ccOkThlN.s:3151   .debug_str:0000000000000984 .LASF105
     /tmp/ccOkThlN.s:3025   .debug_str:0000000000000545 .LASF106
     /tmp/ccOkThlN.s:2957   .debug_str:0000000000000382 .LASF107
     /tmp/ccOkThlN.s:3113   .debug_str:00000000000007a2 .LASF108
     /tmp/ccOkThlN.s:3153   .debug_str:0000000000000989 .LASF109
GAS LISTING /tmp/ccOkThlN.s 			page 20


     /tmp/ccOkThlN.s:2955   .debug_str:0000000000000371 .LASF110
     /tmp/ccOkThlN.s:2959   .debug_str:0000000000000387 .LASF111
     /tmp/ccOkThlN.s:3035   .debug_str:000000000000058a .LASF112
     /tmp/ccOkThlN.s:3155   .debug_str:000000000000098e .LASF113
     /tmp/ccOkThlN.s:2853   .debug_str:0000000000000026 .LASF114
     /tmp/ccOkThlN.s:2961   .debug_str:000000000000038c .LASF115
     /tmp/ccOkThlN.s:3109   .debug_str:000000000000078c .LASF116
     /tmp/ccOkThlN.s:3157   .debug_str:0000000000000993 .LASF117
     /tmp/ccOkThlN.s:3185   .debug_str:0000000000000a5a .LASF118
     /tmp/ccOkThlN.s:2963   .debug_str:0000000000000391 .LASF119
     /tmp/ccOkThlN.s:2903   .debug_str:00000000000001d1 .LASF120
     /tmp/ccOkThlN.s:3019   .debug_str:0000000000000534 .LASF121
     /tmp/ccOkThlN.s:3123   .debug_str:00000000000008a3 .LASF122
     /tmp/ccOkThlN.s:2965   .debug_str:0000000000000396 .LASF123
     /tmp/ccOkThlN.s:2847   .debug_str:0000000000000000 .LASF124
     /tmp/ccOkThlN.s:3161   .debug_str:00000000000009a7 .LASF125
     /tmp/ccOkThlN.s:3055   .debug_str:0000000000000635 .LASF126
     /tmp/ccOkThlN.s:2967   .debug_str:000000000000039b .LASF127
     /tmp/ccOkThlN.s:3131   .debug_str:00000000000008d6 .LASF128
     /tmp/ccOkThlN.s:3027   .debug_str:0000000000000556 .LASF129
     /tmp/ccOkThlN.s:2991   .debug_str:0000000000000443 .LASF130
     /tmp/ccOkThlN.s:2871   .debug_str:00000000000000bf .LASF131
     /tmp/ccOkThlN.s:2993   .debug_str:0000000000000454 .LASF132
     /tmp/ccOkThlN.s:3031   .debug_str:0000000000000579 .LASF133
     /tmp/ccOkThlN.s:2927   .debug_str:0000000000000298 .LASF134
     /tmp/ccOkThlN.s:3125   .debug_str:00000000000008b4 .LASF135
     /tmp/ccOkThlN.s:2997   .debug_str:000000000000047b .LASF136
     /tmp/ccOkThlN.s:3039   .debug_str:00000000000005ae .LASF137
     /tmp/ccOkThlN.s:2911   .debug_str:000000000000021a .LASF138
     /tmp/ccOkThlN.s:3099   .debug_str:0000000000000748 .LASF139
     /tmp/ccOkThlN.s:3013   .debug_str:00000000000004f5 .LASF140
     /tmp/ccOkThlN.s:2895   .debug_str:0000000000000187 .LASF141
     /tmp/ccOkThlN.s:3001   .debug_str:00000000000004a1 .LASF142
     /tmp/ccOkThlN.s:2867   .debug_str:00000000000000a2 .LASF167
     /tmp/ccOkThlN.s:337    .text:00000000000001c4 .LFB44
     /tmp/ccOkThlN.s:386    .text:0000000000000204 .LFE44
     /tmp/ccOkThlN.s:3167   .debug_str:00000000000009be .LASF143
     /tmp/ccOkThlN.s:2662   .debug_loc:0000000000000000 .LLST11
     /tmp/ccOkThlN.s:356    .text:00000000000001dc .LBB25
     /tmp/ccOkThlN.s:363    .text:00000000000001e0 .LBE25
     /tmp/ccOkThlN.s:2680   .debug_loc:000000000000004c .LLST12
     /tmp/ccOkThlN.s:369    .text:00000000000001ec .LVL31
     /tmp/ccOkThlN.s:10     .text:0000000000000000 .LFB43
     /tmp/ccOkThlN.s:67     .text:000000000000005c .LFE43
     /tmp/ccOkThlN.s:41     .text:0000000000000038 .LBB12
     /tmp/ccOkThlN.s:50     .text:0000000000000040 .LBE12
     /tmp/ccOkThlN.s:2687   .debug_loc:000000000000006f .LLST0
     /tmp/ccOkThlN.s:2695   .debug_loc:0000000000000093 .LLST1
     /tmp/ccOkThlN.s:27     .text:000000000000001c .LVL0
     /tmp/ccOkThlN.s:54     .text:0000000000000048 .LVL4
     /tmp/ccOkThlN.s:256    .text:0000000000000154 .LFB42
     /tmp/ccOkThlN.s:331    .text:00000000000001c4 .LFE42
     /tmp/ccOkThlN.s:2702   .debug_loc:00000000000000b6 .LLST8
     /tmp/ccOkThlN.s:274    .text:0000000000000170 .LBB21
     /tmp/ccOkThlN.s:281    .text:0000000000000174 .LBE21
     /tmp/ccOkThlN.s:2713   .debug_loc:00000000000000ec .LLST9
     /tmp/ccOkThlN.s:285    .text:0000000000000178 .LBB23
GAS LISTING /tmp/ccOkThlN.s 			page 21


     /tmp/ccOkThlN.s:292    .text:000000000000017c .LBE23
     /tmp/ccOkThlN.s:2720   .debug_loc:000000000000010f .LLST10
     /tmp/ccOkThlN.s:299    .text:0000000000000188 .LVL23
     /tmp/ccOkThlN.s:307    .text:00000000000001a0 .LVL24
     /tmp/ccOkThlN.s:328    .text:00000000000001c0 .LVL27
     /tmp/ccOkThlN.s:210    .text:0000000000000130 .LFB41
     /tmp/ccOkThlN.s:250    .text:0000000000000154 .LFE41
     /tmp/ccOkThlN.s:221    .text:000000000000013c .LBB19
     /tmp/ccOkThlN.s:234    .text:0000000000000144 .LBE19
     /tmp/ccOkThlN.s:2727   .debug_loc:0000000000000132 .LLST7
     /tmp/ccOkThlN.s:184    .text:0000000000000130 .LFE40
     /tmp/ccOkThlN.s:2735   .debug_loc:0000000000000156 .LLST2
     /tmp/ccOkThlN.s:2764   .debug_loc:00000000000001cb .LLST3
     /tmp/ccOkThlN.s:105    .text:0000000000000090 .LBB17
     /tmp/ccOkThlN.s:153    .text:00000000000000f8 .LBE17
     /tmp/ccOkThlN.s:2782   .debug_loc:0000000000000217 .LLST4
     /tmp/ccOkThlN.s:2796   .debug_loc:0000000000000250 .LLST5
     /tmp/ccOkThlN.s:2821   .debug_loc:00000000000002b2 .LLST6
     /tmp/ccOkThlN.s:115    .text:00000000000000a4 .LVL9
     /tmp/ccOkThlN.s:142    .text:00000000000000e8 .LVL10
     /tmp/ccOkThlN.s:101    .text:000000000000008c .LVL7
     /tmp/ccOkThlN.s:157    .text:0000000000000104 .LVL12
     /tmp/ccOkThlN.s:161    .text:0000000000000110 .LVL13
     /tmp/ccOkThlN.s:2865   .debug_str:0000000000000097 .LASF144
     /tmp/ccOkThlN.s:2921   .debug_str:0000000000000279 .LASF145
     /tmp/ccOkThlN.s:3041   .debug_str:00000000000005c3 .LASF168
     /tmp/ccOkThlN.s:2935   .debug_str:00000000000002de .LASF146
     /tmp/ccOkThlN.s:2999   .debug_str:000000000000048c .LASF169
     /tmp/ccOkThlN.s:3051   .debug_str:000000000000060e .LASF170
     /tmp/ccOkThlN.s:2951   .debug_str:0000000000000359 .LASF147
     /tmp/ccOkThlN.s:2989   .debug_str:0000000000000433 .LASF149
     /tmp/ccOkThlN.s:2915   .debug_str:0000000000000253 .LASF148
     /tmp/ccOkThlN.s:3181   .debug_str:0000000000000a45 .LASF150
     /tmp/ccOkThlN.s:3021   .debug_str:0000000000000539 .LASF151
     /tmp/ccOkThlN.s:2851   .debug_str:0000000000000016 .LASF152
     /tmp/ccOkThlN.s:3171   .debug_str:00000000000009db .LASF153
     /tmp/ccOkThlN.s:2897   .debug_str:000000000000019e .LASF154
     /tmp/ccOkThlN.s:340    .text:00000000000001c4 .LVL28
     /tmp/ccOkThlN.s:352    .text:00000000000001dc .LVL29
     /tmp/ccOkThlN.s:381    .text:00000000000001fc .LVL32
     /tmp/ccOkThlN.s:361    .text:00000000000001e0 .LVL30
     /tmp/ccOkThlN.s:40     .text:0000000000000038 .LVL2
     /tmp/ccOkThlN.s:48     .text:0000000000000040 .LVL3
     /tmp/ccOkThlN.s:272    .text:0000000000000170 .LVL19
     /tmp/ccOkThlN.s:317    .text:00000000000001ac .LVL25
     /tmp/ccOkThlN.s:321    .text:00000000000001b4 .LVL26
     /tmp/ccOkThlN.s:279    .text:0000000000000174 .LVL20
     /tmp/ccOkThlN.s:284    .text:0000000000000178 .LVL21
     /tmp/ccOkThlN.s:290    .text:000000000000017c .LVL22
     /tmp/ccOkThlN.s:220    .text:000000000000013c .LVL17
     /tmp/ccOkThlN.s:231    .text:0000000000000144 .LVL18
     /tmp/ccOkThlN.s:78     .text:000000000000005c .LVL5
     /tmp/ccOkThlN.s:98     .text:0000000000000084 .LVL6
     /tmp/ccOkThlN.s:151    .text:00000000000000f8 .LVL11
     /tmp/ccOkThlN.s:176    .text:0000000000000124 .LVL15
     /tmp/ccOkThlN.s:179    .text:0000000000000128 .LVL16
     /tmp/ccOkThlN.s:104    .text:0000000000000090 .LVL8
GAS LISTING /tmp/ccOkThlN.s 			page 22


     /tmp/ccOkThlN.s:173    .text:0000000000000120 .LVL14
     /tmp/ccOkThlN.s:403    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccOkThlN.s:187    .gcc_except_table:0000000000000000 .LLSDA40

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z15thread_dispatchv
_Znwm
_Znam
_ZN9Scheduler3putEP3TCB
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
