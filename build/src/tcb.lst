GAS LISTING /tmp/ccHO9MVq.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB13threadWrapperEv
   9              	_ZN3TCB13threadWrapperEv:
  10              	.LFB59:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** //
   2:src/tcb.cpp   **** // Created by marko on 20.4.22..
   3:src/tcb.cpp   **** //
   4:src/tcb.cpp   **** 
   5:src/tcb.cpp   **** #include "../h/tcb.hpp"
   6:src/tcb.cpp   **** #include "../h/riscv.hpp"
   7:src/tcb.cpp   **** #include "../test/printing.hpp"
   8:src/tcb.cpp   **** #include "../h/syscall_c.hpp"
   9:src/tcb.cpp   **** 
  10:src/tcb.cpp   **** TCB *TCB::running = nullptr;
  11:src/tcb.cpp   **** 
  12:src/tcb.cpp   **** //uint64 TCB::timeSliceCounter = 0;
  13:src/tcb.cpp   **** //uint64 TCB::timeSliceCounterTest = 0;
  14:src/tcb.cpp   **** 
  15:src/tcb.cpp   **** TCB *TCB::createThread(Body body, void* arg)
  16:src/tcb.cpp   **** {
  17:src/tcb.cpp   ****     TCB* newTCB = new TCB(body, arg);
  18:src/tcb.cpp   ****     Scheduler::put(newTCB);
  19:src/tcb.cpp   ****     return newTCB;
  20:src/tcb.cpp   **** }
  21:src/tcb.cpp   **** 
  22:src/tcb.cpp   **** TCB *TCB::createThreadWithoutStarting(Body body, void* arg)
  23:src/tcb.cpp   **** {
  24:src/tcb.cpp   ****     TCB* newTCB = new TCB(body, arg);
  25:src/tcb.cpp   ****     //Scheduler::put(newTCB);
  26:src/tcb.cpp   ****     return newTCB;
  27:src/tcb.cpp   **** }
  28:src/tcb.cpp   **** 
  29:src/tcb.cpp   **** void TCB::yield()
  30:src/tcb.cpp   **** {
  31:src/tcb.cpp   ****     Riscv::w_a0(0x13);
  32:src/tcb.cpp   ****     __asm__ volatile ("ecall");
  33:src/tcb.cpp   **** }
  34:src/tcb.cpp   **** 
  35:src/tcb.cpp   **** void TCB::dispatch()
  36:src/tcb.cpp   **** {
  37:src/tcb.cpp   ****     TCB *old = running;
  38:src/tcb.cpp   ****     if (!old->isFinished() && !old->isBlocked()) { Scheduler::put(old); }
  39:src/tcb.cpp   ****     running = Scheduler::get();
  40:src/tcb.cpp   **** 
  41:src/tcb.cpp   ****     /*while(running->isBlocked()) {
  42:src/tcb.cpp   ****         Scheduler::put(running);
  43:src/tcb.cpp   ****         running = Scheduler::get();
  44:src/tcb.cpp   ****     }*/
  45:src/tcb.cpp   **** 
  46:src/tcb.cpp   ****     //Ovde treba promena privilegije?
  47:src/tcb.cpp   **** 
GAS LISTING /tmp/ccHO9MVq.s 			page 2


  48:src/tcb.cpp   ****     if(running->isMain()) {
  49:src/tcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  50:src/tcb.cpp   ****     }
  51:src/tcb.cpp   ****     else {
  52:src/tcb.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  53:src/tcb.cpp   ****     }
  54:src/tcb.cpp   **** 
  55:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
  56:src/tcb.cpp   **** }
  57:src/tcb.cpp   **** 
  58:src/tcb.cpp   **** void TCB::threadWrapper()
  59:src/tcb.cpp   **** {
  12              		.loc 1 59 1
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
  60:src/tcb.cpp   ****     Riscv::popSppSpie();
  24              		.loc 1 60 5
  25              		.loc 1 60 22 is_stmt 0
  26 0014 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  26      E7800000 
  27              	.LVL0:
  61:src/tcb.cpp   ****     //Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  62:src/tcb.cpp   ****     //Ovde smo uvek u niti koja nije main zar ne?
  63:src/tcb.cpp   **** 
  64:src/tcb.cpp   ****     running->body(running->arg);
  28              		.loc 1 64 5 is_stmt 1
  29              		.loc 1 64 14 is_stmt 0
  30 001c 97040000 		lla	s1,.LANCHOR0
  30      93840400 
  31 0024 83B70400 		ld	a5,0(s1)
  32 0028 03B70700 		ld	a4,0(a5)
  33              		.loc 1 64 18
  34 002c 03B58702 		ld	a0,40(a5)
  35 0030 E7000700 		jalr	a4
  36              	.LVL1:
  65:src/tcb.cpp   ****     running->setFinished(true);
  37              		.loc 1 65 5 is_stmt 1
  38              		.loc 1 65 25 is_stmt 0
  39 0034 83B70400 		ld	a5,0(s1)
  40              	.LVL2:
  41              	.LBB26:
  42              	.LBB27:
  43              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
GAS LISTING /tmp/ccHO9MVq.s 			page 3


   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "memoryAllocator.hpp"
  11:src/../h/tcb.hpp **** 
  12:src/../h/tcb.hpp **** // Thread Control Block
  13:src/../h/tcb.hpp **** class TCB
  14:src/../h/tcb.hpp **** {
  15:src/../h/tcb.hpp **** public:
  16:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  17:src/../h/tcb.hpp **** 
  18:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  44              		.loc 2 20 36 is_stmt 1
  45              		.loc 2 20 45 is_stmt 0
  46 0038 13071000 		li	a4,1
  47 003c 2380E702 		sb	a4,32(a5)
  48              	.LVL3:
  49              	.LBE27:
  50              	.LBE26:
  66:src/tcb.cpp   ****     thread_dispatch();
  51              		.loc 1 66 5 is_stmt 1
  52              		.loc 1 66 20 is_stmt 0
  53 0040 97000000 		call	_Z15thread_dispatchv@plt
  53      E7800000 
  54              	.LVL4:
  67:src/tcb.cpp   **** }
  55              		.loc 1 67 1
  56 0048 83308101 		ld	ra,24(sp)
  57              		.cfi_restore 1
  58 004c 03340101 		ld	s0,16(sp)
  59              		.cfi_restore 8
  60              		.cfi_def_cfa 2, 32
  61 0050 83348100 		ld	s1,8(sp)
  62              		.cfi_restore 9
  63 0054 13010102 		addi	sp,sp,32
  64              		.cfi_def_cfa_offset 0
  65 0058 67800000 		jr	ra
  66              		.cfi_endproc
  67              	.LFE59:
  69              		.align	2
  70              		.globl	_ZN3TCB12createThreadEPFvPvES0_
  72              	_ZN3TCB12createThreadEPFvPvES0_:
  73              	.LFB55:
  16:src/tcb.cpp   ****     TCB* newTCB = new TCB(body, arg);
  74              		.loc 1 16 1 is_stmt 1
  75              		.cfi_startproc
  76              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  77              		.cfi_lsda 0x1b,.LLSDA55
  78              	.LVL5:
  79 005c 130101FD 		addi	sp,sp,-48
  80              		.cfi_def_cfa_offset 48
  81 0060 23341102 		sd	ra,40(sp)
  82 0064 23308102 		sd	s0,32(sp)
  83 0068 233C9100 		sd	s1,24(sp)
GAS LISTING /tmp/ccHO9MVq.s 			page 4


  84 006c 23382101 		sd	s2,16(sp)
  85 0070 23343101 		sd	s3,8(sp)
  86              		.cfi_offset 1, -8
  87              		.cfi_offset 8, -16
  88              		.cfi_offset 9, -24
  89              		.cfi_offset 18, -32
  90              		.cfi_offset 19, -40
  91 0074 13040103 		addi	s0,sp,48
  92              		.cfi_def_cfa 8, 0
  93 0078 13090500 		mv	s2,a0
  94 007c 93890500 		mv	s3,a1
  17:src/tcb.cpp   ****     Scheduler::put(newTCB);
  95              		.loc 1 17 5
  96              	.LVL6:
  97              	.LBB35:
  98              	.LBB36:
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     bool isBlocked() const { return this->blocked; }
  23:src/../h/tcb.hpp **** 
  24:src/../h/tcb.hpp ****     void setBlocked(bool value) { this->blocked = value; }
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     bool isMain() const { return this->main; }
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     //uint64 getTimeSlice() const { return timeSlice; }
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****     //static uint64 getTimeSliceTest() { return timeSliceCounterTest; }
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     static TCB *createThread(Body body, void* arg);
  35:src/../h/tcb.hpp **** 
  36:src/../h/tcb.hpp ****     static TCB *createThreadWithoutStarting(Body body, void* arg);
  37:src/../h/tcb.hpp **** 
  38:src/../h/tcb.hpp ****     static void startThread(TCB* tcbToStart) {
  39:src/../h/tcb.hpp ****         Scheduler::put(tcbToStart);
  40:src/../h/tcb.hpp ****     }
  41:src/../h/tcb.hpp **** 
  42:src/../h/tcb.hpp ****     static void yield();
  43:src/../h/tcb.hpp **** 
  44:src/../h/tcb.hpp ****     static TCB *running;
  45:src/../h/tcb.hpp **** 
  46:src/../h/tcb.hpp ****     void* operator new(size_t size) {
  47:src/../h/tcb.hpp ****         size_t newSize;
  99              		.loc 2 47 9
  48:src/../h/tcb.hpp ****         if(size%MEM_BLOCK_SIZE != 0) {
 100              		.loc 2 48 9
  49:src/../h/tcb.hpp ****             newSize = ((size + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE) * MEM_BLOCK_SIZE;
 101              		.loc 2 49 13
  50:src/../h/tcb.hpp ****         }
  51:src/../h/tcb.hpp ****         else {
  52:src/../h/tcb.hpp ****             newSize = size;
  53:src/../h/tcb.hpp ****         }
  54:src/../h/tcb.hpp **** 
  55:src/../h/tcb.hpp ****         return MemoryAllocator::mem_alloc(newSize);
 102              		.loc 2 55 9
 103              		.loc 2 55 42 is_stmt 0
 104 0080 13050004 		li	a0,64
GAS LISTING /tmp/ccHO9MVq.s 			page 5


 105              	.LVL7:
 106              	.LEHB0:
 107 0084 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 107      E7800000 
 108              	.LVL8:
 109              	.LEHE0:
 110 008c 93040500 		mv	s1,a0
 111              	.LVL9:
 112              	.LBE36:
 113              	.LBE35:
 114              	.LBB37:
 115              	.LBB38:
  56:src/../h/tcb.hpp ****     }
  57:src/../h/tcb.hpp ****     void* operator new[](size_t size) {
  58:src/../h/tcb.hpp ****         size_t newSize;
  59:src/../h/tcb.hpp ****         if(size%MEM_BLOCK_SIZE != 0) {
  60:src/../h/tcb.hpp ****             newSize = ((size + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE) * MEM_BLOCK_SIZE;
  61:src/../h/tcb.hpp ****         }
  62:src/../h/tcb.hpp ****         else {
  63:src/../h/tcb.hpp ****             newSize = size;
  64:src/../h/tcb.hpp ****         }
  65:src/../h/tcb.hpp **** 
  66:src/../h/tcb.hpp ****         return MemoryAllocator::mem_alloc(newSize);
  67:src/../h/tcb.hpp ****     }
  68:src/../h/tcb.hpp ****     void operator delete(void *ptr) {
  69:src/../h/tcb.hpp ****         MemoryAllocator::mem_free(ptr);
  70:src/../h/tcb.hpp ****     }
  71:src/../h/tcb.hpp ****     void operator delete[](void *ptr) {
  72:src/../h/tcb.hpp ****         MemoryAllocator::mem_free(ptr);
  73:src/../h/tcb.hpp ****     }
  74:src/../h/tcb.hpp **** 
  75:src/../h/tcb.hpp **** 
  76:src/../h/tcb.hpp **** private:
  77:src/../h/tcb.hpp ****     TCB(Body body, void* arg) :
  78:src/../h/tcb.hpp ****             body(body),
  79:src/../h/tcb.hpp ****             stack(body != nullptr ? new uint64[STACK_SIZE] : nullptr),
  80:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  81:src/../h/tcb.hpp ****                      stack != nullptr ? (uint64) &stack[STACK_SIZE] : 0
  82:src/../h/tcb.hpp ****                     }),
  83:src/../h/tcb.hpp ****             finished(false),
  84:src/../h/tcb.hpp ****             blocked(false),
  85:src/../h/tcb.hpp ****             main(body == nullptr),
  86:src/../h/tcb.hpp ****             arg(arg)
 116              		.loc 2 86 20
 117 0090 23302501 		sd	s2,0(a0)
  79:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 118              		.loc 2 79 35
 119 0094 630A0900 		beqz	s2,.L7
  79:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 120              		.loc 2 79 58
 121 0098 37250000 		li	a0,8192
 122              	.LEHB1:
 123 009c 97000000 		call	_Znam@plt
 123      E7800000 
 124              	.LVL10:
 125              	.LEHE1:
 126 00a4 6F008000 		j	.L4
GAS LISTING /tmp/ccHO9MVq.s 			page 6


 127              	.L7:
  79:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 128              		.loc 2 79 35
 129 00a8 13050000 		li	a0,0
 130              	.L4:
 131              		.loc 2 86 20
 132 00ac 23B4A400 		sd	a0,8(s1)
 133 00b0 97070000 		lla	a5,_ZN3TCB13threadWrapperEv
 133      93870700 
 134 00b8 23B8F400 		sd	a5,16(s1)
  81:src/../h/tcb.hpp ****                     }),
 135              		.loc 2 81 39
 136 00bc 63080504 		beqz	a0,.L8
  81:src/../h/tcb.hpp ****                     }),
 137              		.loc 2 81 50
 138 00c0 B7270000 		li	a5,8192
 139 00c4 3305F500 		add	a0,a0,a5
 140              	.L5:
 141              		.loc 2 86 20
 142 00c8 23BCA400 		sd	a0,24(s1)
 143 00cc 23800402 		sb	zero,32(s1)
 144 00d0 A3800402 		sb	zero,33(s1)
  85:src/../h/tcb.hpp ****             arg(arg)
 145              		.loc 2 85 23
 146 00d4 13391900 		seqz	s2,s2
 147              	.LVL11:
 148              		.loc 2 86 20
 149 00d8 23812403 		sb	s2,34(s1)
 150 00dc 23B43403 		sd	s3,40(s1)
 151              	.LVL12:
 152              	.LBE38:
 153              	.LBE37:
  18:src/tcb.cpp   ****     return newTCB;
 154              		.loc 1 18 5 is_stmt 1
  18:src/tcb.cpp   ****     return newTCB;
 155              		.loc 1 18 19 is_stmt 0
 156 00e0 13850400 		mv	a0,s1
 157              	.LEHB2:
 158 00e4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 158      E7800000 
 159              	.LVL13:
 160              	.LEHE2:
  19:src/tcb.cpp   **** }
 161              		.loc 1 19 5 is_stmt 1
  20:src/tcb.cpp   **** 
 162              		.loc 1 20 1 is_stmt 0
 163 00ec 13850400 		mv	a0,s1
 164 00f0 83308102 		ld	ra,40(sp)
 165              		.cfi_remember_state
 166              		.cfi_restore 1
 167 00f4 03340102 		ld	s0,32(sp)
 168              		.cfi_restore 8
 169              		.cfi_def_cfa 2, 48
 170 00f8 83348101 		ld	s1,24(sp)
 171              		.cfi_restore 9
 172              	.LVL14:
 173 00fc 03390101 		ld	s2,16(sp)
GAS LISTING /tmp/ccHO9MVq.s 			page 7


 174              		.cfi_restore 18
 175 0100 83398100 		ld	s3,8(sp)
 176              		.cfi_restore 19
 177              	.LVL15:
 178 0104 13010103 		addi	sp,sp,48
 179              		.cfi_def_cfa_offset 0
 180 0108 67800000 		jr	ra
 181              	.LVL16:
 182              	.L8:
 183              		.cfi_restore_state
 184              	.LBB40:
 185              	.LBB39:
  81:src/../h/tcb.hpp ****                     }),
 186              		.loc 2 81 39
 187 010c 13050000 		li	a0,0
 188 0110 6FF09FFB 		j	.L5
 189              	.L9:
 190 0114 13090500 		mv	s2,a0
 191              	.LVL17:
 192              	.LBE39:
 193              	.LBE40:
 194              	.LBB41:
 195              	.LBB42:
  69:src/../h/tcb.hpp ****     }
 196              		.loc 2 69 9 is_stmt 1
  69:src/../h/tcb.hpp ****     }
 197              		.loc 2 69 34 is_stmt 0
 198 0118 13850400 		mv	a0,s1
 199 011c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 199      E7800000 
 200              	.LVL18:
 201 0124 13050900 		mv	a0,s2
 202              	.LEHB3:
 203 0128 97000000 		call	_Unwind_Resume@plt
 203      E7800000 
 204              	.LVL19:
 205              	.LEHE3:
 206              	.LBE42:
 207              	.LBE41:
 208              		.cfi_endproc
 209              	.LFE55:
 210              		.globl	__gxx_personality_v0
 211              		.section	.gcc_except_table,"a",@progbits
 212              	.LLSDA55:
 213 0000 FF       		.byte	0xff
 214 0001 FF       		.byte	0xff
 215 0002 03       		.byte	0x3
 216 0003 34       		.byte	0x34
 217 0004 00000000 		.4byte	.LEHB0-.LFB55
 218 0008 00000000 		.4byte	.LEHE0-.LEHB0
 219 000c 00000000 		.4byte	0
 220 0010 00       		.byte	0
 221 0011 00000000 		.4byte	.LEHB1-.LFB55
 222 0015 00000000 		.4byte	.LEHE1-.LEHB1
 223 0019 00000000 		.4byte	.L9-.LFB55
 224 001d 00       		.byte	0
 225 001e 00000000 		.4byte	.LEHB2-.LFB55
GAS LISTING /tmp/ccHO9MVq.s 			page 8


 226 0022 00000000 		.4byte	.LEHE2-.LEHB2
 227 0026 00000000 		.4byte	0
 228 002a 00       		.byte	0
 229 002b 00000000 		.4byte	.LEHB3-.LFB55
 230 002f 00000000 		.4byte	.LEHE3-.LEHB3
 231 0033 00000000 		.4byte	0
 232 0037 00       		.byte	0
 233              		.text
 235              		.align	2
 236              		.globl	_ZN3TCB27createThreadWithoutStartingEPFvPvES0_
 238              	_ZN3TCB27createThreadWithoutStartingEPFvPvES0_:
 239              	.LFB56:
  23:src/tcb.cpp   ****     TCB* newTCB = new TCB(body, arg);
 240              		.loc 1 23 1 is_stmt 1
 241              		.cfi_startproc
 242              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 243              		.cfi_lsda 0x1b,.LLSDA56
 244              	.LVL20:
 245 0130 130101FD 		addi	sp,sp,-48
 246              		.cfi_def_cfa_offset 48
 247 0134 23341102 		sd	ra,40(sp)
 248 0138 23308102 		sd	s0,32(sp)
 249 013c 233C9100 		sd	s1,24(sp)
 250 0140 23382101 		sd	s2,16(sp)
 251 0144 23343101 		sd	s3,8(sp)
 252              		.cfi_offset 1, -8
 253              		.cfi_offset 8, -16
 254              		.cfi_offset 9, -24
 255              		.cfi_offset 18, -32
 256              		.cfi_offset 19, -40
 257 0148 13040103 		addi	s0,sp,48
 258              		.cfi_def_cfa 8, 0
 259 014c 13090500 		mv	s2,a0
 260 0150 93890500 		mv	s3,a1
  24:src/tcb.cpp   ****     //Scheduler::put(newTCB);
 261              		.loc 1 24 5
 262              	.LVL21:
 263              	.LBB50:
 264              	.LBB51:
  47:src/../h/tcb.hpp ****         if(size%MEM_BLOCK_SIZE != 0) {
 265              		.loc 2 47 9
  48:src/../h/tcb.hpp ****             newSize = ((size + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE) * MEM_BLOCK_SIZE;
 266              		.loc 2 48 9
  49:src/../h/tcb.hpp ****         }
 267              		.loc 2 49 13
  55:src/../h/tcb.hpp ****     }
 268              		.loc 2 55 9
  55:src/../h/tcb.hpp ****     }
 269              		.loc 2 55 42 is_stmt 0
 270 0154 13050004 		li	a0,64
 271              	.LVL22:
 272              	.LEHB4:
 273 0158 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 273      E7800000 
 274              	.LVL23:
 275              	.LEHE4:
 276 0160 93040500 		mv	s1,a0
GAS LISTING /tmp/ccHO9MVq.s 			page 9


 277              	.LVL24:
 278              	.LBE51:
 279              	.LBE50:
 280              	.LBB52:
 281              	.LBB53:
 282              		.loc 2 86 20
 283 0164 23302501 		sd	s2,0(a0)
  79:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 284              		.loc 2 79 35
 285 0168 630A0900 		beqz	s2,.L16
  79:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 286              		.loc 2 79 58
 287 016c 37250000 		li	a0,8192
 288              	.LEHB5:
 289 0170 97000000 		call	_Znam@plt
 289      E7800000 
 290              	.LVL25:
 291              	.LEHE5:
 292 0178 6F008000 		j	.L13
 293              	.L16:
  79:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 294              		.loc 2 79 35
 295 017c 13050000 		li	a0,0
 296              	.L13:
 297              		.loc 2 86 20
 298 0180 23B4A400 		sd	a0,8(s1)
 299 0184 97070000 		lla	a5,_ZN3TCB13threadWrapperEv
 299      93870700 
 300 018c 23B8F400 		sd	a5,16(s1)
  81:src/../h/tcb.hpp ****                     }),
 301              		.loc 2 81 39
 302 0190 63020504 		beqz	a0,.L17
  81:src/../h/tcb.hpp ****                     }),
 303              		.loc 2 81 50
 304 0194 B7270000 		li	a5,8192
 305 0198 3305F500 		add	a0,a0,a5
 306              	.L14:
 307              		.loc 2 86 20
 308 019c 23BCA400 		sd	a0,24(s1)
 309 01a0 23800402 		sb	zero,32(s1)
 310 01a4 A3800402 		sb	zero,33(s1)
  85:src/../h/tcb.hpp ****             arg(arg)
 311              		.loc 2 85 23
 312 01a8 13391900 		seqz	s2,s2
 313              	.LVL26:
 314              		.loc 2 86 20
 315 01ac 23812403 		sb	s2,34(s1)
 316 01b0 23B43403 		sd	s3,40(s1)
 317              	.LVL27:
 318              	.LBE53:
 319              	.LBE52:
  26:src/tcb.cpp   **** }
 320              		.loc 1 26 5 is_stmt 1
  27:src/tcb.cpp   **** 
 321              		.loc 1 27 1 is_stmt 0
 322 01b4 13850400 		mv	a0,s1
 323 01b8 83308102 		ld	ra,40(sp)
GAS LISTING /tmp/ccHO9MVq.s 			page 10


 324              		.cfi_remember_state
 325              		.cfi_restore 1
 326 01bc 03340102 		ld	s0,32(sp)
 327              		.cfi_restore 8
 328              		.cfi_def_cfa 2, 48
 329 01c0 83348101 		ld	s1,24(sp)
 330              		.cfi_restore 9
 331              	.LVL28:
 332 01c4 03390101 		ld	s2,16(sp)
 333              		.cfi_restore 18
 334 01c8 83398100 		ld	s3,8(sp)
 335              		.cfi_restore 19
 336              	.LVL29:
 337 01cc 13010103 		addi	sp,sp,48
 338              		.cfi_def_cfa_offset 0
 339 01d0 67800000 		jr	ra
 340              	.LVL30:
 341              	.L17:
 342              		.cfi_restore_state
 343              	.LBB55:
 344              	.LBB54:
  81:src/../h/tcb.hpp ****                     }),
 345              		.loc 2 81 39
 346 01d4 13050000 		li	a0,0
 347 01d8 6FF05FFC 		j	.L14
 348              	.L18:
 349 01dc 13090500 		mv	s2,a0
 350              	.LVL31:
 351              	.LBE54:
 352              	.LBE55:
 353              	.LBB56:
 354              	.LBB57:
  69:src/../h/tcb.hpp ****     }
 355              		.loc 2 69 9 is_stmt 1
  69:src/../h/tcb.hpp ****     }
 356              		.loc 2 69 34 is_stmt 0
 357 01e0 13850400 		mv	a0,s1
 358 01e4 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 358      E7800000 
 359              	.LVL32:
 360 01ec 13050900 		mv	a0,s2
 361              	.LEHB6:
 362 01f0 97000000 		call	_Unwind_Resume@plt
 362      E7800000 
 363              	.LVL33:
 364              	.LEHE6:
 365              	.LBE57:
 366              	.LBE56:
 367              		.cfi_endproc
 368              	.LFE56:
 369              		.section	.gcc_except_table
 370              	.LLSDA56:
 371 0038 FF       		.byte	0xff
 372 0039 FF       		.byte	0xff
 373 003a 03       		.byte	0x3
 374 003b 27       		.byte	0x27
 375 003c 00000000 		.4byte	.LEHB4-.LFB56
GAS LISTING /tmp/ccHO9MVq.s 			page 11


 376 0040 00000000 		.4byte	.LEHE4-.LEHB4
 377 0044 00000000 		.4byte	0
 378 0048 00       		.byte	0
 379 0049 00000000 		.4byte	.LEHB5-.LFB56
 380 004d 00000000 		.4byte	.LEHE5-.LEHB5
 381 0051 00000000 		.4byte	.L18-.LFB56
 382 0055 00       		.byte	0
 383 0056 00000000 		.4byte	.LEHB6-.LFB56
 384 005a 00000000 		.4byte	.LEHE6-.LEHB6
 385 005e 00000000 		.4byte	0
 386 0062 00       		.byte	0
 387              		.text
 389              		.align	2
 390              		.globl	_ZN3TCB5yieldEv
 392              	_ZN3TCB5yieldEv:
 393              	.LFB57:
  30:src/tcb.cpp   ****     Riscv::w_a0(0x13);
 394              		.loc 1 30 1 is_stmt 1
 395              		.cfi_startproc
 396 01f8 130101FF 		addi	sp,sp,-16
 397              		.cfi_def_cfa_offset 16
 398 01fc 23348100 		sd	s0,8(sp)
 399              		.cfi_offset 8, -8
 400 0200 13040101 		addi	s0,sp,16
 401              		.cfi_def_cfa 8, 0
  31:src/tcb.cpp   ****     __asm__ volatile ("ecall");
 402              		.loc 1 31 5
 403              	.LVL34:
 404              	.LBB58:
 405              	.LBB59:
 406              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
GAS LISTING /tmp/ccHO9MVq.s 			page 12


  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
GAS LISTING /tmp/ccHO9MVq.s 			page 13


  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     //read a1 register
  92:src/../h/riscv.hpp ****     static uint64 r_a1();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     //write to a1 register
  95:src/../h/riscv.hpp ****     static void w_a1(uint64 writeValue);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     //read a2 register
  98:src/../h/riscv.hpp ****     static uint64 r_a2();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     //write to a2 register
 101:src/../h/riscv.hpp ****     static void w_a2(uint64 writeValue);
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp ****     //read a3 register
 104:src/../h/riscv.hpp ****     static uint64 r_a3();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     //write to a3 register
 107:src/../h/riscv.hpp ****     static void w_a3(uint64 writeValue);
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     //read a4 register
 110:src/../h/riscv.hpp ****     static uint64 r_a4();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     //write to a4 register
 113:src/../h/riscv.hpp ****     static void w_a4(uint64 writeValue);
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****     //read a5 register
 116:src/../h/riscv.hpp ****     static uint64 r_a5();
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp ****     //write to a5 register
 119:src/../h/riscv.hpp ****     static void w_a5(uint64 writeValue);
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp ****     //read a6 register
 122:src/../h/riscv.hpp ****     static uint64 r_a6();
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     //write to a6 register
 125:src/../h/riscv.hpp ****     static void w_a6(uint64 writeValue);
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp ****     //read a7 register
 128:src/../h/riscv.hpp ****     static uint64 r_a7();
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp ****     //write to a7 register
 131:src/../h/riscv.hpp ****     static void w_a7(uint64 writeValue);
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** private:
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp ****     // supervisor trap handler
 137:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
 140:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccHO9MVq.s 			page 14


 141:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 142:src/../h/riscv.hpp **** };
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     uint64 volatile scause;
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 149:src/../h/riscv.hpp ****     return scause;
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     uint64 volatile sepc;
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 161:src/../h/riscv.hpp ****     return sepc;
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile stvec;
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 173:src/../h/riscv.hpp ****     return stvec;
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 179:src/../h/riscv.hpp **** }
 180:src/../h/riscv.hpp **** 
 181:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 182:src/../h/riscv.hpp **** {
 183:src/../h/riscv.hpp ****     uint64 volatile stval;
 184:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 185:src/../h/riscv.hpp ****     return stval;
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 191:src/../h/riscv.hpp **** }
 192:src/../h/riscv.hpp **** 
 193:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 194:src/../h/riscv.hpp **** {
 195:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 196:src/../h/riscv.hpp **** }
 197:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccHO9MVq.s 			page 15


 198:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 199:src/../h/riscv.hpp **** {
 200:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 201:src/../h/riscv.hpp **** }
 202:src/../h/riscv.hpp **** 
 203:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 204:src/../h/riscv.hpp **** {
 205:src/../h/riscv.hpp ****     uint64 volatile sip;
 206:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 207:src/../h/riscv.hpp ****     return sip;
 208:src/../h/riscv.hpp **** }
 209:src/../h/riscv.hpp **** 
 210:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 211:src/../h/riscv.hpp **** {
 212:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 213:src/../h/riscv.hpp **** }
 214:src/../h/riscv.hpp **** 
 215:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 216:src/../h/riscv.hpp **** {
 217:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 218:src/../h/riscv.hpp **** }
 219:src/../h/riscv.hpp **** 
 220:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 221:src/../h/riscv.hpp **** {
 222:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 223:src/../h/riscv.hpp **** }
 224:src/../h/riscv.hpp **** 
 225:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 226:src/../h/riscv.hpp **** {
 227:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 228:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 229:src/../h/riscv.hpp ****     return sstatus;
 230:src/../h/riscv.hpp **** }
 231:src/../h/riscv.hpp **** 
 232:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 233:src/../h/riscv.hpp **** {
 234:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 235:src/../h/riscv.hpp **** }
 236:src/../h/riscv.hpp **** 
 237:src/../h/riscv.hpp **** //a0
 238:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0()
 239:src/../h/riscv.hpp **** {
 240:src/../h/riscv.hpp ****     uint64 volatile a0;
 241:src/../h/riscv.hpp ****     __asm__ volatile ("mv %0, a0" : "=r"(a0));
 242:src/../h/riscv.hpp ****     return a0;
 243:src/../h/riscv.hpp **** }
 244:src/../h/riscv.hpp **** 
 245:src/../h/riscv.hpp **** 
 246:src/../h/riscv.hpp **** inline void Riscv::w_a0(uint64 writeValue) {
 247:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(writeValue));
 407              		.loc 3 247 5
 408              		.loc 3 247 55 is_stmt 0
 409 0204 93073001 		li	a5,19
 410              	#APP
 411              	# 247 "src/../h/riscv.hpp" 1
 248              	}
 412              		mv a0, a5
GAS LISTING /tmp/ccHO9MVq.s 			page 16


 413              	# 0 "" 2
 414              	.LVL35:
 415              	#NO_APP
 416              	.LBE59:
 417              	.LBE58:
  32:src/tcb.cpp   **** }
 418              		.loc 1 32 5 is_stmt 1
  32:src/tcb.cpp   **** }
 419              		.loc 1 32 31 is_stmt 0
 420              	#APP
 421              	# 32 "src/tcb.cpp" 1
  33:src/tcb.cpp   **** 
 422              		ecall
 423              	# 0 "" 2
 424              		.loc 1 33 1
 425              	#NO_APP
 426 0210 03348100 		ld	s0,8(sp)
 427              		.cfi_restore 8
 428              		.cfi_def_cfa 2, 16
 429 0214 13010101 		addi	sp,sp,16
 430              		.cfi_def_cfa_offset 0
 431 0218 67800000 		jr	ra
 432              		.cfi_endproc
 433              	.LFE57:
 435              		.align	2
 436              		.globl	_ZN3TCB8dispatchEv
 438              	_ZN3TCB8dispatchEv:
 439              	.LFB58:
  36:src/tcb.cpp   ****     TCB *old = running;
 440              		.loc 1 36 1 is_stmt 1
 441              		.cfi_startproc
 442 021c 130101FE 		addi	sp,sp,-32
 443              		.cfi_def_cfa_offset 32
 444 0220 233C1100 		sd	ra,24(sp)
 445 0224 23388100 		sd	s0,16(sp)
 446 0228 23349100 		sd	s1,8(sp)
 447              		.cfi_offset 1, -8
 448              		.cfi_offset 8, -16
 449              		.cfi_offset 9, -24
 450 022c 13040102 		addi	s0,sp,32
 451              		.cfi_def_cfa 8, 0
  37:src/tcb.cpp   ****     if (!old->isFinished() && !old->isBlocked()) { Scheduler::put(old); }
 452              		.loc 1 37 5
  37:src/tcb.cpp   ****     if (!old->isFinished() && !old->isBlocked()) { Scheduler::put(old); }
 453              		.loc 1 37 10 is_stmt 0
 454 0230 97040000 		ld	s1,.LANCHOR0
 454      83B40400 
 455              	.LVL36:
  38:src/tcb.cpp   ****     running = Scheduler::get();
 456              		.loc 1 38 5 is_stmt 1
 457              	.LBB60:
 458              	.LBB61:
  18:src/../h/tcb.hpp **** 
 459              		.loc 2 18 31
  18:src/../h/tcb.hpp **** 
 460              		.loc 2 18 38 is_stmt 0
 461 0238 83C70402 		lbu	a5,32(s1)
GAS LISTING /tmp/ccHO9MVq.s 			page 17


 462              	.LVL37:
 463              	.LBE61:
 464              	.LBE60:
  38:src/tcb.cpp   ****     running = Scheduler::get();
 465              		.loc 1 38 28
 466 023c 63960700 		bnez	a5,.L24
 467              	.LVL38:
 468              	.LBB62:
 469              	.LBB63:
  22:src/../h/tcb.hpp **** 
 470              		.loc 2 22 30 is_stmt 1
  22:src/../h/tcb.hpp **** 
 471              		.loc 2 22 43 is_stmt 0
 472 0240 83C71402 		lbu	a5,33(s1)
 473              	.LVL39:
 474              	.LBE63:
 475              	.LBE62:
  38:src/tcb.cpp   ****     running = Scheduler::get();
 476              		.loc 1 38 28
 477 0244 63840704 		beqz	a5,.L28
 478              	.L24:
  39:src/tcb.cpp   **** 
 479              		.loc 1 39 5 is_stmt 1
  39:src/tcb.cpp   **** 
 480              		.loc 1 39 29 is_stmt 0
 481 0248 97000000 		call	_ZN9Scheduler3getEv@plt
 481      E7800000 
 482              	.LVL40:
  39:src/tcb.cpp   **** 
 483              		.loc 1 39 13
 484 0250 97070000 		sd	a0,.LANCHOR0,a5
 484      23B0A700 
  48:src/tcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 485              		.loc 1 48 5 is_stmt 1
 486              	.LVL41:
 487              	.LBB64:
 488              	.LBB65:
  26:src/../h/tcb.hpp **** 
 489              		.loc 2 26 27
  26:src/../h/tcb.hpp **** 
 490              		.loc 2 26 40 is_stmt 0
 491 0258 83472502 		lbu	a5,34(a0)
 492              	.LVL42:
 493              	.LBE65:
 494              	.LBE64:
  48:src/tcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 495              		.loc 1 48 5
 496 025c 63800704 		beqz	a5,.L25
  49:src/tcb.cpp   ****     }
 497              		.loc 1 49 9 is_stmt 1
 498              	.LVL43:
 499              	.LBB66:
 500              	.LBB67:
 217:src/../h/riscv.hpp **** }
 501              		.loc 3 217 5
 217:src/../h/riscv.hpp **** }
 502              		.loc 3 217 68 is_stmt 0
GAS LISTING /tmp/ccHO9MVq.s 			page 18


 503 0260 93070010 		li	a5,256
 504              	#APP
 505              	# 217 "src/../h/riscv.hpp" 1
 506              		csrs sstatus, a5
 507              	# 0 "" 2
 508              	.LVL44:
 509              	#NO_APP
 510              	.L26:
 511              	.LBE67:
 512              	.LBE66:
  55:src/tcb.cpp   **** }
 513              		.loc 1 55 5 is_stmt 1
  55:src/tcb.cpp   **** }
 514              		.loc 1 55 23 is_stmt 0
 515 0268 93050501 		addi	a1,a0,16
 516 026c 13850401 		addi	a0,s1,16
 517 0270 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 517      E7800000 
 518              	.LVL45:
  56:src/tcb.cpp   **** 
 519              		.loc 1 56 1
 520 0278 83308101 		ld	ra,24(sp)
 521              		.cfi_remember_state
 522              		.cfi_restore 1
 523 027c 03340101 		ld	s0,16(sp)
 524              		.cfi_restore 8
 525              		.cfi_def_cfa 2, 32
 526 0280 83348100 		ld	s1,8(sp)
 527              		.cfi_restore 9
 528              	.LVL46:
 529 0284 13010102 		addi	sp,sp,32
 530              		.cfi_def_cfa_offset 0
 531 0288 67800000 		jr	ra
 532              	.LVL47:
 533              	.L28:
 534              		.cfi_restore_state
  38:src/tcb.cpp   ****     running = Scheduler::get();
 535              		.loc 1 38 52 is_stmt 1
  38:src/tcb.cpp   ****     running = Scheduler::get();
 536              		.loc 1 38 66 is_stmt 0
 537 028c 13850400 		mv	a0,s1
 538 0290 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 538      E7800000 
 539              	.LVL48:
 540 0298 6FF01FFB 		j	.L24
 541              	.L25:
  52:src/tcb.cpp   ****     }
 542              		.loc 1 52 9 is_stmt 1
 543              	.LVL49:
 544              	.LBB68:
 545              	.LBB69:
 222:src/../h/riscv.hpp **** }
 546              		.loc 3 222 5
 222:src/../h/riscv.hpp **** }
 547              		.loc 3 222 68 is_stmt 0
 548 029c 93070010 		li	a5,256
 549              	#APP
GAS LISTING /tmp/ccHO9MVq.s 			page 19


 550              	# 222 "src/../h/riscv.hpp" 1
 223:src/../h/riscv.hpp **** 
 551              		csrc sstatus, a5
 552              	# 0 "" 2
 553              		.loc 3 223 1
 554              	#NO_APP
 555 02a4 6FF05FFC 		j	.L26
 556              	.LBE69:
 557              	.LBE68:
 558              		.cfi_endproc
 559              	.LFE58:
 561              		.align	2
 562              		.globl	_ZN3TCB4joinEPS_
 564              	_ZN3TCB4joinEPS_:
 565              	.LFB60:
  68:src/tcb.cpp   **** 
  69:src/tcb.cpp   **** void TCB::join(TCB* handle) {
 566              		.loc 1 69 29 is_stmt 1
 567              		.cfi_startproc
 568              	.LVL50:
 569 02a8 130101FE 		addi	sp,sp,-32
 570              		.cfi_def_cfa_offset 32
 571 02ac 233C1100 		sd	ra,24(sp)
 572 02b0 23388100 		sd	s0,16(sp)
 573 02b4 23349100 		sd	s1,8(sp)
 574              		.cfi_offset 1, -8
 575              		.cfi_offset 8, -16
 576              		.cfi_offset 9, -24
 577 02b8 13040102 		addi	s0,sp,32
 578              		.cfi_def_cfa 8, 0
 579 02bc 93040500 		mv	s1,a0
 580              	.LVL51:
 581              	.L31:
  70:src/tcb.cpp   ****     while(!handle->isFinished()) {
 582              		.loc 1 70 5
 583              		.loc 1 70 11
 584              	.LBB70:
 585              	.LBB71:
  18:src/../h/tcb.hpp **** 
 586              		.loc 2 18 31
  18:src/../h/tcb.hpp **** 
 587              		.loc 2 18 38 is_stmt 0
 588 02c0 83C70402 		lbu	a5,32(s1)
 589              	.LVL52:
 590              	.LBE71:
 591              	.LBE70:
 592              		.loc 1 70 11
 593 02c4 63980700 		bnez	a5,.L29
  71:src/tcb.cpp   ****         TCB::dispatch();
 594              		.loc 1 71 9 is_stmt 1
 595              		.loc 1 71 22 is_stmt 0
 596 02c8 97000000 		call	_ZN3TCB8dispatchEv
 596      E7800000 
 597              	.LVL53:
  70:src/tcb.cpp   ****     while(!handle->isFinished()) {
 598              		.loc 1 70 5
 599 02d0 6FF01FFF 		j	.L31
GAS LISTING /tmp/ccHO9MVq.s 			page 20


 600              	.L29:
  72:src/tcb.cpp   ****     }
  73:src/tcb.cpp   **** }
 601              		.loc 1 73 1
 602 02d4 83308101 		ld	ra,24(sp)
 603              		.cfi_restore 1
 604 02d8 03340101 		ld	s0,16(sp)
 605              		.cfi_restore 8
 606              		.cfi_def_cfa 2, 32
 607 02dc 83348100 		ld	s1,8(sp)
 608              		.cfi_restore 9
 609              	.LVL54:
 610 02e0 13010102 		addi	sp,sp,32
 611              		.cfi_def_cfa_offset 0
 612 02e4 67800000 		jr	ra
 613              		.cfi_endproc
 614              	.LFE60:
 616              		.globl	_ZN3TCB7runningE
 617              		.bss
 618              		.align	3
 619              		.set	.LANCHOR0,. + 0
 622              	_ZN3TCB7runningE:
 623 0000 00000000 		.zero	8
 623      00000000 
 624              		.text
 625              	.Letext0:
 626              		.file 4 "src/../h/../lib/hw.h"
 627              		.file 5 "src/../h/memoryAllocator.hpp"
 628              		.file 6 "src/../h/scheduler.hpp"
 629              		.file 7 "src/../h/list.hpp"
 630              		.file 8 "src/../test/../h/syscall_c.hpp"
 4304              		.align	3
 4307              	DW.ref.__gxx_personality_v0:
 4308 0000 00000000 		.dword	__gxx_personality_v0
 4308      00000000 
 4309              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 4310              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccHO9MVq.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/ccHO9MVq.s:9      .text:0000000000000000 _ZN3TCB13threadWrapperEv
     /tmp/ccHO9MVq.s:13     .text:0000000000000000 .L0 
     /tmp/ccHO9MVq.s:14     .text:0000000000000000 .L0 
     /tmp/ccHO9MVq.s:15     .text:0000000000000004 .L0 
     /tmp/ccHO9MVq.s:19     .text:0000000000000010 .L0 
     /tmp/ccHO9MVq.s:20     .text:0000000000000010 .L0 
     /tmp/ccHO9MVq.s:21     .text:0000000000000010 .L0 
     /tmp/ccHO9MVq.s:23     .text:0000000000000014 .L0 
     /tmp/ccHO9MVq.s:25     .text:0000000000000014 .L0 
     /tmp/ccHO9MVq.s:26     .text:0000000000000014 .L0 
     /tmp/ccHO9MVq.s:29     .text:000000000000001c .L0 
     /tmp/ccHO9MVq.s:30     .text:000000000000001c .L0 
     /tmp/ccHO9MVq.s:34     .text:000000000000002c .L0 
     /tmp/ccHO9MVq.s:38     .text:0000000000000034 .L0 
     /tmp/ccHO9MVq.s:39     .text:0000000000000034 .L0 
     /tmp/ccHO9MVq.s:45     .text:0000000000000038 .L0 
     /tmp/ccHO9MVq.s:46     .text:0000000000000038 .L0 
     /tmp/ccHO9MVq.s:52     .text:0000000000000040 .L0 
     /tmp/ccHO9MVq.s:53     .text:0000000000000040 .L0 
     /tmp/ccHO9MVq.s:56     .text:0000000000000048 .L0 
     /tmp/ccHO9MVq.s:57     .text:000000000000004c .L0 
     /tmp/ccHO9MVq.s:59     .text:0000000000000050 .L0 
     /tmp/ccHO9MVq.s:60     .text:0000000000000050 .L0 
     /tmp/ccHO9MVq.s:62     .text:0000000000000054 .L0 
     /tmp/ccHO9MVq.s:64     .text:0000000000000058 .L0 
     /tmp/ccHO9MVq.s:66     .text:000000000000005c .L0 
     /tmp/ccHO9MVq.s:72     .text:000000000000005c _ZN3TCB12createThreadEPFvPvES0_
     /tmp/ccHO9MVq.s:75     .text:000000000000005c .L0 
     /tmp/ccHO9MVq.s:4307   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccHO9MVq.s:79     .text:000000000000005c .L0 
     /tmp/ccHO9MVq.s:80     .text:0000000000000060 .L0 
     /tmp/ccHO9MVq.s:86     .text:0000000000000074 .L0 
     /tmp/ccHO9MVq.s:87     .text:0000000000000074 .L0 
     /tmp/ccHO9MVq.s:88     .text:0000000000000074 .L0 
     /tmp/ccHO9MVq.s:89     .text:0000000000000074 .L0 
     /tmp/ccHO9MVq.s:90     .text:0000000000000074 .L0 
     /tmp/ccHO9MVq.s:92     .text:0000000000000078 .L0 
     /tmp/ccHO9MVq.s:99     .text:0000000000000080 .L0 
     /tmp/ccHO9MVq.s:100    .text:0000000000000080 .L0 
     /tmp/ccHO9MVq.s:101    .text:0000000000000080 .L0 
     /tmp/ccHO9MVq.s:102    .text:0000000000000080 .L0 
     /tmp/ccHO9MVq.s:103    .text:0000000000000080 .L0 
     /tmp/ccHO9MVq.s:104    .text:0000000000000080 .L0 
     /tmp/ccHO9MVq.s:117    .text:0000000000000090 .L0 
     /tmp/ccHO9MVq.s:119    .text:0000000000000094 .L0 
     /tmp/ccHO9MVq.s:121    .text:0000000000000098 .L0 
     /tmp/ccHO9MVq.s:129    .text:00000000000000a8 .L0 
     /tmp/ccHO9MVq.s:132    .text:00000000000000ac .L0 
     /tmp/ccHO9MVq.s:136    .text:00000000000000bc .L0 
     /tmp/ccHO9MVq.s:138    .text:00000000000000c0 .L0 
     /tmp/ccHO9MVq.s:142    .text:00000000000000c8 .L0 
     /tmp/ccHO9MVq.s:146    .text:00000000000000d4 .L0 
     /tmp/ccHO9MVq.s:149    .text:00000000000000d8 .L0 
     /tmp/ccHO9MVq.s:155    .text:00000000000000e0 .L0 
     /tmp/ccHO9MVq.s:156    .text:00000000000000e0 .L0 
GAS LISTING /tmp/ccHO9MVq.s 			page 22


     /tmp/ccHO9MVq.s:162    .text:00000000000000ec .L0 
     /tmp/ccHO9MVq.s:163    .text:00000000000000ec .L0 
     /tmp/ccHO9MVq.s:165    .text:00000000000000f4 .L0 
     /tmp/ccHO9MVq.s:166    .text:00000000000000f4 .L0 
     /tmp/ccHO9MVq.s:168    .text:00000000000000f8 .L0 
     /tmp/ccHO9MVq.s:169    .text:00000000000000f8 .L0 
     /tmp/ccHO9MVq.s:171    .text:00000000000000fc .L0 
     /tmp/ccHO9MVq.s:174    .text:0000000000000100 .L0 
     /tmp/ccHO9MVq.s:176    .text:0000000000000104 .L0 
     /tmp/ccHO9MVq.s:179    .text:0000000000000108 .L0 
     /tmp/ccHO9MVq.s:183    .text:000000000000010c .L0 
     /tmp/ccHO9MVq.s:187    .text:000000000000010c .L0 
     /tmp/ccHO9MVq.s:197    .text:0000000000000118 .L0 
     /tmp/ccHO9MVq.s:198    .text:0000000000000118 .L0 
     /tmp/ccHO9MVq.s:208    .text:0000000000000130 .L0 
     /tmp/ccHO9MVq.s:238    .text:0000000000000130 _ZN3TCB27createThreadWithoutStartingEPFvPvES0_
     /tmp/ccHO9MVq.s:241    .text:0000000000000130 .L0 
     /tmp/ccHO9MVq.s:245    .text:0000000000000130 .L0 
     /tmp/ccHO9MVq.s:246    .text:0000000000000134 .L0 
     /tmp/ccHO9MVq.s:252    .text:0000000000000148 .L0 
     /tmp/ccHO9MVq.s:253    .text:0000000000000148 .L0 
     /tmp/ccHO9MVq.s:254    .text:0000000000000148 .L0 
     /tmp/ccHO9MVq.s:255    .text:0000000000000148 .L0 
     /tmp/ccHO9MVq.s:256    .text:0000000000000148 .L0 
     /tmp/ccHO9MVq.s:258    .text:000000000000014c .L0 
     /tmp/ccHO9MVq.s:265    .text:0000000000000154 .L0 
     /tmp/ccHO9MVq.s:266    .text:0000000000000154 .L0 
     /tmp/ccHO9MVq.s:267    .text:0000000000000154 .L0 
     /tmp/ccHO9MVq.s:268    .text:0000000000000154 .L0 
     /tmp/ccHO9MVq.s:269    .text:0000000000000154 .L0 
     /tmp/ccHO9MVq.s:270    .text:0000000000000154 .L0 
     /tmp/ccHO9MVq.s:283    .text:0000000000000164 .L0 
     /tmp/ccHO9MVq.s:285    .text:0000000000000168 .L0 
     /tmp/ccHO9MVq.s:287    .text:000000000000016c .L0 
     /tmp/ccHO9MVq.s:295    .text:000000000000017c .L0 
     /tmp/ccHO9MVq.s:298    .text:0000000000000180 .L0 
     /tmp/ccHO9MVq.s:302    .text:0000000000000190 .L0 
     /tmp/ccHO9MVq.s:304    .text:0000000000000194 .L0 
     /tmp/ccHO9MVq.s:308    .text:000000000000019c .L0 
     /tmp/ccHO9MVq.s:312    .text:00000000000001a8 .L0 
     /tmp/ccHO9MVq.s:315    .text:00000000000001ac .L0 
     /tmp/ccHO9MVq.s:321    .text:00000000000001b4 .L0 
     /tmp/ccHO9MVq.s:322    .text:00000000000001b4 .L0 
     /tmp/ccHO9MVq.s:324    .text:00000000000001bc .L0 
     /tmp/ccHO9MVq.s:325    .text:00000000000001bc .L0 
     /tmp/ccHO9MVq.s:327    .text:00000000000001c0 .L0 
     /tmp/ccHO9MVq.s:328    .text:00000000000001c0 .L0 
     /tmp/ccHO9MVq.s:330    .text:00000000000001c4 .L0 
     /tmp/ccHO9MVq.s:333    .text:00000000000001c8 .L0 
     /tmp/ccHO9MVq.s:335    .text:00000000000001cc .L0 
     /tmp/ccHO9MVq.s:338    .text:00000000000001d0 .L0 
     /tmp/ccHO9MVq.s:342    .text:00000000000001d4 .L0 
     /tmp/ccHO9MVq.s:346    .text:00000000000001d4 .L0 
     /tmp/ccHO9MVq.s:356    .text:00000000000001e0 .L0 
     /tmp/ccHO9MVq.s:357    .text:00000000000001e0 .L0 
     /tmp/ccHO9MVq.s:367    .text:00000000000001f8 .L0 
     /tmp/ccHO9MVq.s:392    .text:00000000000001f8 _ZN3TCB5yieldEv
GAS LISTING /tmp/ccHO9MVq.s 			page 23


     /tmp/ccHO9MVq.s:395    .text:00000000000001f8 .L0 
     /tmp/ccHO9MVq.s:396    .text:00000000000001f8 .L0 
     /tmp/ccHO9MVq.s:397    .text:00000000000001fc .L0 
     /tmp/ccHO9MVq.s:399    .text:0000000000000200 .L0 
     /tmp/ccHO9MVq.s:401    .text:0000000000000204 .L0 
     /tmp/ccHO9MVq.s:407    .text:0000000000000204 .L0 
     /tmp/ccHO9MVq.s:408    .text:0000000000000204 .L0 
     /tmp/ccHO9MVq.s:409    .text:0000000000000204 .L0 
     /tmp/ccHO9MVq.s:419    .text:000000000000020c .L0 
         src/tcb.cpp:32     .text:000000000000020c .L0 
     /tmp/ccHO9MVq.s:426    .text:0000000000000210 .L0 
     /tmp/ccHO9MVq.s:427    .text:0000000000000214 .L0 
     /tmp/ccHO9MVq.s:428    .text:0000000000000214 .L0 
     /tmp/ccHO9MVq.s:430    .text:0000000000000218 .L0 
     /tmp/ccHO9MVq.s:432    .text:000000000000021c .L0 
     /tmp/ccHO9MVq.s:438    .text:000000000000021c _ZN3TCB8dispatchEv
     /tmp/ccHO9MVq.s:441    .text:000000000000021c .L0 
     /tmp/ccHO9MVq.s:442    .text:000000000000021c .L0 
     /tmp/ccHO9MVq.s:443    .text:0000000000000220 .L0 
     /tmp/ccHO9MVq.s:447    .text:000000000000022c .L0 
     /tmp/ccHO9MVq.s:448    .text:000000000000022c .L0 
     /tmp/ccHO9MVq.s:449    .text:000000000000022c .L0 
     /tmp/ccHO9MVq.s:451    .text:0000000000000230 .L0 
     /tmp/ccHO9MVq.s:453    .text:0000000000000230 .L0 
     /tmp/ccHO9MVq.s:454    .text:0000000000000230 .L0 
     /tmp/ccHO9MVq.s:459    .text:0000000000000238 .L0 
     /tmp/ccHO9MVq.s:460    .text:0000000000000238 .L0 
     /tmp/ccHO9MVq.s:461    .text:0000000000000238 .L0 
     /tmp/ccHO9MVq.s:466    .text:000000000000023c .L0 
     /tmp/ccHO9MVq.s:471    .text:0000000000000240 .L0 
     /tmp/ccHO9MVq.s:472    .text:0000000000000240 .L0 
     /tmp/ccHO9MVq.s:477    .text:0000000000000244 .L0 
     /tmp/ccHO9MVq.s:480    .text:0000000000000248 .L0 
     /tmp/ccHO9MVq.s:481    .text:0000000000000248 .L0 
     /tmp/ccHO9MVq.s:484    .text:0000000000000250 .L0 
     /tmp/ccHO9MVq.s:489    .text:0000000000000258 .L0 
     /tmp/ccHO9MVq.s:490    .text:0000000000000258 .L0 
     /tmp/ccHO9MVq.s:491    .text:0000000000000258 .L0 
     /tmp/ccHO9MVq.s:496    .text:000000000000025c .L0 
     /tmp/ccHO9MVq.s:501    .text:0000000000000260 .L0 
     /tmp/ccHO9MVq.s:502    .text:0000000000000260 .L0 
     /tmp/ccHO9MVq.s:503    .text:0000000000000260 .L0 
     /tmp/ccHO9MVq.s:514    .text:0000000000000268 .L0 
     /tmp/ccHO9MVq.s:515    .text:0000000000000268 .L0 
     /tmp/ccHO9MVq.s:520    .text:0000000000000278 .L0 
     /tmp/ccHO9MVq.s:521    .text:000000000000027c .L0 
     /tmp/ccHO9MVq.s:522    .text:000000000000027c .L0 
     /tmp/ccHO9MVq.s:524    .text:0000000000000280 .L0 
     /tmp/ccHO9MVq.s:525    .text:0000000000000280 .L0 
     /tmp/ccHO9MVq.s:527    .text:0000000000000284 .L0 
     /tmp/ccHO9MVq.s:530    .text:0000000000000288 .L0 
     /tmp/ccHO9MVq.s:534    .text:000000000000028c .L0 
     /tmp/ccHO9MVq.s:536    .text:000000000000028c .L0 
     /tmp/ccHO9MVq.s:537    .text:000000000000028c .L0 
     /tmp/ccHO9MVq.s:546    .text:000000000000029c .L0 
     /tmp/ccHO9MVq.s:547    .text:000000000000029c .L0 
     /tmp/ccHO9MVq.s:548    .text:000000000000029c .L0 
GAS LISTING /tmp/ccHO9MVq.s 			page 24


     /tmp/ccHO9MVq.s:555    .text:00000000000002a4 .L0 
     /tmp/ccHO9MVq.s:558    .text:00000000000002a8 .L0 
     /tmp/ccHO9MVq.s:564    .text:00000000000002a8 _ZN3TCB4joinEPS_
     /tmp/ccHO9MVq.s:567    .text:00000000000002a8 .L0 
     /tmp/ccHO9MVq.s:569    .text:00000000000002a8 .L0 
     /tmp/ccHO9MVq.s:570    .text:00000000000002ac .L0 
     /tmp/ccHO9MVq.s:574    .text:00000000000002b8 .L0 
     /tmp/ccHO9MVq.s:575    .text:00000000000002b8 .L0 
     /tmp/ccHO9MVq.s:576    .text:00000000000002b8 .L0 
     /tmp/ccHO9MVq.s:578    .text:00000000000002bc .L0 
     /tmp/ccHO9MVq.s:583    .text:00000000000002c0 .L0 
     /tmp/ccHO9MVq.s:586    .text:00000000000002c0 .L0 
     /tmp/ccHO9MVq.s:587    .text:00000000000002c0 .L0 
     /tmp/ccHO9MVq.s:588    .text:00000000000002c0 .L0 
     /tmp/ccHO9MVq.s:593    .text:00000000000002c4 .L0 
     /tmp/ccHO9MVq.s:595    .text:00000000000002c8 .L0 
     /tmp/ccHO9MVq.s:596    .text:00000000000002c8 .L0 
     /tmp/ccHO9MVq.s:599    .text:00000000000002d0 .L0 
     /tmp/ccHO9MVq.s:602    .text:00000000000002d4 .L0 
     /tmp/ccHO9MVq.s:603    .text:00000000000002d8 .L0 
     /tmp/ccHO9MVq.s:605    .text:00000000000002dc .L0 
     /tmp/ccHO9MVq.s:606    .text:00000000000002dc .L0 
     /tmp/ccHO9MVq.s:608    .text:00000000000002e0 .L0 
     /tmp/ccHO9MVq.s:611    .text:00000000000002e4 .L0 
     /tmp/ccHO9MVq.s:613    .text:00000000000002e8 .L0 
     /tmp/ccHO9MVq.s:622    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccHO9MVq.s:619    .bss:0000000000000000 .LANCHOR0
     /tmp/ccHO9MVq.s:631    .text:00000000000002e8 .L0 
     /tmp/ccHO9MVq.s:30     .text:000000000000001c .L0 
     /tmp/ccHO9MVq.s:133    .text:00000000000000b0 .L0 
     /tmp/ccHO9MVq.s:299    .text:0000000000000184 .L0 
     /tmp/ccHO9MVq.s:454    .text:0000000000000230 .L0 
     /tmp/ccHO9MVq.s:484    .text:0000000000000250 .L0 
     /tmp/ccHO9MVq.s:127    .text:00000000000000a8 .L7
     /tmp/ccHO9MVq.s:130    .text:00000000000000ac .L4
     /tmp/ccHO9MVq.s:182    .text:000000000000010c .L8
     /tmp/ccHO9MVq.s:140    .text:00000000000000c8 .L5
     /tmp/ccHO9MVq.s:293    .text:000000000000017c .L16
     /tmp/ccHO9MVq.s:296    .text:0000000000000180 .L13
     /tmp/ccHO9MVq.s:341    .text:00000000000001d4 .L17
     /tmp/ccHO9MVq.s:306    .text:000000000000019c .L14
     /tmp/ccHO9MVq.s:478    .text:0000000000000248 .L24
     /tmp/ccHO9MVq.s:533    .text:000000000000028c .L28
     /tmp/ccHO9MVq.s:541    .text:000000000000029c .L25
     /tmp/ccHO9MVq.s:510    .text:0000000000000268 .L26
     /tmp/ccHO9MVq.s:600    .text:00000000000002d4 .L29
     /tmp/ccHO9MVq.s:581    .text:00000000000002c0 .L31
     /tmp/ccHO9MVq.s:106    .text:0000000000000084 .LEHB0
     /tmp/ccHO9MVq.s:73     .text:000000000000005c .LFB55
     /tmp/ccHO9MVq.s:109    .text:000000000000008c .LEHE0
     /tmp/ccHO9MVq.s:122    .text:000000000000009c .LEHB1
     /tmp/ccHO9MVq.s:125    .text:00000000000000a4 .LEHE1
     /tmp/ccHO9MVq.s:189    .text:0000000000000114 .L9
     /tmp/ccHO9MVq.s:157    .text:00000000000000e4 .LEHB2
     /tmp/ccHO9MVq.s:160    .text:00000000000000ec .LEHE2
     /tmp/ccHO9MVq.s:202    .text:0000000000000128 .LEHB3
     /tmp/ccHO9MVq.s:205    .text:0000000000000130 .LEHE3
GAS LISTING /tmp/ccHO9MVq.s 			page 25


     /tmp/ccHO9MVq.s:272    .text:0000000000000158 .LEHB4
     /tmp/ccHO9MVq.s:239    .text:0000000000000130 .LFB56
     /tmp/ccHO9MVq.s:275    .text:0000000000000160 .LEHE4
     /tmp/ccHO9MVq.s:288    .text:0000000000000170 .LEHB5
     /tmp/ccHO9MVq.s:291    .text:0000000000000178 .LEHE5
     /tmp/ccHO9MVq.s:348    .text:00000000000001dc .L18
     /tmp/ccHO9MVq.s:361    .text:00000000000001f0 .LEHB6
     /tmp/ccHO9MVq.s:364    .text:00000000000001f8 .LEHE6
     /tmp/ccHO9MVq.s:2407   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccHO9MVq.s:4223   .debug_str:0000000000000a0f .LASF190
     /tmp/ccHO9MVq.s:4011   .debug_str:000000000000040d .LASF191
     /tmp/ccHO9MVq.s:4201   .debug_str:0000000000000952 .LASF192
     /tmp/ccHO9MVq.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccHO9MVq.s:625    .text:00000000000002e8 .Letext0
     /tmp/ccHO9MVq.s:3885   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccHO9MVq.s:4013   .debug_str:0000000000000419 .LASF0
     /tmp/ccHO9MVq.s:4049   .debug_str:00000000000004e2 .LASF1
     /tmp/ccHO9MVq.s:4155   .debug_str:0000000000000816 .LASF2
     /tmp/ccHO9MVq.s:4165   .debug_str:000000000000085e .LASF4
     /tmp/ccHO9MVq.s:4023   .debug_str:0000000000000450 .LASF3
     /tmp/ccHO9MVq.s:3901   .debug_str:0000000000000085 .LASF5
     /tmp/ccHO9MVq.s:4123   .debug_str:0000000000000734 .LASF6
     /tmp/ccHO9MVq.s:4041   .debug_str:00000000000004ae .LASF7
     /tmp/ccHO9MVq.s:3991   .debug_str:0000000000000359 .LASF8
     /tmp/ccHO9MVq.s:3999   .debug_str:00000000000003ac .LASF9
     /tmp/ccHO9MVq.s:3929   .debug_str:0000000000000160 .LASF10
     /tmp/ccHO9MVq.s:3981   .debug_str:000000000000031e .LASF11
     /tmp/ccHO9MVq.s:3947   .debug_str:00000000000001f6 .LASF12
     /tmp/ccHO9MVq.s:3927   .debug_str:0000000000000150 .LASF13
     /tmp/ccHO9MVq.s:4197   .debug_str:0000000000000931 .LASF14
     /tmp/ccHO9MVq.s:3969   .debug_str:00000000000002a0 .LASF15
     /tmp/ccHO9MVq.s:4185   .debug_str:00000000000008db .LASF16
     /tmp/ccHO9MVq.s:3925   .debug_str:0000000000000146 .LASF51
     /tmp/ccHO9MVq.s:3931   .debug_str:000000000000016f .LASF17
     /tmp/ccHO9MVq.s:3911   .debug_str:00000000000000df .LASF18
     /tmp/ccHO9MVq.s:4047   .debug_str:00000000000004dd .LASF19
     /tmp/ccHO9MVq.s:4117   .debug_str:0000000000000707 .LASF30
     /tmp/ccHO9MVq.s:4239   .debug_str:0000000000000b3e .LASF20
     /tmp/ccHO9MVq.s:4131   .debug_str:000000000000077f .LASF21
     /tmp/ccHO9MVq.s:4143   .debug_str:00000000000007cb .LASF22
     /tmp/ccHO9MVq.s:4127   .debug_str:000000000000075c .LASF23
     /tmp/ccHO9MVq.s:4195   .debug_str:0000000000000924 .LASF24
     /tmp/ccHO9MVq.s:4211   .debug_str:00000000000009be .LASF25
     /tmp/ccHO9MVq.s:4079   .debug_str:00000000000005e3 .LASF26
     /tmp/ccHO9MVq.s:3905   .debug_str:0000000000000097 .LASF28
     /tmp/ccHO9MVq.s:4205   .debug_str:000000000000099f .LASF27
     /tmp/ccHO9MVq.s:4081   .debug_str:00000000000005ed .LASF29
     /tmp/ccHO9MVq.s:4021   .debug_str:0000000000000446 .LASF69
     /tmp/ccHO9MVq.s:4071   .debug_str:0000000000000589 .LASF71
     /tmp/ccHO9MVq.s:4085   .debug_str:0000000000000623 .LASF73
     /tmp/ccHO9MVq.s:3997   .debug_str:0000000000000386 .LASF75
     /tmp/ccHO9MVq.s:3989   .debug_str:000000000000034f .LASF31
     /tmp/ccHO9MVq.s:4179   .debug_str:00000000000008b1 .LASF32
     /tmp/ccHO9MVq.s:4285   .debug_str:0000000000000c58 .LASF193
     /tmp/ccHO9MVq.s:4005   .debug_str:00000000000003cb .LASF194
     /tmp/ccHO9MVq.s:4255   .debug_str:0000000000000bad .LASF33
     /tmp/ccHO9MVq.s:4247   .debug_str:0000000000000b74 .LASF195
GAS LISTING /tmp/ccHO9MVq.s 			page 26


     /tmp/ccHO9MVq.s:4189   .debug_str:0000000000000904 .LASF34
     /tmp/ccHO9MVq.s:4095   .debug_str:0000000000000679 .LASF35
     /tmp/ccHO9MVq.s:4089   .debug_str:0000000000000655 .LASF36
     /tmp/ccHO9MVq.s:4187   .debug_str:00000000000008f1 .LASF37
     /tmp/ccHO9MVq.s:3979   .debug_str:0000000000000307 .LASF43
     /tmp/ccHO9MVq.s:4159   .debug_str:0000000000000831 .LASF196
     /tmp/ccHO9MVq.s:4147   .debug_str:00000000000007da .LASF197
     /tmp/ccHO9MVq.s:4045   .debug_str:00000000000004d4 .LASF38
     /tmp/ccHO9MVq.s:3921   .debug_str:0000000000000114 .LASF39
     /tmp/ccHO9MVq.s:4057   .debug_str:000000000000051c .LASF40
     /tmp/ccHO9MVq.s:3971   .debug_str:00000000000002b6 .LASF41
     /tmp/ccHO9MVq.s:4119   .debug_str:0000000000000717 .LASF42
     /tmp/ccHO9MVq.s:4257   .debug_str:0000000000000bb7 .LASF44
     /tmp/ccHO9MVq.s:4299   .debug_str:0000000000000cc6 .LASF45
     /tmp/ccHO9MVq.s:4287   .debug_str:0000000000000c6c .LASF46
     /tmp/ccHO9MVq.s:4177   .debug_str:00000000000008a6 .LASF47
     /tmp/ccHO9MVq.s:4039   .debug_str:0000000000000491 .LASF48
     /tmp/ccHO9MVq.s:4139   .debug_str:00000000000007b2 .LASF49
     /tmp/ccHO9MVq.s:3895   .debug_str:0000000000000037 .LASF50
     /tmp/ccHO9MVq.s:3937   .debug_str:0000000000000191 .LASF52
     /tmp/ccHO9MVq.s:4167   .debug_str:0000000000000865 .LASF53
     /tmp/ccHO9MVq.s:3899   .debug_str:0000000000000079 .LASF54
     /tmp/ccHO9MVq.s:4207   .debug_str:00000000000009a8 .LASF55
     /tmp/ccHO9MVq.s:4091   .debug_str:000000000000065a .LASF56
     /tmp/ccHO9MVq.s:3915   .debug_str:00000000000000f5 .LASF57
     /tmp/ccHO9MVq.s:4243   .debug_str:0000000000000b54 .LASF58
     /tmp/ccHO9MVq.s:4275   .debug_str:0000000000000c1a .LASF59
     /tmp/ccHO9MVq.s:3923   .debug_str:0000000000000131 .LASF60
     /tmp/ccHO9MVq.s:4209   .debug_str:00000000000009b3 .LASF61
     /tmp/ccHO9MVq.s:3945   .debug_str:00000000000001e0 .LASF62
     /tmp/ccHO9MVq.s:3955   .debug_str:000000000000023c .LASF63
     /tmp/ccHO9MVq.s:4269   .debug_str:0000000000000bf4 .LASF64
     /tmp/ccHO9MVq.s:4227   .debug_str:0000000000000ae7 .LASF65
     /tmp/ccHO9MVq.s:4249   .debug_str:0000000000000b79 .LASF66
     /tmp/ccHO9MVq.s:4107   .debug_str:00000000000006c9 .LASF198
     /tmp/ccHO9MVq.s:4233   .debug_str:0000000000000b15 .LASF67
     /tmp/ccHO9MVq.s:3941   .debug_str:00000000000001ac .LASF68
     /tmp/ccHO9MVq.s:4215   .debug_str:00000000000009d5 .LASF70
     /tmp/ccHO9MVq.s:4217   .debug_str:00000000000009e1 .LASF72
     /tmp/ccHO9MVq.s:4051   .debug_str:00000000000004f5 .LASF74
     /tmp/ccHO9MVq.s:4229   .debug_str:0000000000000af4 .LASF76
     /tmp/ccHO9MVq.s:4219   .debug_str:00000000000009fa .LASF77
     /tmp/ccHO9MVq.s:4293   .debug_str:0000000000000ca0 .LASF78
     /tmp/ccHO9MVq.s:3995   .debug_str:000000000000037a .LASF79
     /tmp/ccHO9MVq.s:4065   .debug_str:0000000000000557 .LASF80
     /tmp/ccHO9MVq.s:3987   .debug_str:0000000000000343 .LASF81
     /tmp/ccHO9MVq.s:3891   .debug_str:0000000000000016 .LASF82
     /tmp/ccHO9MVq.s:4061   .debug_str:0000000000000539 .LASF83
     /tmp/ccHO9MVq.s:4183   .debug_str:00000000000008c8 .LASF84
     /tmp/ccHO9MVq.s:4157   .debug_str:0000000000000824 .LASF85
     /tmp/ccHO9MVq.s:4225   .debug_str:0000000000000ad3 .LASF199
     /tmp/ccHO9MVq.s:3889   .debug_str:0000000000000011 .LASF86
     /tmp/ccHO9MVq.s:4181   .debug_str:00000000000008c2 .LASF87
     /tmp/ccHO9MVq.s:4237   .debug_str:0000000000000b36 .LASF88
     /tmp/ccHO9MVq.s:4203   .debug_str:0000000000000996 .LASF89
     /tmp/ccHO9MVq.s:4101   .debug_str:00000000000006a7 .LASF90
     /tmp/ccHO9MVq.s:4291   .debug_str:0000000000000c9b .LASF91
GAS LISTING /tmp/ccHO9MVq.s 			page 27


     /tmp/ccHO9MVq.s:3919   .debug_str:0000000000000106 .LASF93
     /tmp/ccHO9MVq.s:4053   .debug_str:00000000000004fb .LASF95
     /tmp/ccHO9MVq.s:3951   .debug_str:0000000000000217 .LASF92
     /tmp/ccHO9MVq.s:3897   .debug_str:0000000000000051 .LASF98
     /tmp/ccHO9MVq.s:3963   .debug_str:0000000000000279 .LASF94
     /tmp/ccHO9MVq.s:3939   .debug_str:0000000000000199 .LASF96
     /tmp/ccHO9MVq.s:4213   .debug_str:00000000000009d0 .LASF97
     /tmp/ccHO9MVq.s:3983   .debug_str:000000000000032d .LASF99
     /tmp/ccHO9MVq.s:4163   .debug_str:0000000000000853 .LASF200
     /tmp/ccHO9MVq.s:4145   .debug_str:00000000000007d5 .LASF100
     /tmp/ccHO9MVq.s:4259   .debug_str:0000000000000bd5 .LASF101
     /tmp/ccHO9MVq.s:4251   .debug_str:0000000000000b99 .LASF201
     /tmp/ccHO9MVq.s:3977   .debug_str:00000000000002fb .LASF102
     /tmp/ccHO9MVq.s:4221   .debug_str:0000000000000a02 .LASF103
     /tmp/ccHO9MVq.s:3957   .debug_str:0000000000000243 .LASF104
     /tmp/ccHO9MVq.s:4001   .debug_str:00000000000003ba .LASF105
     /tmp/ccHO9MVq.s:4009   .debug_str:00000000000003f5 .LASF106
     /tmp/ccHO9MVq.s:4245   .debug_str:0000000000000b6b .LASF107
     /tmp/ccHO9MVq.s:4059   .debug_str:0000000000000524 .LASF111
     /tmp/ccHO9MVq.s:4151   .debug_str:0000000000000802 .LASF108
     /tmp/ccHO9MVq.s:4103   .debug_str:00000000000006af .LASF109
     /tmp/ccHO9MVq.s:4133   .debug_str:0000000000000784 .LASF110
     /tmp/ccHO9MVq.s:4135   .debug_str:000000000000078b .LASF112
     /tmp/ccHO9MVq.s:4097   .debug_str:000000000000067e .LASF113
     /tmp/ccHO9MVq.s:4043   .debug_str:00000000000004c1 .LASF114
     /tmp/ccHO9MVq.s:4277   .debug_str:0000000000000c24 .LASF115
     /tmp/ccHO9MVq.s:4193   .debug_str:0000000000000910 .LASF116
     /tmp/ccHO9MVq.s:4093   .debug_str:0000000000000671 .LASF117
     /tmp/ccHO9MVq.s:4289   .debug_str:0000000000000c87 .LASF118
     /tmp/ccHO9MVq.s:4055   .debug_str:0000000000000514 .LASF119
     /tmp/ccHO9MVq.s:4137   .debug_str:000000000000079e .LASF120
     /tmp/ccHO9MVq.s:4295   .debug_str:0000000000000cad .LASF121
     /tmp/ccHO9MVq.s:4017   .debug_str:000000000000042c .LASF122
     /tmp/ccHO9MVq.s:4191   .debug_str:0000000000000909 .LASF123
     /tmp/ccHO9MVq.s:4169   .debug_str:000000000000086a .LASF124
     /tmp/ccHO9MVq.s:4171   .debug_str:000000000000087d .LASF125
     /tmp/ccHO9MVq.s:3935   .debug_str:000000000000017e .LASF126
     /tmp/ccHO9MVq.s:3967   .debug_str:000000000000029a .LASF127
     /tmp/ccHO9MVq.s:4007   .debug_str:00000000000003e3 .LASF128
     /tmp/ccHO9MVq.s:4015   .debug_str:0000000000000426 .LASF129
     /tmp/ccHO9MVq.s:3961   .debug_str:0000000000000267 .LASF130
     /tmp/ccHO9MVq.s:3903   .debug_str:000000000000008c .LASF131
     /tmp/ccHO9MVq.s:4161   .debug_str:000000000000083b .LASF132
     /tmp/ccHO9MVq.s:4153   .debug_str:000000000000080b .LASF133
     /tmp/ccHO9MVq.s:3965   .debug_str:0000000000000282 .LASF134
     /tmp/ccHO9MVq.s:4261   .debug_str:0000000000000bdb .LASF135
     /tmp/ccHO9MVq.s:4281   .debug_str:0000000000000c33 .LASF136
     /tmp/ccHO9MVq.s:3933   .debug_str:0000000000000174 .LASF137
     /tmp/ccHO9MVq.s:4075   .debug_str:00000000000005c5 .LASF138
     /tmp/ccHO9MVq.s:4271   .debug_str:0000000000000c06 .LASF139
     /tmp/ccHO9MVq.s:3907   .debug_str:00000000000000b8 .LASF140
     /tmp/ccHO9MVq.s:4173   .debug_str:0000000000000884 .LASF141
     /tmp/ccHO9MVq.s:4113   .debug_str:00000000000006e4 .LASF142
     /tmp/ccHO9MVq.s:4263   .debug_str:0000000000000be5 .LASF143
     /tmp/ccHO9MVq.s:4109   .debug_str:00000000000006ce .LASF144
     /tmp/ccHO9MVq.s:4027   .debug_str:0000000000000473 .LASF145
     /tmp/ccHO9MVq.s:4073   .debug_str:00000000000005b4 .LASF146
GAS LISTING /tmp/ccHO9MVq.s 			page 28


     /tmp/ccHO9MVq.s:4265   .debug_str:0000000000000bea .LASF147
     /tmp/ccHO9MVq.s:4025   .debug_str:0000000000000462 .LASF148
     /tmp/ccHO9MVq.s:4029   .debug_str:0000000000000478 .LASF149
     /tmp/ccHO9MVq.s:4121   .debug_str:0000000000000723 .LASF150
     /tmp/ccHO9MVq.s:4267   .debug_str:0000000000000bef .LASF151
     /tmp/ccHO9MVq.s:3893   .debug_str:0000000000000026 .LASF152
     /tmp/ccHO9MVq.s:4031   .debug_str:000000000000047d .LASF153
     /tmp/ccHO9MVq.s:3949   .debug_str:0000000000000206 .LASF154
     /tmp/ccHO9MVq.s:3943   .debug_str:00000000000001db .LASF155
     /tmp/ccHO9MVq.s:4297   .debug_str:0000000000000cb5 .LASF156
     /tmp/ccHO9MVq.s:4033   .debug_str:0000000000000482 .LASF157
     /tmp/ccHO9MVq.s:4175   .debug_str:0000000000000895 .LASF158
     /tmp/ccHO9MVq.s:4105   .debug_str:00000000000006c4 .LASF159
     /tmp/ccHO9MVq.s:4231   .debug_str:0000000000000b04 .LASF160
     /tmp/ccHO9MVq.s:4035   .debug_str:0000000000000487 .LASF161
     /tmp/ccHO9MVq.s:3887   .debug_str:0000000000000000 .LASF162
     /tmp/ccHO9MVq.s:4273   .debug_str:0000000000000c15 .LASF163
     /tmp/ccHO9MVq.s:4149   .debug_str:00000000000007f1 .LASF164
     /tmp/ccHO9MVq.s:4037   .debug_str:000000000000048c .LASF165
     /tmp/ccHO9MVq.s:4241   .debug_str:0000000000000b43 .LASF166
     /tmp/ccHO9MVq.s:4111   .debug_str:00000000000006df .LASF167
     /tmp/ccHO9MVq.s:4067   .debug_str:0000000000000567 .LASF168
     /tmp/ccHO9MVq.s:3917   .debug_str:0000000000000101 .LASF169
     /tmp/ccHO9MVq.s:4069   .debug_str:0000000000000578 .LASF170
     /tmp/ccHO9MVq.s:4115   .debug_str:0000000000000702 .LASF171
     /tmp/ccHO9MVq.s:3993   .debug_str:0000000000000369 .LASF172
     /tmp/ccHO9MVq.s:4235   .debug_str:0000000000000b31 .LASF173
     /tmp/ccHO9MVq.s:4063   .debug_str:0000000000000546 .LASF174
     /tmp/ccHO9MVq.s:4125   .debug_str:0000000000000747 .LASF175
     /tmp/ccHO9MVq.s:3973   .debug_str:00000000000002d2 .LASF176
     /tmp/ccHO9MVq.s:4199   .debug_str:000000000000093d .LASF177
     /tmp/ccHO9MVq.s:4099   .debug_str:0000000000000685 .LASF178
     /tmp/ccHO9MVq.s:3953   .debug_str:0000000000000225 .LASF179
     /tmp/ccHO9MVq.s:4087   .debug_str:0000000000000631 .LASF180
     /tmp/ccHO9MVq.s:3913   .debug_str:00000000000000e4 .LASF202
     /tmp/ccHO9MVq.s:565    .text:00000000000002a8 .LFB60
     /tmp/ccHO9MVq.s:614    .text:00000000000002e8 .LFE60
     /tmp/ccHO9MVq.s:4279   .debug_str:0000000000000c2c .LASF181
     /tmp/ccHO9MVq.s:3503   .debug_loc:0000000000000000 .LLST26
     /tmp/ccHO9MVq.s:584    .text:00000000000002c0 .LBB70
     /tmp/ccHO9MVq.s:591    .text:00000000000002c4 .LBE70
     /tmp/ccHO9MVq.s:3521   .debug_loc:000000000000004c .LLST27
     /tmp/ccHO9MVq.s:597    .text:00000000000002d0 .LVL53
     /tmp/ccHO9MVq.s:10     .text:0000000000000000 .LFB59
     /tmp/ccHO9MVq.s:67     .text:000000000000005c .LFE59
     /tmp/ccHO9MVq.s:41     .text:0000000000000038 .LBB26
     /tmp/ccHO9MVq.s:50     .text:0000000000000040 .LBE26
     /tmp/ccHO9MVq.s:3528   .debug_loc:000000000000006f .LLST0
     /tmp/ccHO9MVq.s:3536   .debug_loc:0000000000000093 .LLST1
     /tmp/ccHO9MVq.s:27     .text:000000000000001c .LVL0
     /tmp/ccHO9MVq.s:54     .text:0000000000000048 .LVL4
     /tmp/ccHO9MVq.s:439    .text:000000000000021c .LFB58
     /tmp/ccHO9MVq.s:559    .text:00000000000002a8 .LFE58
     /tmp/ccHO9MVq.s:3543   .debug_loc:00000000000000b6 .LLST21
     /tmp/ccHO9MVq.s:457    .text:0000000000000238 .LBB60
     /tmp/ccHO9MVq.s:464    .text:000000000000023c .LBE60
     /tmp/ccHO9MVq.s:3554   .debug_loc:00000000000000ec .LLST22
GAS LISTING /tmp/ccHO9MVq.s 			page 29


     /tmp/ccHO9MVq.s:468    .text:0000000000000240 .LBB62
     /tmp/ccHO9MVq.s:475    .text:0000000000000244 .LBE62
     /tmp/ccHO9MVq.s:3561   .debug_loc:000000000000010f .LLST23
     /tmp/ccHO9MVq.s:487    .text:0000000000000258 .LBB64
     /tmp/ccHO9MVq.s:494    .text:000000000000025c .LBE64
     /tmp/ccHO9MVq.s:3568   .debug_loc:0000000000000132 .LLST24
     /tmp/ccHO9MVq.s:499    .text:0000000000000260 .LBB66
     /tmp/ccHO9MVq.s:512    .text:0000000000000268 .LBE66
     /tmp/ccHO9MVq.s:3575   .debug_loc:0000000000000155 .LLST25
     /tmp/ccHO9MVq.s:544    .text:000000000000029c .LBB68
     /tmp/ccHO9MVq.s:557    .text:00000000000002a8 .LBE68
     /tmp/ccHO9MVq.s:482    .text:0000000000000250 .LVL40
     /tmp/ccHO9MVq.s:518    .text:0000000000000278 .LVL45
     /tmp/ccHO9MVq.s:539    .text:0000000000000298 .LVL48
     /tmp/ccHO9MVq.s:393    .text:00000000000001f8 .LFB57
     /tmp/ccHO9MVq.s:433    .text:000000000000021c .LFE57
     /tmp/ccHO9MVq.s:404    .text:0000000000000204 .LBB58
     /tmp/ccHO9MVq.s:417    .text:000000000000020c .LBE58
     /tmp/ccHO9MVq.s:3584   .debug_loc:000000000000017b .LLST20
     /tmp/ccHO9MVq.s:368    .text:00000000000001f8 .LFE56
     /tmp/ccHO9MVq.s:3592   .debug_loc:000000000000019f .LLST11
     /tmp/ccHO9MVq.s:3621   .debug_loc:0000000000000214 .LLST12
     /tmp/ccHO9MVq.s:3975   .debug_str:00000000000002f4 .LASF182
     /tmp/ccHO9MVq.s:3641   .debug_loc:0000000000000271 .LLST13
     /tmp/ccHO9MVq.s:263    .text:0000000000000154 .LBB50
     /tmp/ccHO9MVq.s:279    .text:0000000000000164 .LBE50
     /tmp/ccHO9MVq.s:3652   .debug_loc:00000000000002a7 .LLST14
     /tmp/ccHO9MVq.s:3661   .debug_loc:00000000000002cc .LLST15
     /tmp/ccHO9MVq.s:274    .text:0000000000000160 .LVL23
     /tmp/ccHO9MVq.s:280    .text:0000000000000164 .LBB52
     /tmp/ccHO9MVq.s:3871   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccHO9MVq.s:3670   .debug_loc:00000000000002f1 .LLST16
     /tmp/ccHO9MVq.s:3681   .debug_loc:0000000000000327 .LLST17
     /tmp/ccHO9MVq.s:3706   .debug_loc:0000000000000389 .LLST18
     /tmp/ccHO9MVq.s:290    .text:0000000000000178 .LVL25
     /tmp/ccHO9MVq.s:353    .text:00000000000001e0 .LBB56
     /tmp/ccHO9MVq.s:366    .text:00000000000001f8 .LBE56
     /tmp/ccHO9MVq.s:3717   .debug_loc:00000000000003bf .LLST19
     /tmp/ccHO9MVq.s:359    .text:00000000000001ec .LVL32
     /tmp/ccHO9MVq.s:363    .text:00000000000001f8 .LVL33
     /tmp/ccHO9MVq.s:209    .text:0000000000000130 .LFE55
     /tmp/ccHO9MVq.s:3724   .debug_loc:00000000000003e2 .LLST2
     /tmp/ccHO9MVq.s:3753   .debug_loc:0000000000000457 .LLST3
     /tmp/ccHO9MVq.s:3775   .debug_loc:00000000000004b6 .LLST4
     /tmp/ccHO9MVq.s:97     .text:0000000000000080 .LBB35
     /tmp/ccHO9MVq.s:113    .text:0000000000000090 .LBE35
     /tmp/ccHO9MVq.s:3786   .debug_loc:00000000000004ec .LLST5
     /tmp/ccHO9MVq.s:3795   .debug_loc:0000000000000511 .LLST6
     /tmp/ccHO9MVq.s:108    .text:000000000000008c .LVL8
     /tmp/ccHO9MVq.s:114    .text:0000000000000090 .LBB37
     /tmp/ccHO9MVq.s:3804   .debug_loc:0000000000000536 .LLST7
     /tmp/ccHO9MVq.s:3815   .debug_loc:000000000000056c .LLST8
     /tmp/ccHO9MVq.s:3840   .debug_loc:00000000000005ce .LLST9
     /tmp/ccHO9MVq.s:124    .text:00000000000000a4 .LVL10
     /tmp/ccHO9MVq.s:194    .text:0000000000000118 .LBB41
     /tmp/ccHO9MVq.s:207    .text:0000000000000130 .LBE41
     /tmp/ccHO9MVq.s:3851   .debug_loc:0000000000000604 .LLST10
GAS LISTING /tmp/ccHO9MVq.s 			page 30


     /tmp/ccHO9MVq.s:200    .text:0000000000000124 .LVL18
     /tmp/ccHO9MVq.s:159    .text:00000000000000ec .LVL13
     /tmp/ccHO9MVq.s:204    .text:0000000000000130 .LVL19
     /tmp/ccHO9MVq.s:3909   .debug_str:00000000000000d4 .LASF183
     /tmp/ccHO9MVq.s:4253   .debug_str:0000000000000ba8 .LASF184
     /tmp/ccHO9MVq.s:3985   .debug_str:000000000000033e .LASF185
     /tmp/ccHO9MVq.s:4129   .debug_str:000000000000076b .LASF203
     /tmp/ccHO9MVq.s:4077   .debug_str:00000000000005db .LASF204
     /tmp/ccHO9MVq.s:4003   .debug_str:00000000000003c5 .LASF186
     /tmp/ccHO9MVq.s:4083   .debug_str:000000000000060e .LASF205
     /tmp/ccHO9MVq.s:4141   .debug_str:00000000000007bb .LASF206
     /tmp/ccHO9MVq.s:4019   .debug_str:0000000000000440 .LASF187
     /tmp/ccHO9MVq.s:4283   .debug_str:0000000000000c49 .LASF188
     /tmp/ccHO9MVq.s:3959   .debug_str:000000000000024f .LASF189
     /tmp/ccHO9MVq.s:568    .text:00000000000002a8 .LVL50
     /tmp/ccHO9MVq.s:580    .text:00000000000002c0 .LVL51
     /tmp/ccHO9MVq.s:609    .text:00000000000002e0 .LVL54
     /tmp/ccHO9MVq.s:589    .text:00000000000002c4 .LVL52
     /tmp/ccHO9MVq.s:40     .text:0000000000000038 .LVL2
     /tmp/ccHO9MVq.s:48     .text:0000000000000040 .LVL3
     /tmp/ccHO9MVq.s:455    .text:0000000000000238 .LVL36
     /tmp/ccHO9MVq.s:528    .text:0000000000000284 .LVL46
     /tmp/ccHO9MVq.s:532    .text:000000000000028c .LVL47
     /tmp/ccHO9MVq.s:462    .text:000000000000023c .LVL37
     /tmp/ccHO9MVq.s:467    .text:0000000000000240 .LVL38
     /tmp/ccHO9MVq.s:473    .text:0000000000000244 .LVL39
     /tmp/ccHO9MVq.s:486    .text:0000000000000258 .LVL41
     /tmp/ccHO9MVq.s:492    .text:000000000000025c .LVL42
     /tmp/ccHO9MVq.s:498    .text:0000000000000260 .LVL43
     /tmp/ccHO9MVq.s:508    .text:0000000000000268 .LVL44
     /tmp/ccHO9MVq.s:403    .text:0000000000000204 .LVL34
     /tmp/ccHO9MVq.s:414    .text:000000000000020c .LVL35
     /tmp/ccHO9MVq.s:244    .text:0000000000000130 .LVL20
     /tmp/ccHO9MVq.s:271    .text:0000000000000158 .LVL22
     /tmp/ccHO9MVq.s:313    .text:00000000000001ac .LVL26
     /tmp/ccHO9MVq.s:340    .text:00000000000001d4 .LVL30
     /tmp/ccHO9MVq.s:350    .text:00000000000001e0 .LVL31
     /tmp/ccHO9MVq.s:336    .text:00000000000001cc .LVL29
     /tmp/ccHO9MVq.s:317    .text:00000000000001b4 .LVL27
     /tmp/ccHO9MVq.s:331    .text:00000000000001c4 .LVL28
     /tmp/ccHO9MVq.s:262    .text:0000000000000154 .LVL21
     /tmp/ccHO9MVq.s:277    .text:0000000000000164 .LVL24
     /tmp/ccHO9MVq.s:78     .text:000000000000005c .LVL5
     /tmp/ccHO9MVq.s:105    .text:0000000000000084 .LVL7
     /tmp/ccHO9MVq.s:147    .text:00000000000000d8 .LVL11
     /tmp/ccHO9MVq.s:181    .text:000000000000010c .LVL16
     /tmp/ccHO9MVq.s:191    .text:0000000000000118 .LVL17
     /tmp/ccHO9MVq.s:177    .text:0000000000000104 .LVL15
     /tmp/ccHO9MVq.s:151    .text:00000000000000e0 .LVL12
     /tmp/ccHO9MVq.s:172    .text:00000000000000fc .LVL14
     /tmp/ccHO9MVq.s:96     .text:0000000000000080 .LVL6
     /tmp/ccHO9MVq.s:111    .text:0000000000000090 .LVL9
     /tmp/ccHO9MVq.s:632    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccHO9MVq.s:153    .text:00000000000000e0 .LBE37
     /tmp/ccHO9MVq.s:184    .text:000000000000010c .LBB40
     /tmp/ccHO9MVq.s:193    .text:0000000000000118 .LBE40
     /tmp/ccHO9MVq.s:319    .text:00000000000001b4 .LBE52
GAS LISTING /tmp/ccHO9MVq.s 			page 31


     /tmp/ccHO9MVq.s:343    .text:00000000000001d4 .LBB55
     /tmp/ccHO9MVq.s:352    .text:00000000000001e0 .LBE55
     /tmp/ccHO9MVq.s:212    .gcc_except_table:0000000000000000 .LLSDA55
     /tmp/ccHO9MVq.s:370    .gcc_except_table:0000000000000038 .LLSDA56

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z15thread_dispatchv
_ZN15MemoryAllocator9mem_allocEm
_Znam
_ZN9Scheduler3putEP3TCB
_ZN15MemoryAllocator8mem_freeEPv
_Unwind_Resume
__gxx_personality_v0
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
